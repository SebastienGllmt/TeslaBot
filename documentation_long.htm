<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="description" content="">
<meta name="keywords" content="">
<meta name="SKYPE_TOOLBAR" content="SKYPE_TOOLBAR_PARSER_COMPATIBLE">
<meta name="skype_noc" content="developer.skype.com">

<title>Public API Reference</title>

<!-- Icon -->
<link rel="icon" href="https://developer.skype.com/assets/scom/i/images/icons/favicon.ico" type="image/vnd.microsoft.icon">
<link rel="shortcut icon" href="https://developer.skype.com/assets/scom/i/images/icons/favicon.ico">

<!-- Skype stylesheets -->
<link rel="stylesheet" href="documentation_long_files/reset.css" type="text/css">
<link rel="stylesheet" href="documentation_long_files/buttons.css" type="text/css">
<link rel="stylesheet" href="documentation_long_files/content.css" type="text/css">
<link rel="stylesheet" href="documentation_long_files/grid.css" type="text/css">
<link rel="stylesheet" href="documentation_long_files/navigation.css" type="text/css">
<link rel="stylesheet" href="documentation_long_files/content_002.css" type="text/css">
<link rel="stylesheet" href="documentation_long_files/guides.css" type="text/css">
<link rel="stylesheet" href="documentation_long_files/navigation_002.css" type="text/css">

<!-- Developer stylesheets -->
<link rel="stylesheet" href="documentation_long_files/flash.css" type="text/css">
<link rel="stylesheet" href="documentation_long_files/developer.css" type="text/css">

<!-- Default javascripts -->
<script src="documentation_long_files/jquery.js" type="text/javascript"></script>
<script src="documentation_long_files/application.js" type="text/javascript"></script>
<script src="documentation_long_files/sidebarNavGen.js" type="text/javascript"></script>

<!-- JS layout customization -->   
<script src="documentation_long_files/custom.js" type="text/javascript"></script>

<script type="text/javascript">

$(document).ready(function () {

    //When page loads...
    $(".tabContent").hide(); //Hide all content
    $(".tabContent:first").show(); //Show first tab content

    //On Click Event
    $("ul.tabs li").click(function () {

        $("ul.tabs li").removeClass("active"); //Remove any "active" class
        $(this).addClass("active"); //Add "active" class to selected tab
        $(".tabContent").hide(); //Hide all tab content

        var activeTab = $(this).find("a").attr("href"); //Find the href attribute value to identify the active tab + content
        $(activeTab).fadeIn(); //Fade in the active ID content
        return false;
    });

});

</script>
</head>
<body class="developerHeader developerHeaderThin newStyles">



<header>
    <div id="header">
        <div class="middleContent">

            <div class="actionBar">
  <div id="secure">
    <div class="default floatr">


        <a id="join" class="button2 altCta2" title="Log out" href="https://developer.skype.com/signin"><span>Sign in</span></a>


    </div>
  </div>
</div>


            <div id="skypeLogo" class="ir">
                <a href="https://developer.skype.com/"><span></span></a>
            </div>
            <div id="globalNav">
                <ul class="globalNavLeftBackground">
                    <li id="HTMLID" class="first singleColumn"><a href="https://developer.skype.com/" title="Documentation">Documentation<span></span></a>
                        <div class="pointer">
                        </div>
                        <div class="sub">
                            <div class="menu">
                                <ul>
                                    <li><a href="https://developer.skype.com/skypekit/development-guide/go-to-market" title="SkypeKit Development Guide">SkypeKit Development Guide</a></li>
                                    <li><a href="https://developer.skype.com/skypekit/reference" title="SkypeKit Reference">SkypeKit Reference</a></li>
                                    <li><a href="https://developer.skype.com/accessories" title="Desktop API">Desktop API</a></li>
<li><a href="https://developer.skype.com/silk" title="SILK Audio Codec">SILK Audio Codec</a></li>
                                    <li><a href="https://developer.skype.com/camera/skype-encoding-camera-specification" title="Encoding" camera"="">Encoding Camera</a></li>
                                </ul>
                            </div>
                        </div>
                    </li>
                    <li class="singleColumn"><a href="http://devforum.skype.com/" title="Support">Support<span></span></a>
<div class="pointer">
                        </div>
                        <div class="sub">
                            <div class="menu">
                                <ul>
<li><a href="http://devforum.skype.com/t5/Skype-Developer-News/bg-p/News" title="News">News</a></li>
                                    <li><a href="http://devforum.skype.com/" title="Skype Developer Forum">Forum</a></li>
                                    <li><a href="http://devforum.skype.com/t5/custom/page/page-id/FAQs/" title="FAQs">FAQs</a></li>
                                </ul>

                            </div>
                        </div>

                    </li>
                    <li class="singleColumn"><a href="https://developer.skype.com/account/tools" title="My Tools &amp; Downloads">My Tools &amp; Downloads<span></span></a>
						<div class="pointer">
                        </div>
                        <div class="sub">
                            <div class="menu">
                                <ul>
                                    <li><a href="https://developer.skype.com/account/projects" title="My projects">My projects</a></li>
                                    <li><a href="https://developer.skype.com/account/tools" title="Tools &amp; Downloads">Tools &amp; Downloads</a></li>
                                </ul>
                            </div>
                        </div>
					</li>
                </ul>
                <div class="searchfield">
                    <form id="skypeSearchForm" action="/search" method="get">
                    <input value="Search" name="q" title="Search" class="grayOut toggleTitle" maxlength="100" type="text">
                    </form>
                </div>
            </div>
        </div>
    </div>
</header>


  <div class="gridContainer">
    <div class="developerHeaderWrapper developerHeaderWrapperThin">
      <div class="developerHeaderWrapperContent">
        <div class="text motto">
          <h2>Design. Build. Plug into Skype.</h2>
        </div>
      </div>
    </div>

  <div id="wrapper">
<!--CONTENT-->
    <div id="content_old">
      <h2>Skype Desktop <span class="caps">API</span> Reference Manual</h2>
<p><strong>(Formerly known as Skype Public <span class="caps">API</span>)</strong></p>
<p><a href="https://developer.skype.com/public-api-reference-index">Quick link to the full index of this reference.</a></p>
<p><a name="PurposeOfThisGuide"></a></p>
<h3>Purpose of this guide</h3>
<p>This document describes the Skype application programming interface (<span class="caps">API</span>) for Windows, the Skype APIs for Linux and Mac, and provides a reference guide for the Skype developer community.</p>
<p><a name="WhoReadsThisGuide"></a></p>
<h3>Who reads this guide?</h3>
<p>Skype’s developer community who work with us to enrich the Skype 
experience and extend the reach of free telephone calls on the internet.</p>
<p><a name="Contents"></a></p>
<h3>What is in this guide?</h3>
<p>This document contains the following information:</p>
<ul>
	<li><a href="#Overview">Overview of the Skype <span class="caps">API</span></a></li>
	<li><a href="#Windows">Using the Skype <span class="caps">API</span> on Windows</a></li>
	<li><a href="#Linux">Using the Skype <span class="caps">API</span> on Linux</a></li>
	<li><a href="#Mac">Using the Skype <span class="caps">API</span> on Mac</a></li>
	<li><a href="#Protocol">Skype protocol</a></li>
	<li><a href="#Reference">Skype reference</a>
	<ul>
		<li><a href="#TERMS">Terminology</a></li>
		<li><a href="#COMMANDS">Commands</a></li>
		<li><a href="#OBJECTS">Objects</a></li>
		<li><a href="#PROPERTIES_OBJECT">Object properties</a></li>
		<li><a href="#PROPERTIES_GENERAL">General parameters</a></li>
		<li><a href="#NOTIFICATIONS">Notifications</a></li>
		<li><a href="#ERRORS">Error codes</a></li>
	</ul></li>
	<li><a href="#URI">Skype <span class="caps">URI</span></a></li>
	<li><a href="#Release">Skype release notes</a></li>
</ul>
<p><a name="MoreInformation"></a></p>
<h3>More information</h3>
<ul>
	<li>Share ideas and information on the <a href="http://forum.skype.com/index.php?showforum=16">Skype Desktop <span class="caps">API</span> forum</a> on the Skype websites.</li>
</ul>
<p><a name="LegalInformation"></a></p>
<h3>Legal information</h3>
<p>This document is the property of Skype Technologies S.A. and its 
affiliated companies (Skype) and is protected by copyright and other 
intellectual property rights laws in Luxembourg and abroad. Skype makes 
no representation or warranty as to the accuracy, completeness, 
condition, suitability, or performance of the document or related 
documents or their content, and shall have no liability whatsoever to 
any party resulting from the use of any of such documents. By using this
 document and any related documents, the recipient acknowledges Skype’s 
intellectual property rights thereto and agrees to the terms above, and 
shall be liable to Skype for any breach thereof. For usage restrictions 
please read the <a href="http://www.skype.com/go/eula">user license agreement</a> (<span class="caps">EULA</span>).</p>
<p><a name="TextNotation"></a></p>
<h3>Text notation</h3>
<p>This document uses <code>monospace</code> font to represent code, file names, commands, objects and parameters. The following text conventions apply for syntax:</p>
<ul>
	<li><code>CALL</code> – uppercase text indicates a keyword, such as command, notification, and object.</li>
	<li><code>property</code> – lowercase text indicates a category of a keyword</li>
	<li><code>&lt;username&gt;</code> – angle brackets indicate an identifier, such as username or call id</li>
	<li><code>[&lt;target&gt;]</code> – square brackets identify optional items</li>
	<li><code>*</code> – asterisk indicates repetitive items</li>
	<li><code>|</code> – vertical bar means “or”</li>
	<li><code>-&gt;</code> – command issued by client (used in examples)</li>
	<li><code>&lt;-</code> – response or notification from Skype (used in examples)</li>
	<li><code>//</code> – comment line (used in examples)</li>
</ul>
<p><a name="Overview"></a></p>
<h2>Overview of the Skype <span class="caps">API</span></h2>
<p>The Skype <span class="caps">API</span> provides a mechanism for 3rd 
party scripts, applications and devices to control Skype UI functions 
and implement additional or improved features to complement the Skype.</p>
<p>The <span class="caps">API</span> has two layers:</p>
<ul>
	<li>Communication Layer – is a set of methods for external application 
to establish connection to Skype client and communicate with it.</li>
</ul>
<ul>
	<li>Command Protocol Layer – is a text-based “language” that external 
applications can use to speak to the Skype client, once communication 
channel is established by Communication Layer.</li>
</ul>
<p>Additionally, there are several Skype <span class="caps">API</span> wrapper libraries that encapsulate the functionality of Skype <span class="caps">API</span>. Such wrappers can act as optional third layers.</p>
<p><a name="CommunicationLayer"></a></p>
<h3>Communication Layer</h3>
<p>Communication Layer provides a mechanism for external application to 
communicate with Skype. This layer is platform-dpendant – a transport 
mechanism to exchange data with Skype is different on Windows, Linux and
 Mac operating systems.</p>
<p>For more information on how to implement communication layers for 
different operating systems, see following sections of this document:</p>
<ul>
	<li><a href="#Windows">Using the Skype <span class="caps">API</span> on Windows</a></li>
	<li><a href="#Linux">Using the Skype <span class="caps">API</span> on Linux</a></li>
	<li><a href="#Mac">Using the Skype <span class="caps">API</span> on Mac</a></li>
</ul>
<p>Once your application has attached itself to Skype via Communication 
Layer, it can forget all about it and proceed with talking to Skype, 
using Protocol layer commands.</p>
<p><a name="ProtocolLayer"></a></p>
<h3>Protocol Layer</h3>
<p>The Protocol Layer is a language of commands that Skype knows how to respond to. The syntax of that language is described in <a href="#Reference">Skype <span class="caps">API</span> reference</a> portion of this documument.</p>
<p>Commands sent to Skype must be in <span class="caps">UTF</span>-8 format.</p>
<p>To get a better feel how the command protocol works, you should start by downloading the <a href="http://developer.skype.com/resources/Tracer.exe">Skype <span class="caps">API</span> Tracer</a> program. Once you get that program running (and have authorised its connection to the <span class="caps">API</span> in Skype UI) you can play around with commands you can find in the <a href="#COMMANDS">Commands</a> section.</p>
<p>For example, you can query various properties of a contact record (<a href="#OBJECT_USER">User object</a>) like this:</p>
<pre style="codeSample">-&gt; get user echo123 birthday
&lt;- USER echo123 BIRTHDAY 0
-&gt; get user echo123 is_video_capable
&lt;- USER echo123 IS_VIDEO_CAPABLE FALSE
</pre>
<p>A test call to Skype’s call testing service using <span class="caps">API</span> would look approximately like that:</p>
<pre style="codeSample">-&gt; call echo123
&lt;- CALL 14662 STATUS UNPLACED
&lt;- CALL 14662 STATUS UNPLACED
&lt;- CALL 14662 STATUS ROUTING
&lt;- USER echo123 COUNTRY United Kingdom
&lt;- USER echo123 COUNTRY United Kingdom
&lt;- USER echo123 COUNTRY 
&lt;- CALL 14662 STATUS RINGING
&lt;- USER echo123 COUNTRY United Kingdom
&lt;- CALL 14662 VAA_INPUT_STATUS FALSE
&lt;- CALL 14662 STATUS INPROGRESS
&lt;- CALL 14662 DURATION 1
&lt;- CALL 14662 DURATION 2
&lt;- CALL 14662 DURATION 3
&lt;- CALL 14662 STATUS FINISHED
</pre>
<p><a name="Wrappers"></a></p>
<h3>Wrappers</h3>
<p>While text based command protocol is more universal, using pre-built libraries is easier to start with. We have had three <span class="caps">API</span> wrapper libraries: Skype4COM, Skype4Py and Skype4Java. Currently, only Skype4COM wrapper is still supported.</p>
<p><a name="Windows"></a></p>
<h2>Skype <span class="caps">API</span> on Windows</h2>
<p>When developing applications to work with Skype, follow these general guidelines:</p>
<ul>
	<li>Give intuitive names to executable files (.exe files) because this 
name is displayed to the user for confirmation. If the name is unclear, 
the user might not allow the application to access Skype.</li>
	<li>Sign applications with VeriSign’s CodeSigning certificate.</li>
	<li>The application must support the <code>NAME</code> command and publish its name.<br>
Skype for Windows sends and receives <span class="caps">API</span> commands using <code>WM_COPYDATA</code> messages. Use the <code>RegisterWindowMessage</code> method to register the following messages:</li>
	<li><code>SkypeControlAPIDiscover</code></li>
	<li><code>SkypeControlAPIAttach</code><br>
To initiate communication, a client application broadcasts the <code>SkypeControlAPIDiscover</code> message, including its window handle as a <code>wParam</code> parameter. Skype responds with a <code>SkypeControlAPIAttach</code> message to the specified window and indicates the connection status with one of the following values:</li>
	<li><code>SKYPECONTROLAPI_ATTACH_SUCCESS = 0</code> – The client is attached and the <span class="caps">API</span> window handle is provided in <code>wParam</code> parameter.</li>
	<li><code>SKYPECONTROLAPI_ATTACH_PENDING_AUTHORIZATION = 1</code> – 
Skype acknowledges the connection request and is waiting for user 
confirmation. The client is not yet attached and must wait for the <code>SKYPECONTROLAPI_ATTACH_SUCCESS</code> message.</li>
	<li><code>SKYPECONTROLAPI_ATTACH_REFUSED = 2</code> – The user has explicitly denied access to client.</li>
	<li><code>SKYPECONTROLAPI_ATTACH_NOT_AVAILABLE = 3</code> – The <span class="caps">API</span> is not available at the moment, for example because no user is currently logged in. The client must wait for a <code>SKYPECONTROLAPI_ATTACH_API_AVAILABLE</code> broadcast before attempting to connect again.<br>
When the <span class="caps">API</span> becomes available, Skype broadcasts the <code>SKYPECONTROLAPI_ATTACH_API_AVAILABLE = 0x8001</code> message to all application windows in the system. The data exchange uses commands (or responses), provided as null-terminated <span class="caps">UTF</span>-8
 strings. The terminating 0 must be transferred as well. You cannot 
combine several messages in one packet. There is no limit to the length 
of the transferred string.</li>
</ul>
<p><strong>Note:</strong> The result of processing the message must be different from zero (0), otherwise Skype considers that the connection broken.</p>
<p>If the <span class="caps">API</span> client spends more than 1 second processing a message, the connection is disconnected. Use the <code>PING</code> command to test the connection status. To ease debugging during development, in regedit enter the key <code>APITimeoutDisabled (DWORD value, 0 = timeout enabled 1 = timeout disabled)</code> into the <code>HKCU\Software\Skype\Phone\UI</code> file in the registry to override the 1 second timeout.</p>
<p>To check if Skype is installed, in regedit check if the following key exists: <code>HKCU\Software\Skype\Phone, SkypePath</code> . This key points to the location of the <code>skype.exe file</code> . If this key does not exist, check if the <code>HKLM\Software\Skype\Phone, SkypePath</code> key exists. If the <code>HKCU</code> key does not exist but the <code>HKLM</code> key is present, Skype has been installed from an administrator account but not been used from the current account.</p>
<p><a name="Linux"></a></p>
<h2>Skype <span class="caps">API</span> on Linux</h2>
<p>The Skype <span class="caps">API</span> for Linux, version 1.4 uses 
the Skype protocol 7, with few limitations in comparison to protocol 7 
implementation in our Windows version. The list of unavailable commands 
can be found at the bottom of this page.</p>
<p><a name="Distributions"></a></p>
<h3>Supported distributions</h3>
<p>Skype for Linux runs on the following Linux distributions:</p>
<ul>
	<li>Feisty Fawn (7.04)</li>
	<li>Debian Etch</li>
	<li>Mepis</li>
	<li>Xandros</li>
	<li>Fedora 7 / Fedora Core 6</li>
	<li>OpenSUSE 10+</li>
	<li>Mandriva</li>
	<li>Dynamic / Static / Static <span class="caps">OSS</span> <br>
The client may also work with other distributions but has not been tested.</li>
</ul>
<p><a name="Transport"></a></p>
<h3>Transport</h3>
<p>Use the Skype <span class="caps">API</span> for Linux, version 1.3, with either:</p>
<ul>
	<li>D-<span class="caps">BUS</span> messaging</li>
	<li>X11 messaging</li>
</ul>
<hr>
<p><strong>Note:</strong> X11 messaging is still under development. The final release of Skype for Linux <span class="caps">API</span>, version 1.3, will include examples of working with X11 and a description of the Skype action handler for X11.<br>
</p><hr><p></p>
<p><a name="X11Messaging"></a></p>
<h4>X11 messaging</h4>
<p>The X11 messaging framework is included in all Linux distributions.</p>
<p><a name="DBUSMessaging"></a></p>
<h4>D-<span class="caps">BUS</span> messaging</h4>
<p>Download the D-<span class="caps">BUS</span> libraries, version 0.23</p>
<p>D-<span class="caps">BUS</span> behavior in this release is changed from earlier releases, as follows:</p>
<ul>
	<li>D-<span class="caps">BUS</span> is disabled by default to avoid startup delays for developers who do not want to use it.</li>
	<li>To use D-<span class="caps">BUS</span> in a manner that is consistent with earlier versions of the Skype <span class="caps">API</span> for Linux, enter the following switches in the command line when you start the Skype client:<br>
<code>--enable-dbus --use-system-dbus</code></li>
</ul>
<p>The second switch is necessary because Skype now uses the 
session-dbus by default to enable multiple clients to run on one machine
 simultaneously.<br>
</p><hr><br>
<strong>Important:</strong> The Skype for Linux <span class="caps">API</span>, version 1.3, beta uses D-<span class="caps">BUS</span> version .23. The next release will move to support for D-<span class="caps">BUS</span> version .61+.<br>
<hr><p></p>
<p>If you use <span class="caps">RPM</span> Package Manager to install skype, the D-<span class="caps">BUS</span> files are automatically configured. If you do not use <span class="caps">RPM</span> for the installation, you must create a configuration file as follows:</p>
<ol>
	<li>Create a text file named <code>skype.conf</code></li>
	<li>Save this file to <code>/etc/dbus-1/system.d/skype.conf</code></li>
	<li>Add the following information to the file:</li>
</ol>
<pre style="codeSample">&lt;!DOCTYPE busconfig PUBLIC "-//freedesktop//
DTD D-BUS Bus Configuration 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/busconfig.dtd"&gt;
&lt;busconfig&gt;
&lt;policy context="default"&gt;
&lt;allow own="com.Skype.API"/&gt;
&lt;allow send_destination="com.Skype.API"/&gt;
&lt;allow receive_sender="com.Skype.API"/&gt;
&lt;allow send_path="/com/Skype"/&gt;
&lt;/policy&gt;
&lt;/busconfig&gt;</pre>
<p><a name="UsingSkypeAPIforLinux"></a></p>
<h3>Using the Skype <span class="caps">API</span> for Linux</h3>
<p>To access the Skype <span class="caps">API</span> from a client application:</p>
<ul>
	<li>The application passes its name to Skype: <br>
<code>-&gt; NAME &lt;application_name&gt;</code></li>
	<li>Skype pops up the following response to the user:&lt;- <application_name> wants to talk to Skype. OK?<br>
<hr><br>
<strong>Important:</strong> On Linux, if you use spaces in the 
application_name, the name is truncated to the space. For example, if 
the application name is Skype for Java, the message displayed is “Skype 
wants to talk . . .”. Also, on Linux it is essential to pass the 
application name before exchanging protocols, otherwise the connection 
will not work.<br>
<hr></application_name></li>
	<li>If the user selects OK, protocol messages are exchanged:</li>
</ul>
<pre style="codeSample">&lt;- OK
-&gt; PROTOCOL 5
&lt;- PROTOCOL 5</pre>
<p>The Skype protocol manages the subsequent session.<br>
</p><hr><br>
<strong>Note:</strong> The session is associated with the window ID of the Skype <span class="caps">API</span> client. If the window is closed for any reason, a new session must be established.<br>
<hr><p></p>
<p><a name="DBUSUsage"></a></p>
<h4>D-<span class="caps">BUS</span> usage</h4>
<p>D-<span class="caps">BUS</span> uses the following:</p>
<ul>
	<li>Service is <code>com.Skype.API</code></li>
	<li>Communication paths:
	<ul>
		<li>The client-to-Skype path is <code>/com/Skype</code>.</li>
		<li>The Skype-to-client path is <code>/com/Skype/Client</code>.</li>
	</ul></li>
	<li>Methods are:
	<ul>
		<li>Use the <code>Invoke</code> method with one string parameter for client-to-Skype commands.</li>
		<li>Use the <code>Notify</code> method for Skype-to-client commands and responses.<br>
D-<span class="caps">BUS</span> is disabled by default.</li>
	</ul></li>
</ul>
<p><a name="Protocol7CommandsCurrentlyMissing"></a></p>
<h3>Protocol 7 commands currently missing from Linux version</h3>
<ul>
	<li><code>GET / SET AVATAR</code></li>
	<li><code>GET / SET PCSPEAKER</code></li>
	<li><code>GET / SET RINGTONE</code></li>
	<li><code>GET / SET UI_LANGUAGE</code></li>
	<li><code>GET / SET VIDEO_IN</code></li>
	<li><code>GET / SET WALLPAPER</code></li>
	<li><code>GET / SET SILENT_MODE</code></li>
	<li><code>GET PREDICTIVE_DIALER_COUNTRY</code></li>
	<li><code>GET SKYPEVERSION</code></li>
	<li><code>GET USER</code></li>
	<li><code>SET MENU_ITEM</code></li>
	<li><code>RINGER</code></li>
</ul>
<p>Also most of the <code>OPEN</code> commands for various Skype UI windows have not been implemented yet.</p>
<p><a name="Mac"></a></p>
<h2>Skype <span class="caps">API</span> on Mac</h2>
<p>The Skype <span class="caps">API</span> is available in Skype for Mac
 OS X starting from version 1.3 and has interfaces for Cocoa, Carbon, 
and AppleScript. The Cocoa and Carbon interfaces are implemented in <a href="http://download.skype.com/share/devzone/example_macosx.dmg">Skype.framework</a>.
 Skype recommends that you include the Skype framework in your 
application as an embedded framework. To do so, copy it into the 
application bundle and link it to the application.</p>
<p>Client applications send string commands to control Skype. The format of these strings commands is described in the <a href="#Reference">Skype <span class="caps">API</span> reference</a>.
 If you are using a Cocoa or Carbon interface, Skype will send 
information back to your application by calling asynchronous delegate 
functions/methods.</p>
<p>Below, you’ll find the instructions specific to <a href="#Cocoa">Cocoa</a>, <a href="#Carbon">Carbon</a>, and <a href="#AppleScript">AppleScript</a>.</p>
<p><a name="Cocoa"></a></p>
<h3>Cocoa</h3>
<p><a name="CocoaSkypeAPIClass"></a></p>
<h4>SkypeAPI class</h4>
<p><a name="CocoaClassMethods"></a></p>
<h5>Class methods</h5>
<pre style="codeSample">+ (BOOL)isSkypeRunning;</pre>
<p>This method returns <span class="caps">YES</span>, when Skype is running and NO otherwise.</p>
<pre style="codeSample">+ (void)setSkypeDelegate:(NSObject&lt;SkypeAPIDelegate&gt;*)aDelegate;</pre>
<p>You must design an object to be Skype delegate (see delegate methods 
below). Use this method to set your object as Skype delegate.</p>
<pre style="codeSample">+ (NSObject&lt;SkypeAPIDelegate&gt;*)skypeDelegate;</pre>
<p>Returns the object which is currently set as Skype delegate.</p>
<pre style="codeSample">+ (void)removeSkypeDelegate;</pre>
<p>Removes current Skype delegate.</p>
<pre style="codeSample">+ (void)connect;</pre>
<p>Call this method after you have set Skype delegate. It will try to connect your application to Skype. Delegate method <code>skypeAttachResponse</code> will let you know, whether your application was successfully connected or not.</p>
<pre style="codeSample">+ (void)disconnect;</pre>
<p>Disconnects your application from Skype.</p>
<pre style="codeSample">In 2.5 and later:
+ (NSString*)sendSkypeCommand:(NSString*)aCommandString;

In 1.5:
+ (void)sendSkypeCommand:(NSString*)aCommandString; 
</pre>
<p>Use this method to control Skype or request information. <code>aCommandString</code> is a Skype <span class="caps">API</span> string as described in Skype <span class="caps">API</span>
 protocol documentation. Note, that if you are using Skype.framework 2.5
 or later then you have to change your code a little bit compared to 
1.5, because in 2.5 sendSkypeCommand returns strings (in 1.5 all 
information was returned in asynchronous callbacks).</p>
<p><a name="CocoaDelegateMethods"></a></p>
<h5>Delegate methods</h5>
<p><strong>Required method</strong></p>
<pre style="codeSample">// delegate protocol
@protocol SkypeAPIDelegate
- (NSString*)clientApplicationName;
@end</pre>
<p>This method should return the name of your application. This name 
will be shown to the user, when your application uses Skype. The name 
should not include any version information.</p>
<p><strong>Optional methods</strong></p>
<pre style="codeSample">// delegate informal protocol
@interface NSObject (SkypeAPIDelegateInformalProtocol)
- (void)skypeNotificationReceived:(NSString*)aNotificationString;</pre>
<p>This is the main delegate method Skype uses to send information to your application. <code>aNotificationString</code> is a Skype <span class="caps">API</span> string as described in Skype <span class="caps">API</span> protocol documentation.</p>
<pre style="codeSample">- (void)skypeAttachResponse:(unsigned)aAttachResponseCode;</pre>
<p>This method is called after Skype <span class="caps">API</span> client application has called connect. <code>aAttachResponseCode</code> is 0 on failure and 1 on success.</p>
<pre style="codeSample">- (void)skypeBecameAvailable:(NSNotification*)aNotification;</pre>
<p>This method is called after Skype has been launched.</p>
<pre style="codeSample">- (void)skypeBecameUnavailable:(NSNotification*)aNotification;</pre>
<p>This method is called after Skype has quit.</p>
<pre style="codeSample">@end</pre>
<p><a name="CocoaGuidelines"></a></p>
<h4>Guidelines</h4>
<p>Design an object in your application to be a Skype delegate. This object must implement the required delegate method <code>clientApplicationName</code>.
 In order to receive information from Skype, it is recommended that your
 delegate object also implements the optional delegate methods. The 
first method your application should call is <code>setSkypeDelegate</code>. In most implementations, that will probably be:</p>
<pre style="codeSample">[SkypeAPI setSkypeDelegate:self];</pre>
<p>Next, you should call connect. After you have received positive response with <code>skypeAttachResponse</code>, you can start sending commands to Skype by using <code>sendSkypeCommand</code>. For example:</p>
<pre style="codeSample">[SkypeAPI sendSkypeCommand:@"CALL echo123"];</pre>
<p>When your application quits or wants to disconnect from Skype, you should call disconnect.</p>
<p><a name="Carbon"></a></p>
<h3>Carbon</h3>
<p>In order to use Skype <span class="caps">API</span>, you must create a single instance of struct <code>SkypeDelegate</code>.
 If you set callback functions for the members of this struct, then 
Skype will call these functions to send information to your application.
 The only required member of this struct is a string <code>clientApplicationName</code>.</p>
<p>Here is the definition of <code>SkypeDelegate</code>:</p>
<pre style="codeSample">struct SkypeDelegate
{
// Required member
CFStringRef clientApplicationName;
// Optional members, can be NULL
void (*SkypeNotificationReceived)(CFStringRef aNotificationString);
void (*SkypeAttachResponse)(unsigned int aAttachResponseCode);
void (*SkypeBecameAvailable)(CFPropertyListRef aNotification);
void (*SkypeBecameUnavailable)(CFPropertyListRef aNotification);
};
</pre>
<p><a name="CarbonDescription"></a></p>
<h4>Description</h4>
<pre style="codeSample">CFStringRef clientApplicationName;</pre>
<p>This string should be the name of your application. It will be shown 
to the user, when your application uses Skype. The name should not 
include any version information.</p>
<pre style="codeSample">void (*SkypeNotificationReceived)(CFStringRef aNotificationString);</pre>
<p>This is the main delegate function Skype uses to send information to your application. <code>aNotificationString</code> is a Skype <span class="caps">API</span> string as described in Skype <span class="caps">API</span> protocol documentation.</p>
<pre style="codeSample">void (*SkypeAttachResponse)(unsigned int aAttachResponseCode);</pre>
<p>This function is called after Skype <span class="caps">API</span> client application has called <code>ConnectToSkype</code>. <code>aAttachResponseCode</code> is 0 on failure and 1 on success.</p>
<pre style="codeSample">void (*SkypeBecameAvailable)(CFPropertyListRef aNotification);</pre>
<p>This function is called after Skype has been launched.</p>
<pre style="codeSample">void (*SkypeBecameUnavailable)(CFPropertyListRef aNotification);</pre>
<p>This function is called after Skype has quit.</p>
<p>You should define the functions like this:</p>
<pre style="codeSample">void SkypeNotificationReceived(CFStringRef aNotificationString){}
void SkypeAttachResponse(unsigned int aAttachResponseCode){}
void SkypeBecameAvailable(CFPropertyListRef aNotification){}
void SkypeBecameUnavailable(CFPropertyListRef aNotification){} </pre>
<p>and you can set them as members of your <code>SkypeDelegate</code> struct like so:</p>
<pre style="codeSample">SkypeDelegate mySkypeDelegate;
mySkypeDelegate.SkypeNotificationReceived = SkypeNotificationReceived;
mySkypeDelegate.SkypeAttachResponse = SkypeAttachResponse;
mySkypeDelegate.SkypeBecameAvailable = SkypeBecameAvailable;
mySkypeDelegate.SkypeBecameUnavailable = SkypeBecameUnavailable;
mySkypeDelegate.clientApplicationName = CFSTR("My Carbon App");</pre>
<p><a name="SkypeAPIMethods"></a></p>
<h4>Skype <span class="caps">API</span> methods</h4>
<pre style="codeSample">Boolean IsSkypeRunning(void);</pre>
<p>This function returns <span class="caps">TRUE</span>, when Skype is running and <span class="caps">FALSE</span> otherwise.</p>
<pre style="codeSample">void SetSkypeDelegate(struct SkypeDelegate* aDelegate);</pre>
<p>You must design a struct to be Skype delegate (see <code>SkypeDelegate</code> description above). Use this function to set your struct as Skype delegate.</p>
<pre style="codeSample">struct SkypeDelegate* GetSkypeDelegate(void);</pre>
<p>Returns the struct which is currently set as Skype delegate.</p>
<pre style="codeSample">void RemoveSkypeDelegate(void);</pre>
<p>Removes current Skype delegate.</p>
<pre style="codeSample">void ConnectToSkype(void);</pre>
<p>Call this function after you have set Skype delegate. It will try to 
connect your application to Skype. Delegate callback function <code>skypeAttachResponse</code> will let you know, whether your application was successfully connected or not.</p>
<pre style="codeSample">void DisconnectFromSkype(void);</pre>
<p>Disconnects your application from Skype.</p>
<pre style="codeSample">CFStringRef SendSkypeCommand(CFStringRef aCommandString);
</pre>
<p>Use this function to control Skype or request information. <code>aCommandString</code> is a Skype <span class="caps">API</span> string as described in Skype <span class="caps">API</span> protocol documentation.</p>
<p>In Skype.framework 2.6.0.142 and later: CFStringRef !SendSkypeCommand(CFStringRef aCommandString);<br>
Older versions: void !SendSkypeCommand(CFStringRef aCommandString);</p>
<p>Note, that if you are using Skype.framework 2.6.0.142 or later then 
you have to change your code a little bit compared to older versions, 
because in 2.6.0.142 !SendSkypeCommand returns strings (previously all 
information was returned in asynchronous callbacks). Skype versions 2.5 
and higher know how to return info synchronously. So, if you want to 
support Skype version 1.5, then you still have to listen to asynchronous
 callbacks.</p>
<p><a name="SkypeAPIMethodsGuidelines"></a></p>
<h4>Guidelines</h4>
<p>The first method your application should call is <code>SetSkypeDelegate</code>, where <code>aDelegate</code> is your <code>SkypeDelegate</code> struct. In most implementations, that will probably be:</p>
<pre style="codeSample">SetSkypeDelegate(&amp;amp;myCarbonDelegate);</pre>
<p>Next, you should call <code>ConnectToSkype</code>. After you have received positive response with <code>SkypeAttachResponse</code>, you can start sending commands to Skype by using <code>SendSkypeCommand</code>. For example:</p>
<pre style="codeSample">SendSkypeCommand(CFSTR("CALL echo123"));</pre>
<p>When your application quits or wants to disconnect from Skype, you should call <code>DisconnectFromSkype</code>.</p>
<p><a name="AppleScript"></a></p>
<h3>AppleScript</h3>
<p>There is just one command for Skype <span class="caps">API</span>, but it is a very powerful command, because you can send any the command strings as specified in Skype <span class="caps">API</span> protocol documentation to control Skype or request information.</p>
<p><a name="AppleScriptExamples"></a></p>
<h4>Examples</h4>
<pre style="codeSample">tell application "Skype"
*send command "MESSAGE echo123 check" script name "My Script"
end tell
tell application "Skype"
*send command "CALL echo123" script name "My Other Script"
end tell</pre>
<p><a name="Protocol"></a></p>
<h2>Skype protocol</h2>
<p>The Skype protocol is currently in its seventh version. Starting with
 protocol 1 (the first Skype protocol) a new version is created only 
when new commands become incompatible with existing commands. The 
protocol number does not increase when new commands are introduced but 
existing commands remain unchanged.</p>
<p><a name="Protocol8"></a></p>
<h3>Protocol 8</h3>
<p>Protocol 8 is the current version of the Skype protocol.</p>
<ul>
	<li>New <a href="#OBJECT_CALL"><span class="caps">CALL</span> <span class="caps">STATUS</span></a> enumerator – <code>WAITING_REDIAL_COMMAND</code>.</li>
</ul>
<ul>
	<li>New <a href="#OBJECT_CALL"><span class="caps">CALL</span> <span class="caps">STATUS</span></a> enumerator – <code>REDIAL_PENDING</code>.</li>
</ul>
<ul>
	<li>New <a href="#OBJECT_SMS"><span class="caps">SMS</span> <span class="caps">FAILUREREASON</span></a> enumerator – <code>NO_SENDERID_CAPABILITY</code>.</li>
</ul>
<ul>
	<li>Sending chat messages and <code>CHAT CREATE</code> commands may now fail with a new error code: 615, “<span class="caps">CHAT</span>: chat with given contact is disabled”.</li>
</ul>
<p><a name="Protocol7"></a></p>
<h3>Protocol 7</h3>
<ul>
	<li>Call transfer <span class="caps">API</span>, We have two new <span class="caps">CALL</span> statuses: <code>TRANSFERRING|TRANSFERRED</code></li>
	<li>Modified <span class="caps">CHATMESSAGE</span> property <span class="caps">TYPE</span> enumerations:</li>
</ul>
<p><code>TYPE = POSTEDCONTACTS|GAP_IN_CHAT|SETROLE|KICKED|SETOPTIONS| KICKBANNED|JOINEDASAPPLICANT|SETPICTURE|SETGUIDELINES</code></p>
<p><a name="Protocol6"></a></p>
<h3>Protocol 6</h3>
<ul>
	<li><span class="caps">VOICEMAIL</span> command enters deprecation process and is replaced by <span class="caps">CALLVOICEMAIL</span> command.</li>
</ul>
<p><a name="Protocol5"></a></p>
<h3>Protocol 5</h3>
<p>Protocol 5 is the current version of the Skype protocol and is used by the following versions of Skype:</p>
<ul>
	<li>2.0 – Windows</li>
	<li>1.4.0.84 – Windows</li>
	<li>1.3.0.33 – Windows and Mac<br>
This protocol introduced multiperson chat commands, one-to-one video calls, call forwarding, and contact grouping.</li>
</ul>
<p><a name="Protocol4"></a></p>
<h3>Protocol 4</h3>
<p>Protocol 4 is used by the following versions of Skype:</p>
<ul>
	<li>1.2.0.11 – Windows</li>
	<li>1.1.0.3 – Windows and Linux<br>
This protocol introduced <span class="caps">ISO</span> code prefixes for language and country.</li>
</ul>
<p><a name="Protocol3"></a></p>
<h3>Protocol 3</h3>
<p>Protocol 3 is used by the following version of Skype:</p>
<ul>
	<li>1.1.0.61 – Windows<br>
This protocol introduced a compatibility layer for previous versions of instant messaging.</li>
</ul>
<p><a name="Protocol2"></a></p>
<h3>Protocol 2</h3>
<p>Protocol 2 is used by the following version of Skype:</p>
<ul>
	<li>1.0.0.94<br>
This protocol implemented the following changes:</li>
	<li>Introduced the <code>SKYPEME</code> online status</li>
	<li>For calls on hold, notifies clients with either <code>LOCALHOLD</code> or <code>REMOTEHOLD</code> . Protocol 1 simply returned <code>ONHOLD</code> .</li>
	<li>Introduces the call status, <code>CANCELLED</code> .</li>
</ul>
<p><a name="Protocol1"></a></p>
<h3>Protocol 1 and 2 compatibility</h3>
<p>If the requested protocol is smaller than 3, all incoming commands are converted as follows:</p>
<ul>
	<li><code>SEARCH MESSAGES</code> → <code>SEARCH CHATMESSAGES</code></li>
	<li><code>SEARCH MISSEDMESSAGES</code> → <code>SEARCH MISSEDCHATMESSAGES</code></li>
	<li><code>GET MESSAGE</code> → <code>GET CHATMESSAGE</code></li>
	<li><code>SET MESSAGE</code> → <code>SET CHATMESSAGE</code><br>
The <code>GET MESSAGE</code> properties are also converted:</li>
	<li><code>PARTNER_HANDLE</code> → <code>FROM_HANDLE</code></li>
	<li><code>PARTNER_DISPNAME</code> → <code>FROM_DISPNAME</code><br>
All <span class="caps">API</span> notification (including <code>GET/SET MESSAGE</code> ) replies are converted:</li>
	<li><code>CHATMESSAGE * FROM_HANDLE x</code> → <code>MESSAGE * PARTNER_HANDLE x</code></li>
	<li><code>CHATMESSAGE * FROM_DISPNAME x</code> → <code>MESSAGE * FROM_DISPNAME x</code></li>
	<li><code>CHATMESSAGE * property x</code> → <code>MESSAGE * property x</code><br>
If the protocol is less than 3, <code>SEARCH MESSAGES</code> and <code>SEARCH MISSEDMESSAGES</code> commands return string <code>MESSAGES</code> 1, 2, 3.</li>
</ul>
<p><a name="Reference"></a></p>
<h2>Skype <span class="caps">API</span> reference</h2>
<p>The Skype <span class="caps">API</span> reference is a guide for developers working with the Skype Desktop <span class="caps">API</span>.</p>
<p><a name="TERMS"></a></p>
<h3>Terminology</h3>
<p>The Skype <span class="caps">API</span> reference uses the following terms:</p>
<ul>
	<li>The Skype access <span class="caps">API</span> is also known as the Skype control <span class="caps">API</span>.</li>
	<li>The client application issues a <strong>command</strong> to control Skype.</li>
	<li>In reply to some commands, Skype returns a synchronous <strong>response</strong>. Not all commands require a response. Responses are documented under their relevant commands.</li>
	<li>Skype <strong>objects</strong> and their properties are described in <a href="#OBJECTS">Objects section of this reference</a>.</li>
	<li>A <strong>notification</strong> is an asynchronous message Skype 
sends to a client when a change occurs, for example when a contact comes
 online or a new chatmessage is received.</li>
	<li>Skype has <strong>general parameters</strong> to control the setup, current user and connection information.</li>
	<li><strong>Connectable users</strong> are online Skype users who are 
in the client contact list and also non-contacts who are in active 
communication with the client.</li>
</ul>
<p><a name="COMMANDS"></a></p>
<h3>Commands</h3>
<p>This section provides a reference to the commands used in Skype.</p>
<p><a name="COMMAND_IDENTIFIER"></a></p>
<h4>Command identifiers</h4>
<p>A command identifier is useful to identify a response to a specific 
command. A command identifier is supported by most commands and is 
included in the response.</p>
<p><strong>Syntax</strong><br>
<code>#&lt;command_id&gt; command</code></p>
<p><strong>Response</strong><br>
<code>#&lt;command_id&gt; response|error</code></p>
<p><strong>Parameters</strong><br>
<code>command_id</code> – client assigned alphanumeric identifier</p>
<p><strong>Errors</strong><br>
all possible errors for a given command</p>
<p><strong>Version</strong><br>
Protocol 4</p>
<p><strong>Notes</strong></p>
<ul>
	<li>A command identifier is not included in asynchronous notification events initiated by a command.</li>
	<li>Asynchronous commands usually return a synchronous response with 
the command id. When the command is processed an asynchronous 
notification is also sent</li>
	<li>A response may come not directly after the command because there 
can other messages can be received between command and response.</li>
</ul>
<p><strong>Examples</strong></p>
<p>Simple response to command</p>
<pre style="codeSample">-&gt; #AB GET USERSTATUS
&lt;- #AB USERSTATUS ONLINE
</pre>
<p>Invalid command with reported error</p>
<pre style="codeSample">-&gt; #123 GET XZY
&lt;- #123 ERROR 7 GET: invalid WHAT
</pre>
<p>Command response and notification</p>
<pre style="codeSample">-&gt; #cmd11 SET USERSTATUS ONLINE
// this is the response for the command
&lt;- #cmd11 USERSTATUS ONLINE
// this is notification when the command is actually processed
&lt;- USERSTATUS ONLINE
</pre>
<p>Command response and notification are asynchronous</p>
<pre style="codeSample">-&gt; #50 CALL +18005551234
// note that events can arrive before response
&lt;- CALL 651 STATUS ROUTING
&lt;- #50 CALL 651 STATUS ROUTING
&lt;- CALL 651 PSTN_STATUS 10503 Service Unavailable
// the following events do not have a command id
&lt;- CALL 651 FAILUREREASON 1
&lt;- CALL 651 STATUS FAILED
</pre>
<p>Notifications can appear between command-response</p>
<pre style="codeSample">-&gt; #50 PING
// note that other events can arrive before command response
&lt;- USER echo123 LASTONLINETIMESTAMP 1105764678
&lt;- USER echo123 FULLNAME Echo Test Service
&lt;- USER test LASTONLINETIMESTAMP 1105487965
// Now comes Skype response to command
&lt;- #50 PONG
</pre>
<p><a name="makingcalls"></a></p>
<h4>Making and managing voice calls</h4>
<p>This section describes the commands for making and managing voice calls.</p>
<p>Refer to <a href="#Video">Making and managing video calls</a> for a description of video call commands.<br>
Refer to <a href="#Callfailure">Call failure reasons</a> for a list of all reasons for call failure.</p>
<p><a name="COMMAND_CALL"></a></p>
<h5><span class="caps">CALL</span></h5>
<p><strong>Syntax</strong><br>
<code>CALL &lt;target&gt;[, &lt;target&gt;]*</code></p>
<p><strong>Response</strong><br>
<code>CALL &lt;call_ID&gt; &lt;status&gt;</code></p>
<p><strong>Parameters</strong><br>
<code>&lt;target&gt;</code> – targets to be called. In case of multiple targets conference is created. Available target types:</p>
<ul>
	<li><code>USERNAME</code> – Skype username, e.g. “pamela”, “echo123”</li>
	<li><code>PSTN</code> – <span class="caps">PSTN</span> phone number, e.g. “+18005551234”, “003725555555”</li>
	<li><code>SPEED DIAL CODE</code> – 1 or 2 character speeddial code</li>
</ul>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 34 invalid user handle</code><br>
Target username/number missing or contains invalid characters</li>
	<li><code>ERROR 39 user blocked</code><br>
Trying to call to a blocked user (unblock user in contactlist)</li>
	<li><code>ERROR 73 too many participants</code><br>
Call is initiated to more than 9 people</li>
	<li><code>ERROR 92 call error</code><br>
Call is initiated to a number that is neither <span class="caps">PSTN</span> number nor a speeddial number</li>
</ul>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><strong>Notes</strong><br>
The Skype call window is focused when a call is initiated through the <span class="caps">API</span>. It is possible to make speed dial calls via the <span class="caps">API</span>.</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; CALL echo123
&lt;- CALL 1402 STATUS ROUTING
&lt;- CALL 1402 SUBJECT
&lt;- CALL 1402 STATUS ROUTING
&lt;- CALL 1402 STATUS RINGING
&lt;- CALL 1402 STATUS INPROGRESS
&lt;- CALL 1402 DURATION 1
&lt;- CALL 1402 STATUS FINISHED</pre>
<p><a name="COMMAND_GET_CALL"></a></p>
<h5><span class="caps">GET</span> <span class="caps">CALL</span></h5>
<p><strong>Syntax</strong><br>
<code>GET CALL &lt;id&gt; property</code></p>
<p><strong>Response</strong><br>
<code>CALL &lt;id&gt; property &lt;value&gt;</code></p>
<p><strong>Parameters and response values</strong></p>
<ul>
	<li><code>&lt;id&gt;</code> – call ID (numeric);</li>
	<li><code>property</code> – property name. Refer to <a href="#OBJECT_CALL"><span class="caps">CALL</span> object</a> for the list of properties.</li>
</ul>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 7 GET: invalid WHAT</code><br>
Object name missing or misspelled.</li>
	<li><code>ERROR 11 Invalid call id</code><br>
ID includes other than numeric characters.</li>
	<li><code>ERROR 12 Unknown call</code><br>
Call with specified ID does not exist in current user’s call history.</li>
	<li><code>ERROR 13 Invalid prop</code><br>
Property name missing or misspelled.</li>
	<li><code>ERROR 71 Invalid conference participant NO</code><br>
Conference participant’s number is not a number or is too big</li>
</ul>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; GET CALL 1594 TYPE
&lt;- CALL 1594 TYPE OUTGOING_P2P</pre>
<p><a name="COMMAND_SET_CALL_INPROGRESS"></a></p>
<h5><span class="caps">SET</span> <span class="caps">CALL</span> <span class="caps">INPROGRESS</span></h5>
<p>This enables you to resume a call, for example after placing it on hold.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SET CALL &lt;id&gt; STATUS INPROGRESS</code></p>
<p><code>&lt;- CALL &lt;id&gt; STATUS INPROGRESS</code></p>
<p><strong>Parameters:</strong><br>
<code>&lt;id&gt;</code> – call ID (numeric)</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 19 Invalid call id</code><br>
ID includes other than numeric characters</li>
	<li><code>ERROR 20 Unknown call</code><br>
Call with specified ID does not exist</li>
	<li><code>ERROR 23 Cannot resume this call at the moment</code><br>
Given call is not ringing and therefore can not be answered.</li>
</ul>
<p><a name="COMMAND_SET_CALL_FINISHED"></a></p>
<h5><span class="caps">SET</span> <span class="caps">CALL</span> <span class="caps">FINISHED</span></h5>
<p>Terminates the call.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SET CALL &lt;id&gt; STATUS FINISHED</code></p>
<p><code>&lt;- CALL &lt;id&gt; STATUS FINISHED</code></p>
<p><strong>Parameters:</strong><br>
<code>&lt;id&gt;</code> – call ID (numeric)</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 19 Invalid call id</code><br>
ID includes other than numeric characters</li>
	<li><code>ERROR 20 Unknown call</code><br>
Call with specified ID does not exist in current user’s call history nor is active.</li>
	<li><code>ERROR 24 Cannot hangup inactive call</code><br>
Given call is not in progress and therefore can not be hung up.</li>
</ul>
<p><a name="COMMAND_SET_CALL_ONHOLD"></a></p>
<h5><span class="caps">SET</span> <span class="caps">CALL</span> <span class="caps">ONHOLD</span></h5>
<p>Places a call on hold. You can later resume the call by setting the state to <code>INPROGRESS</code>.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SET CALL &lt;id&gt; STATUS ONHOLD</code></p>
<p><code>&lt;- CALL &lt;id&gt; STATUS ONHOLD</code></p>
<p><strong>Parameters:</strong></p>
<p><code>&lt;id&gt;</code> – call ID (numeric), possible values:</p>
<p>Note that from Protocol 2 and up, <code>SET CALL ONHOLD</code> results in two possible status responses:</p>
<ul>
	<li><code>LOCALHOLD</code> – call was placed on hold by local user</li>
	<li><code>REMOTEHOLD</code> – call was placed on hold by remote user</li>
</ul>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 19 Invalid call id</code><br>
ID includes other than numeric characters</li>
	<li><code>ERROR 20 Unknown call</code><br>
The call ID does not exist in current user’s call history nor is it active.</li>
	<li><code>ERROR 22 Cannot hold this call at the moment</code><br>
Given call is not in progress and therefore can not be placed on hold.</li>
	<li><code>ERROR 23 Cannot resume this call at the moment</code><br>
Given call is not on hold and therefore can not be resumed.</li>
</ul>
<p><a name="COMMAND_SET_CALL_JOIN_CONFERENCE"></a></p>
<h5><span class="caps">SET</span> <span class="caps">CALL</span> <span class="caps">JOIN</span> <span class="caps">CONFERENCE</span></h5>
<p><strong>Syntax</strong><br>
<code>SET CALL &lt;joining_id&gt; JOIN_CONFERENCE &lt;master_id&gt;</code></p>
<p><strong>Response</strong><br>
<code>CALL &lt;id&gt; CONF_ID &lt;conference_id&gt;</code></p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>&lt;joining_id&gt;</code> – call ID (numeric) to join into;</li>
	<li><code>&lt;master_id&gt;</code> – master call ID, where is another call’s ID.</li>
</ul>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 19 Invalid call id</code><br>
ID includes other than numeric characters</li>
	<li><code>ERROR 20 Unknown call</code><br>
Call with specified ID does not exist in current user’s call history nor is active.</li>
	<li><code>ERROR 72 Cannot create conference</code><br>
Creating conference, for example " <code>SET CALL 65 JOIN_CONFERENCE 66</code> " fails for some reason.</li>
</ul>
<p><strong>Note</strong></p>
<ul>
	<li>It is possible to initate a conference with the <code>CALL target1, target2</code> command</li>
</ul>
<p><strong>Example</strong></p>
<pre style="codeSample">// make first call
-&gt; CALL test
&lt;- CALL 1540 STATUS ROUTING
&lt;- CALL 1540 SUBJECT
&lt;- CALL 1540 STATUS ROUTING
&lt;- CALL 1540 STATUS RINGING
&lt;- CALL 1540 STATUS INPROGRESS
// set first call on hold ...
-&gt; SET CALL 1540 STATUS ONHOLD
&lt;- CALL 1540 STATUS INPROGRESS
&lt;- CALL 1540 STATUS ONHOLD
// .. and make another call
-&gt; CALL echo123
&lt;- CALL 1545 STATUS ROUTING
&lt;- CALL 1545 SUBJECT
&lt;- CALL 1545 STATUS ROUTING
&lt;- CALL 1545 STATUS RINGING
&lt;- CALL 1545 STATUS INPROGRESS
// join second call (1545) into conference with first call (1540)
-&gt; SET CALL 1545 JOIN_CONFERENCE 1540
&lt;- CALL 1545 CONF_ID 17930
&lt;- CALL 1545 CONF_ID 17930
&lt;- CALL 1540 CONF_ID 17930
// first call is automatically resumed and joined to conference
&lt;- CALL 1540 STATUS INPROGRESS
// ...
&lt;- CALL 1540 DURATION 53
&lt;- CALL 1540 STATUS FINISHED
&lt;- CALL 1545 DURATION 23
&lt;- CALL 1545 STATUS FINISHED</pre>
<p><a name="COMMAND_SET_CALL_DTMF"></a></p>
<h5><span class="caps">SET</span> <span class="caps">CALL</span> <span class="caps">DTMF</span></h5>
<p>Sends <span class="caps">DTMF</span> specified in <value> parameter to the call target.</value></p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SET CALL &lt;id&gt; DTMF &lt;value&gt;</code></p>
<p><code>&lt;- SET CALL &lt;id&gt; DTMF &lt;value&gt;</code></p>
<p><strong>Parameters:</strong></p>
<ul>
	<li><code>&lt;id&gt;</code> – call ID (numeric)</li>
	<li><code>&lt;value&gt;</code> – permitted symbols are: {0..9,#,*}.</li>
</ul>
<p>When sending <span class="caps">DTMF</span> codes manually, with the dialpad buttons on the Call Phones tab of the Skype UI, these <span class="caps">DTMF</span> codes are displayed on the address bar, below dialpad. This is not the case while sending <span class="caps">DTMF</span> codes with <code>SET CALL DTMF</code> command.</p>
<p>If you want your programmatically sent <span class="caps">DTMF</span> codes to be displayed on the address bar, you can use <code>BTN_RELEASED</code> command instead of <code>SET CALL DTMF</code>. When used during an active call, <code>BTN_RELEASED</code> with appropriate parameter {0..9,#,*} will cause equivalent <span class="caps">DTMF</span> code to be sent to the remote party of that call.</p>
<p>Note that this will only work if the Call Phones tab (dialpad) is active. On active Call tab, the <span class="caps">DTMF</span>
 codes will still be sent but the keys will not be displayed on the 
address bar. On Contacts tab, the keys will be added to the address bar 
but no <span class="caps">DTMF</span> codes will be sent. Therefore, if you want to use <code>BTN_RELEASED</code> for sending <span class="caps">DTMF</span> codes, you will need to make sure the Skype UI has Call Phones as active tab. This you can do with <code>OPEN DIALPAD</code> command.</p>
<p><strong>Notes</strong></p>
<ul>
	<li><span class="caps">DTMF</span> support and quality for <span class="caps">PSTN</span> calls depends on terminating partner.</li>
	<li>This command does not accept multiple symbols in its <value> parameter.</value></li>
</ul>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 19 Invalid call id</code><br>
ID includes other than numeric characters</li>
	<li><code>ERROR 20 Unknown call</code><br>
Call with specified ID does not exist in current user’s call history nor is it active.</li>
	<li><code>ERROR 21 Unknown/disallowed call prop</code><br>
<span class="caps">DTMF</span> property value is incorrect or misspelled</li>
</ul>
<p><a name="COMMAND_SET_CALL_SEEN"></a></p>
<h5><span class="caps">SET</span> <span class="caps">CALL</span> <span class="caps">SEEN</span></h5>
<p><strong>Syntax</strong><br>
<code>SET CALL &lt;id&gt; SEEN</code></p>
<p><strong>Response</strong><br>
<code>CALL &lt;id&gt; SEEN TRUE</code></p>
<p><strong>Parameters</strong><br>
<code>&lt;id&gt;</code> – call ID (numeric)</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 19 Invalid call id</code><br>
ID includes other than numeric characters</li>
	<li><code>ERROR 20 Unknown call</code><br>
Call with specified ID does not exist in current user’s call history nor is active.</li>
</ul>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SET CALL 15 SEEN
&lt;- CALL 15 SEEN TRUE</pre>
<p><a name="COMMAND_ALTER_CALL"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CALL</span></h5>
<p>The <code>ALTER CALL</code> command controls call status.</p>
<p><strong>Syntax:</strong></p>
<pre style="codeSample">ALTER CALL xxx
{ ANSWER
| HOLD
| RESUME
| HANGUP
| END { HANGUP | REDIRECT_TO_VOICEMAIL | FORWARD_CALL } // for an incoming ringing call
| DTMF &lt;0|1|..|9|*|#&gt;
| TRANSFER
| JOIN_CONFERENCE &lt;callID&gt; } </pre>
<p>Refer to <a href="#COMMAND_ALTER_CALL_TRANSFER"><span class="caps">ALTER</span> <span class="caps">CALL</span> <span class="caps">TRANSFER</span> command</a> for more information on altering the <code>TRANSFER</code> property.</p>
<p>Command feedback for <code>ALTER CALL</code> always includes echoing 
back the original command, usually followed by status change 
notifications, specific to particular commands.</p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; ALTER CALL 1719 HANGUP
&lt;- ALTER CALL 1719 HANGUP
&lt;- CALL 1719 STATUS FINISHED
</pre>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_GET_CALL_CAN_TRANSFER"></a></p>
<h5><span class="caps">GET</span> <span class="caps">CALL</span> CAN_TRANSFER</h5>
<p>Returns <span class="caps">TRUE</span> or <span class="caps">FALSE</span>, depending on whether a call can be transferred.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; GET CALL &lt;id&gt; CAN_TRANSFER &lt;handle&gt;</code></p>
<p><code>&lt;- CALL &lt;id&gt; CAN_TRANSFER &lt;handle&gt; {TRUE|FALSE}</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; GET CALL 1034 CAN_TRANSFER +3721234567
&lt;- CALL 1034 CAN_TRANSFER +3721234567 FALSE
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_ALTER_CALL_TRANSFER"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CALL</span> <span class="caps">TRANSFER</span></h5>
<p>Used for transferring an incoming call. Note that call transfers only
 work with incoming calls to SkypeIn numbers if you have Skype Pro 
subscription.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; ALTER CALL &lt;id&gt; TRANSFER handle1[, handle2 ..]</code></p>
<p><code>&lt;- ALTER CALL &lt;id&gt; TRANSFER</code></p>
<p>If multiple handles are passed in parameters, first one to answer the call will get the transfer.</p>
<p>To better describe the call transfer mechanism, let’s assume there are three participants in a call: A, B and C.</p>
<ul>
	<li>A calls B</li>
	<li>B transfers the call to C</li>
	<li>A and C can now talk.</li>
</ul>
<p>The <code>ALTER CALL TRANSFER</code> command is issued by B, to 
create a call between A and C. To check whether it is possible to 
transfer the call from A, B can use <a href="#COMMAND_GET_CALL_CAN_TRANSFER"><span class="caps">GET</span> <span class="caps">CALL</span> CAN_TRANSFER</a> command. Note that it is caller B (transferring party) who has to determine, whether a call is transferable.</p>
<p>Relevant <span class="caps">CALL</span> object <span class="caps">STATUS</span> property values:</p>
<ul>
	<li><code>TRANSFERRING</code> – seen by B, this status is set while the call between A and C is in progress)</li>
	<li><code>TRANSFERRED</code> – seen by B, terminating status of the call. Set after either the transferred call has ended or B does <span class="caps">END</span>/<span class="caps">HANGUP</span>;</li>
</ul>
<p>Relevant <span class="caps">CALL</span> object properties:</p>
<ul>
	<li><code>TRANSFER_ACTIVE</code> –  seen by A, indicates whether the call has been transferred.</li>
	<li><code>TRANSFER_STATUS</code> –  seen by B – the call status while 
the call is being transferred, it is relayed from A side continuously 
until the call has ended or when B decides to do <span class="caps">CALL</span> <span class="caps">ALTER</span> <span class="caps">END</span>. Ending call on B side will not terminate the call between A and C, just the status updates.</li>
	<li><code>TRANSFERRED_BY</code> – seen by C, contains identity of B.</li>
	<li><code>TRANSFERRED_TO</code> – seen by both A and B; contains identity of C.</li>
</ul>
<p><strong>Example:</strong></p>
<pre style="codeSample">//-------------------------------------------------------------------------------------------
// In this example, user Test is calling user Test3. Test3 then transfers the call to Test2.
// Note that for better clarity, call heartbeat messages are removed.
// Following portion of log is from perspective of the first outgoing call from user Test.
-&gt; CALL Test3
&lt;- CALL 626 STATUS UNPLACED
&lt;- CALL 626 STATUS ROUTING
&lt;- CALL 626 STATUS RINGING
&lt;- CALL 626 TRANSFER_ACTIVE TRUE
&lt;- CALL 626 STATUS ROUTING
&lt;- CALL 626 TRANSFERRED_TO Test2
&lt;- CALL 626 STATUS RINGING
&lt;- CALL 626 VAA_INPUT_STATUS FALSE
&lt;- CALL 626 STATUS INPROGRESS
&lt;- CALL 626 VIDEO_STATUS VIDEO_NONE
&lt;- CALL 626 STATUS FINISHED
//-------------------------------------------------------------------------------------------
// This portion of the log is from perspective of Test3 (who will transfer it to Test2)
&lt;- CALL 288 CONF_ID 0
&lt;- CALL 288 STATUS RINGING
&lt;- CONTACTS FOCUSED 
//-------------------------------------------------------------------------------------------
// Checking here if it is possible to transfer this call to Test2
-&gt; GET CALL 288 CAN_TRANSFER Test2
&lt;- CALL 288 CAN_TRANSFER test2 TRUE
//-------------------------------------------------------------------------------------------
// Transferring call to Test2
-&gt; ALTER CALL 288 TRANSFER Test2
&lt;- ALTER CALL 288 TRANSFER Test2
&lt;- CALL 288 STATUS INPROGRESS
&lt;- CALL 288 TRANSFERRED_TO Test2
&lt;- CALL 288 TRANSFER_STATUS UNPLACED
&lt;- CALL 288 TRANSFER_STATUS ROUTING
&lt;- CALL 288 TRANSFER_STATUS RINGING
&lt;- CALL 288 TRANSFER_STATUS INPROGRESS
&lt;- CALL 288 STATUS FINISHED
&lt;- CALL 288 VAA_INPUT_STATUS FALSE
//-------------------------------------------------------------------------------------------
// This portion of the log is from perspective of Test2 (receiver of the transferred call)
&lt;- CALL 1218 CONF_ID 0
&lt;- CALL 1218 STATUS RINGING
&lt;- CONTACTS FOCUSED 
-&gt; ALTER CALL 1218 ANSWER
&lt;- ALTER CALL 1218 ANSWER
&lt;- CALL 1218 STATUS INPROGRESS
&lt;- CALL 1218 VIDEO_STATUS VIDEO_NONE
&lt;- CALL 1218 VAA_INPUT_STATUS FALSE
//-------------------------------------------------------------------------------------------
// Checking up who it was that transferred this call..
-&gt; GET CALL 1240 TRANSFERRED_BY
&lt;- CALL 1240 TRANSFERRED_BY Test3
&lt;- CALL 1218 STATUS FINISHED
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="Callfailure"></a></p>
<h5>Call failure reasons</h5>
<table>
	<tbody><tr>
		<td><strong>Code</strong></td>
		<td><strong>Description</strong></td>
		<td><strong>Possible reason</strong></td>
	</tr>
	<tr>
		<td>1</td>
		<td><code>CALL 181 FAILUREREASON 1</code></td>
		<td>Miscellaneous error</td>
	</tr>
	<tr>
		<td>2</td>
		<td><code>CALL 181 FAILUREREASON 2</code></td>
		<td>User or phone number does not exist. Check that a prefix is 
entered for the phone number, either in the form 003725555555 or 
+3725555555; the form 3725555555 is incorrect.</td>
	</tr>
	<tr>
		<td>3</td>
		<td><code>CALL 181 FAILUREREASON 3</code></td>
		<td>User is offline</td>
	</tr>
	<tr>
		<td>4</td>
		<td><code>CALL 181 FAILUREREASON 4</code></td>
		<td>No proxy found</td>
	</tr>
	<tr>
		<td>5</td>
		<td><code>CALL 181 FAILUREREASON 5</code></td>
		<td>Session terminated.</td>
	</tr>
	<tr>
		<td>6</td>
		<td><code>CALL 181 FAILUREREASON 6</code></td>
		<td>No common codec found.</td>
	</tr>
	<tr>
		<td>7</td>
		<td><code>CALL 181 FAILUREREASON 7</code></td>
		<td>Sound I/O error.</td>
	</tr>
	<tr>
		<td>8</td>
		<td><code>CALL 181 FAILUREREASON 8</code></td>
		<td>Problem with remote sound device.</td>
	</tr>
	<tr>
		<td>9</td>
		<td><code>CALL 181 FAILUREREASON 9</code></td>
		<td>Call blocked by recipient.</td>
	</tr>
	<tr>
		<td>10</td>
		<td><code>CALL 181 FAILUREREASON 10</code></td>
		<td>Recipient not a friend.</td>
	</tr>
	<tr>
		<td>11</td>
		<td><code>CALL 181 FAILUREREASON 11</code></td>
		<td>Current user not authorized by recipient.</td>
	</tr>
	<tr>
		<td>12</td>
		<td><code>CALL 181 FAILUREREASON 12</code></td>
		<td>Sound recording error.</td>
	</tr>
	<tr>
		<td>13</td>
		<td><code>CALL 181 FAILUREREASON 13</code></td>
		<td>Failure to call a commercial contact.</td>
	</tr>
	<tr>
		<td>14</td>
		<td><code>CALL 181 FAILUREREASON 14</code></td>
		<td>Conference call has been dropped by the host. Note that this does 
not normally indicate abnormal call termination. Call being dropped for 
all the participants when the conference host leavs the call is expected
 behaviour. </td>
	</tr>
</tbody></table>
<p><a name="MANAGING_SMS_MESSAGES"></a></p>
<h4>Sending and managing <span class="caps">SMS</span> messages</h4>
<p>This section describes the commands for creating and managing <span class="caps">SMS</span> messages.</p>
<p>Refer to <a href="#OBJECT_SMS"><span class="caps">SMS</span> object</a> section for a list of <span class="caps">SMS</span> object properties.</p>
<p><a name="COMMAND_CREATE_SMS"></a></p>
<h5><span class="caps">CREATE</span> <span class="caps">SMS</span></h5>
<p>This command creates an <span class="caps">SMS</span> object.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; CREATE SMS &lt;type&gt; &lt;target&gt;</code></p>
<p>Where target is a valid <span class="caps">PSTN</span> number and type can be one of the following:</p>
<ul>
	<li><code>OUTGOING</code> – normal outbound <span class="caps">SMS</span>.</li>
	<li><code>CONFIRMATION_CODE_REQUEST</code> – Refer to [#SMS_NUMBER_VALIDATION <span class="caps">SMS</span> reply-to validation] for more information.</li>
	<li><code>CONFIRMATION_CODE_SUBMIT</code> – Refer to [#SMS_NUMBER_VALIDATION <span class="caps">SMS</span> reply-to validation] for more information.</li>
</ul>
<p>Refer to</p>
<ul>
	<li><a href="#SENDING_SMS_MESSAGES">Creating an <span class="caps">SMS</span> message</a> section for more information (including format of feedback notifications).</li>
	<li><a href="#OBJECT_SMS"><span class="caps">SMS</span> object</a> section for a list of <span class="caps">SMS</span> object properties.</li>
</ul>
<p><strong>Version</strong><br>
Added in <span class="caps">API</span> version 2.5</p>
<p><a name="COMMAND_SET_SMS_BODY"></a></p>
<h5><span class="caps">SET</span> <span class="caps">SMS</span> <span class="caps">BODY</span></h5>
<p>This command sets or changes the text of an existing <span class="caps">SMS</span> object.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SET SMS &lt;id&gt; BODY "text"</code></p>
<p>Where <id> is an <span class="caps">SMS</span> object ID returned from <code>CREATE SMS</code> command and text is the <span class="caps">SMS</span> message text.</id></p>
<p>Refer to</p>
<ul>
	<li><a href="#SENDING_SMS_MESSAGES">Creating an <span class="caps">SMS</span> message</a> section for more information.</li>
	<li><a href="#OBJECT_SMS"><span class="caps">SMS</span> object</a> section for a list of <span class="caps">SMS</span> object properties.</li>
</ul>
<p><strong>Version</strong><br>
Added in <span class="caps">API</span> version 2.5</p>
<p><a name="COMMAND_ALTER_SMS_SEND"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">SMS</span> <span class="caps">SEND</span></h5>
<p>This command sends a composed <span class="caps">SMS</span> message to the server.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; ALTER SMS &lt;id&gt; SEND</code></p>
<p>Where <id> is <span class="caps">SMS</span> object ID.</id></p>
<p>Refer to</p>
<ul>
	<li><a href="#SENDING_SMS_MESSAGES">Creating an <span class="caps">SMS</span> message</a> section for more information.</li>
	<li><a href="#OBJECT_SMS"><span class="caps">SMS</span> object</a> section for a list of <span class="caps">SMS</span> object properties.</li>
</ul>
<p><strong>Version</strong><br>
Added in <span class="caps">API</span> version 2.5</p>
<p><a name="COMMAND_SET_SMS_SEEN"></a></p>
<h5><span class="caps">SET</span> <span class="caps">SMS</span> <span class="caps">SEEN</span></h5>
<p>This command sets an <span class="caps">SMS</span> object as <span class="caps">SEEN</span>.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SET SMS &lt;id&gt; SEEN</code></p>
<p>Where <id> is an <span class="caps">SMS</span> object ID.</id></p>
<p>Refer to</p>
<ul>
	<li><a href="#OBJECT_SMS"><span class="caps">SMS</span> object</a> section for a list of <span class="caps">SMS</span> object properties.</li>
</ul>
<p><strong>Version</strong><br>
Added in <span class="caps">API</span> version 2.5</p>
<p><a name="SENDING_SMS_MESSAGES"></a></p>
<h5>Creating an <span class="caps">SMS</span> message</h5>
<p>To create, compose and send an <span class="caps">SMS</span> message, use <code>CREATE SMS</code>, <code>SET SMS</code> and <code>ALTER SMS</code> commands.</p>
<p>Refer to <a href="#OBJECT_SMS"><span class="caps">SMS</span> object</a> section for a list of <span class="caps">SMS</span> object properties.</p>
<p><strong>Example:</strong></p>
<pre style="codeSample">// ----------------------------------------------------------------
// Here we create a new SMS object instance 
-&gt; CREATE SMS OUTGOING +0123456789
&lt;- SMS 821 STATUS COMPOSING
&lt;- SMS 821 PRICE 0
&lt;- SMS 821 TIMESTAMP 0
&lt;- SMS 821 PRICE_PRECISION 3
&lt;- SMS 821 PRICE_CURRENCY EUR
&lt;- SMS 821 STATUS COMPOSING
&lt;- SMS 821 TARGET_NUMBERS +0123456789
&lt;- SMS 821 PRICE -1
&lt;- SMS 821 TARGET_STATUSES +0123456789=TARGET_ANALYZING
&lt;- SMS 821 TARGET_STATUSES +0123456789=TARGET_ACCEPTABLE
&lt;- SMS 821 PRICE 78
// ----------------------------------------------------------------
// This is how to set the message text property
// Note that you will get two identical lines in response
-&gt; SET SMS 821 BODY "test 123 test 223 test 333"
&lt;- SMS 821 BODY "test 123 test 223 test 333"
&lt;- SMS 821 BODY "test 123 test 223 test 333"
// ----------------------------------------------------------------
// Now lets try to send the message
-&gt; ALTER SMS 821 SEND
&lt;- ALTER SMS 821 SEND
&lt;- SMS 821 STATUS SENDING_TO_SERVER
&lt;- SMS 821 TIMESTAMP 1174058095
&lt;- SMS 821 TARGET_STATUSES +0123456789=TARGET_ACCEPTABLE
&lt;- SMS 821 TARGET_STATUSES +0123456789=TARGET_DELIVERY_FAILED
&lt;- SMS 821 FAILUREREASON INSUFFICIENT_FUNDS
&lt;- SMS 821 STATUS FAILED
&lt;- SMS 821 IS_FAILED_UNSEEN TRUE
// ----------------------------------------------------------------
// As sending the message failed (not enough Skype credit), 
// lets delete the message 
-&gt; DELETE SMS 821
&lt;- DELETE SMS 821
</pre>
<p><strong>Version</strong><br>
Added in <span class="caps">API</span> version 2.5</p>
<p><a name="MANAGING_SMS_MESSAGES_CHUNKS"></a></p>
<h5><span class="caps">SMS</span> message text in chunks</h5>
<p>The <span class="caps">SMS</span> object has special properties to 
break large messages into smaller chunks. Maximum size of a chunk is 160
 characters. Note that some unusually clever-looking symbols (“ä”, “ö”, 
etc.) translate into more than one characters in stored text.</p>
<p>To query how many chunks is contained in an <span class="caps">SMS</span> message:</p>
<pre style="codeSample">-&gt; GET SMS &lt;id&gt; CHUNKING
&lt;- SMS &lt;id&gt; CHUNKING &lt;no. of chunks&gt; &lt;no. of characters in the final chunk&gt;
</pre>
<p>To access text within a chunk:</p>
<pre style="codeSample">-&gt; GET SMS &lt;id&gt; CHUNK &lt;#&gt;
&lt;- SMS &lt;id&gt; CHUNK &lt;#&gt; &lt;text&gt;
</pre>
<p><a name="MANAGING_SMS_MESSAGES_SEARCHING"></a></p>
<h5>Searching <span class="caps">SMS</span> messages</h5>
<p>Following two commands are available to search for <span class="caps">SMS</span> objects:</p>
<ul>
	<li><a href="#COMMAND_SEARCH_SMS"><span class="caps">SEARCH</span> <span class="caps">SMSS</span></a></li>
	<li><a href="#COMMAND_SEARCH_MISSEDSMSS"><span class="caps">SEARCH</span> <span class="caps">MISSEDSMSS</span></a></li>
</ul>
<p><strong>Version</strong><br>
Added in <span class="caps">API</span> version 2.5</p>
<p><a name="MANAGING_SMS_MESSAGES_DELETING"></a></p>
<h5>Deleting <span class="caps">SMS</span> messages</h5>
<p>All <span class="caps">SMS</span> messages that you have created in Skype remain stored in the system until they get deleted. To delete an <span class="caps">SMS</span> message, use <code>DELETE SMS COMMAND</code>:</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; DELETE SMS &lt;ID&gt;</code></p>
<p><code>&lt;- DELETE SMS &lt;ID&gt;</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; SEARCH SMSS
&lt;- SMSS 233
-&gt; DELETE SMS 233
&lt;- DELETE SMS 233
</pre>
<p>The list of deletable <span class="caps">SMS</span> messages can be queried with <a href="#MANAGING_SMS_MESSAGES_SEARCHING"><span class="caps">SEARCH</span> <span class="caps">SMSS</span></a> command. Refer to <a href="#OBJECT_SMS"><span class="caps">SMS</span> object</a> section for a list of <span class="caps">SMS</span> object properties.</p>
<p><strong>Version</strong><br>
Added in <span class="caps">API</span> version 2.5</p>
<p><a name="COMMAND_SET_SMS_REPLY_TO_NUMBER"></a></p>
<h5><span class="caps">SET</span> <span class="caps">SMS</span> REPLY_TO_NUMBER</h5>
<p>This command sets the reply-to property of an <span class="caps">SMS</span> object.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SET SMS &lt;id&gt; REPLY_TO_NUMBER &lt;pstn&gt;</code></p>
<p><strong>Version</strong><br>
Added in <span class="caps">API</span> version 2.5</p>
<p><a name="COMMAND_SET_SMS_TARGET_NUMBERS"></a></p>
<h5><span class="caps">SET</span> <span class="caps">SMS</span> TARGET_NUMBERS</h5>
<p>This command changes the destination(s) of an <span class="caps">SMS</span> message.</p>
<p><strong>Syntax:</strong><br>
<code>SET SMS &lt;id&gt; TARGET_NUMBERS &lt;pstn1&gt;[, &lt;pstn2&gt;]</code></p>
<p>Where <id> is ID of a created <span class="caps">SMS</span> object and destination(s) are given as a comma-separated list of valid <span class="caps">PSTN</span> numbers.</id></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">//-------------------------------------------------------------------
// Note that at least one target number is mandatory for CREATE SMS
-&gt; CREATE SMS OUTGOING +37259877305
&lt;- SMS 1702 TYPE OUTGOING
&lt;- SMS 1702 STATUS COMPOSING
&lt;- SMS 1702 PRICE 0
&lt;- SMS 1702 TIMESTAMP 0
&lt;- SMS 1702 STATUS COMPOSING
&lt;- SMS 1702 PRICE_PRECISION 3
&lt;- SMS 1702 PRICE_CURRENCY EUR
&lt;- SMS 1702 TARGET_NUMBERS +37259877305
&lt;- SMS 1702 PRICE -1
&lt;- SMS 1702 TARGET_STATUSES +37259877305=TARGET_ANALYZING
&lt;- SMS 1702 TARGET_STATUSES +37259877305=TARGET_ACCEPTABLE
&lt;- SMS 1702 PRICE 78
//-------------------------------------------------------------------
// Now let's add two more target numbers (in addition to original)
-&gt; SET SMS 1702 TARGET_NUMBERS +37259877305, +37259877306, +37259877307
&lt;- SMS 1702 TARGET_NUMBERS +37259877305, +37259877306, +37259877307
&lt;- SMS 1702 TARGET_NUMBERS +37259877305, +37259877306, +37259877307
&lt;- SMS 1702 PRICE -1
&lt;- SMS 1702 TARGET_STATUSES +37259877305=TARGET_ACCEPTABLE, +37259877306=TARGET_ANALYZING, +37259877307=TARGET_ANALYZING
&lt;- SMS 1702 TARGET_STATUSES +37259877305=TARGET_ACCEPTABLE, +37259877306=TARGET_ACCEPTABLE, +37259877307=TARGET_ACCEPTABLE
&lt;- SMS 1702 TARGET_STATUSES +37259877305=TARGET_ACCEPTABLE, +37259877306=TARGET_ACCEPTABLE, +37259877307=TARGET_ACCEPTABLE
&lt;- SMS 1702 PRICE 234
</pre>
<p><strong>Version</strong><br>
Added in <span class="caps">API</span> version 2.5</p>
<p><a name="SMS_NUMBER_VALIDATION"></a></p>
<h5>Setting mobile phone number on reply-to field in outgoing <span class="caps">SMS</span> messages</h5>
<p>An outgoing <span class="caps">SMS</span> message from Skype lists the reply-to number as the user’s Skype ID. <br>
It is possible to change the reply-to number to a mobile phone number by registering the number in Skype client.<br>
Skype validates this number, and it then becomes the reply-to number for outgoing <span class="caps">SMS</span> messages.<br>
To register a mobile phone number in Skype client:</p>
<ol>
	<li>Create and send an <span class="caps">SMS</span> message of type <code>CONFIRMATION_CODE_REQUEST</code> to your own mobile number.</li>
	<li>Skype sends an <span class="caps">SMS</span> message to your mobile, with message body containing a confirmation code.</li>
	<li>Create another <span class="caps">SMS</span> of type <code>CONFIRMATION_CODE_SUBMIT</code> to the same number and include the confirmation code in message body.</li>
	<li>Your mobile phone number is then validated as a reply-to number for outgoing <span class="caps">SMS</span> messages.</li>
</ol>
<p>To create confirmation request and submit messages, use <code>CONFIRMATION_CODE_REQUEST</code> and <code>CONFIRMATION_CODE_SUBMIT</code> respectively as 2nd parameter in <a href="#SENDING_SMS_MESSAGES"><span class="caps">CREATE</span> <span class="caps">SMS</span></a> command.</p>
<p>To retrieve the mobile number you have set as reply-to for outgoing <span class="caps">SMS</span> messages:</p>
<pre style="codeSample">-&gt; GET PROFILE SMS_VALIDATED_NUMBERS
&lt;- PROFILE SMS_VALIDATED_NUMBERS &lt;+ number &gt;[, &lt;+number&gt;..]
</pre>
<p><a name="CALL_COST_INFO"></a></p>
<h4>Call cost information</h4>
<p>Cost information is stored in <code>RATE</code>, <code>RATE_CURRENCY</code> and <code>RATE_PRECISION</code> properties of a <code>CALL</code> object.</p>
<p><strong>Example of how to retrieve call cost data:</strong></p>
<pre style="codeSample">//------------------------------------------------
// First let's find a suitable call ID
-&gt; SEARCH CALLS
&lt;- CALLS 100, 101, 102
//------------------------------------------------
// Here we will retrieve cost data from call 100 
-&gt; GET CALL 100 RATE 
&lt;- CALL 100 RATE 1234
-&gt; GET CALL 100 RATE_PRECISION 
&lt;- CALL 100 RATE_PRECISION 2
-&gt; GET CALL 100 RATE_CURRENCY 
&lt;- CALL 100 RATE_CURRENCY EUR
//------------------------------------------------
// To determine the actual cost of the call,
// you will also need to know the call duration
-&gt; GET CALL 100 DURATION
&lt;- CALL 100 DURATION 60
</pre>
<p>Note that call <code>DURATION</code> is expressed in seconds while call <code>RATE</code> is expressed as cost per minute.</p>
<p><strong>Skype4Com example:</strong></p>
<ul>
	<li><a href="http://developer.skype.com/delphi-examples/callcost-pas">CallCost.pas</a></li>
</ul>
<p><strong>Version</strong><br>
Protocol 6, Skype <span class="caps">API</span> version 2.5</p>
<p><a name="Video"></a></p>
<h4>Making and managing video calls</h4>
<p>This section contains the commands for making and managing video calls.</p>
<p><strong>Skype4Com sample:</strong></p>
<ul>
	<li><a href="http://developer.skype.com/delphi-examples/videoswitching-pas">VideoSwitching.pas</a></li>
</ul>
<p><a name="COMMAND_GET_VIDEO_IN"></a></p>
<h5><span class="caps">GET</span> VIDEO_IN</h5>
<p>The <code>GET VIDEO_IN</code> command retrieves the name of the video device to use for a call. If no value is returned, Skype sets the default value.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; GET VIDE0_IN</code></p>
<p><code>&lt;- VIDEO_IN [&lt;devicename&gt;]</code></p>
<p><strong>Note</strong><br>
If no devicename is returned, Skype sets a default value with the following command:<br>
<code>-&gt; SET VIDEO_IN &lt;devicename&gt;</code></p>
<p><a name="COMMAND_SET_VIDEO_IN"></a></p>
<h5><span class="caps">SET</span> VIDEO_IN</h5>
<p>This command enables you to change webcam settings.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SET VIDE0_IN [&lt;device_name&gt;]</code></p>
<p><code>&lt;- VIDEO_IN [&lt;device_name&gt;]</code></p>
<p>If the <device_name> parameter is empty, webcam is set to “Default video device”.</device_name></p>
<p>If device passed in <device_name> parameter cannot be found, following error is reported:</device_name></p>
<ul>
	<li><span class="caps">ERROR</span> 50 cannot set device</li>
</ul>
<p><a name="COMMAND_GET_CALL_VIDEO_STATUS"></a></p>
<h5><span class="caps">GET</span> <span class="caps">CALL</span> VIDEO_STATUS</h5>
<p>To check if a Skype client is video-enabled:</p>
<p><strong>Syntax</strong><br>
<code>-&gt; GET CALL 5921 VIDEO_STATUS</code></p>
<p><strong>Response</strong></p>
<pre style="codeSample">Skype responds with the video status for the active call, for example:
&lt;- CALL 5921 VIDEO_STATUS VIDEO_NONE</pre>
<p><strong>Parameters</strong></p>
<pre style="codeSample">VIDEO_NONE
VIDEO_SEND_ENABLED
VIDEO_RECV_ENABLED
VIDEO_BOTH_ENABLED</pre>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_ALTER_CALL_VIDEO_SEND"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CALL</span> VIDEO_SEND</h5>
<p>Used to start or stop sending video during a call.</p>
<p><strong>Syntax to start video:</strong><br>
<code>-&gt; ALTER CALL &lt;id&gt; START_VIDEO_SEND</code></p>
<p><code>&lt;- ALTER CALL &lt;id&gt; START_VIDEO_SEND</code></p>
<p><code>&lt;- CALL &lt;id&gt; VIDEO_SEND_STATUS STARTING</code></p>
<p><strong>Syntax to stop video:</strong><br>
<code>-&gt; ALTER CALL &lt;id&gt; STOP_VIDEO_SEND</code></p>
<p><code>&lt;- ALTER CALL &lt;id&gt; STOP_VIDEO_SEND</code></p>
<p><strong>Parameters:</strong></p>
<pre style="codeSample">START_VIDEO_SEND
STOP_VIDEO_SEND</pre>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_ALTER_CALL_VIDEO_RECEIVE"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CALL</span> VIDEO_RECEIVE</h5>
<p>Used to start or stop receiving video during a call.</p>
<p><strong>Syntax to start receiving video:</strong><br>
<code>-&gt; ALTER CALL &lt;id&gt; START_VIDEO_RECEIVE</code></p>
<p><code>&lt;- ALTER CALL &lt;id&gt; START_VIDEO_RECEIVE</code></p>
<p><strong>Syntax to stop receiving video:</strong><br>
<code>-&gt; ALTER CALL &lt;id&gt; STOP_VIDEO_RECEIVE</code></p>
<p><code>&lt;- ALTER CALL &lt;id&gt; STOP_VIDEO_RECEIVE</code></p>
<p><code>&lt;- CALL &lt;id&gt; VIDEO_RECEIVE_STATUS STOPPING</code></p>
<p><strong>Parameters:</strong></p>
<pre style="codeSample">START_VIDEO_RECEIVE
STOP_VIDEO_RECEIVE</pre>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_GET_CALL_VIDEO_SEND_STATUS"></a></p>
<h5><span class="caps">GET</span> <span class="caps">CALL</span> VIDEO_SEND_STATUS</h5>
<p>To check video send status:</p>
<p><strong>Syntax</strong><br>
<code>-&gt; GET CALL 5921 VIDEO_SEND_STATUS</code></p>
<p><strong>Response</strong><br>
Skype responds with the appropriate parameter.</p>
<p><strong>Parameters</strong><br>
<code>NOT_AVAILABLE</code> // The client does not have video capability because video is disabled or a webcam is unplugged).<br>
<code>AVAILABLE</code> // The client is video-capable but the video is not running (can occur during a manual send).<br>
<code>STARTING</code> // The video is sending but is not yet running at full speed.<br>
<code>REJECTED</code> // The receiver rejects the video feed (can occur during a manual receive).<br>
<code>RUNNING</code> // The video is actively running.<br>
<code>STOPPING</code> // The active video is in the process of stopping but has not halted yet.<br>
<code>PAUSED</code> // The video call is placed on hold.</p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_GET_CALL_VIDEO_RECEIVE_STATUS"></a></p>
<h5><span class="caps">GET</span> <span class="caps">CALL</span> VIDEO_RECEIVE_STATUS</h5>
<p>To check video receive status:</p>
<p><strong>Syntax</strong><br>
<code>-&gt; GET CALL 5921 VIDEO_RECEIVE_STATUS</code></p>
<p><strong>Response</strong><br>
Skype responds with the appropriate parameter.</p>
<p><strong>Parameters</strong><br>
<code>NOT_AVAILABLE</code> // The client does not have video capability because video is disabled or a webcam is unplugged).<br>
<code>AVAILABLE</code> // The client is video-capable but the video is not running (can occur during a manual send).<br>
<code>STARTING</code> // The video is sending but is not yet running at full speed.<br>
<code>REJECTED</code> // The receiver rejects the video feed (can occur during a manual receive).<br>
<code>RUNNING</code> // The video is actively running.<br>
<code>STOPPING</code> // The active video is in the process of stopping but has not halted yet.<br>
<code>PAUSED</code> // The video call is placed on hold.</p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_IS_VIDEO_CAPABLE"></a></p>
<h5>IS_VIDEO_CAPABLE</h5>
<p>To check if a user is video-capable:</p>
<p><strong>Syntax</strong><br>
<code>-&gt; GET USER &lt;username&gt; IS_VIDEO_CAPABLE</code></p>
<p><strong>Response</strong><br>
<code>&lt;- USER &lt;username&gt; IS_VIDEO_CAPABLE {True|False}</code></p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_OPEN_VIDEOTEST"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">VIDEOTEST</span></h5>
<p>To open the Video Test window to test if video is working:</p>
<p><strong>Syntax</strong><br>
<code>OPEN VIDEOTEST</code></p>
<p><strong>Response</strong><br>
If successful command is echoed back</p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_OPEN_OPTIONS_VIDEO"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">OPTIONS</span> <span class="caps">VIDEO</span></h5>
<p>To open the Video Options window:</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN OPTIONS VIDEO</code></p>
<p><code>&lt;- OPEN OPTIONS VIDEO</code></p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="Voicemail"></a></p>
<h4>Leaving and manipulating voicemails</h4>
<p>This section contains the commands to leave and manipulate voicemails.</p>
<p><strong>Skype4Com samples:</strong></p>
<ul>
	<li><a href="http://developer.skype.com/delphi-examples/voicemail2wav-pas">VoiceMail2WAV.pas </a> –  Delphi example on how to save voicemails into <span class="caps">WAV</span> files.</li>
</ul>
<p><a name="COMMAND_VOICEMAIL"></a></p>
<h5><span class="caps">VOICEMAIL</span></h5>
<p>The <code>VOICEMAIL</code> command starts to deprecate in protocol 6 and is replaced by the <a href="#COMMAND_CALLVOICEMAIL"><span class="caps">CALLVOICEMAIL</span></a> command.</p>
<p><a name="COMMAND_CALLVOICEMAIL"></a></p>
<h5><span class="caps">CALLVOICEMAIL</span></h5>
<p>Refer to <a href="#OBJECT_VOICEMAIL"><span class="caps">VOICEMAIL</span> object</a>.</p>
<p>To leave a voicemail:</p>
<p><strong>Syntax</strong><br>
<code>CALLVOICEMAIL &lt;target&gt;</code></p>
<p>When you start an outgoing voicemail, a call object and two voicemail
 objects are created. First one of the voicemail objects is incoming 
greeting message. Second voicemail object is the outgoing message.</p>
<p><strong>Example</strong></p>
<pre style="codeSample">//------------------------------------------------------------------------------
// Starting voicemail call to testuser, the system will report back call 
// ID and status. The object IDs in this example are call (524), greeting (525) 
// and voicemail message (526)
-&gt; CALLVOICEMAIL testuser
&lt;- CALL 524 STATUS ROUTING
//------------------------------------------------------------------------------
// Then the system reports back the incoming greeting voicemail properties
&lt;- VOICEMAIL 525 TYPE CUSTOM_GREETING
&lt;- VOICEMAIL 525 PARTNER_HANDLE testuser
&lt;- VOICEMAIL 525 PARTNER_DISPNAME Test User
&lt;- VOICEMAIL 525 ALLOWED_DURATION 60
&lt;- VOICEMAIL 525 SUBJECT 
&lt;- VOICEMAIL 525 TIMESTAMP 1174384114
&lt;- VOICEMAIL 525 DURATION 0
&lt;- VOICEMAIL 525 STATUS NOTDOWNLOADED
&lt;- VOICEMAIL 525 STATUS DOWNLOADING
//------------------------------------------------------------------------------
// Then the system reports back the outgoing voicemail properties
&lt;- VOICEMAIL 526 TYPE OUTGOING
&lt;- VOICEMAIL 526 PARTNER_HANDLE testuser
&lt;- VOICEMAIL 526 PARTNER_DISPNAME Test User
&lt;- VOICEMAIL 526 ALLOWED_DURATION 600
&lt;- VOICEMAIL 526 SUBJECT 
&lt;- VOICEMAIL 526 TIMESTAMP 1174384114
&lt;- VOICEMAIL 526 DURATION 0
&lt;- VOICEMAIL 526 STATUS BLANK
//------------------------------------------------------------------------------
// The status of the call object is set to INPROGRESS, incoming greeting 
// is being downloaded
&lt;- CALL 524 STATUS INPROGRESS
&lt;- CALL 524 VM_ALLOWED_DURATION 600
&lt;- CALL 524 VM_DURATION 0
&lt;- VOICEMAIL 525 STATUS PLAYING
&lt;- VOICEMAIL 525 STATUS BUFFERING
&lt;- CALL 524 STATUS INPROGRESS
&lt;- VOICEMAIL 525 DURATION 8
//------------------------------------------------------------------------------
// Incoming greeting has been received and is played
&lt;- VOICEMAIL 525 TIMESTAMP 1125749735
&lt;- VOICEMAIL 525 STATUS PLAYING
&lt;- VOICEMAIL 525 STATUS PLAYED
//------------------------------------------------------------------------------
// System starts recording the outgoing voicemail message
&lt;- VOICEMAIL 526 TIMESTAMP 1174384125
&lt;- VOICEMAIL 526 STATUS RECORDING
//------------------------------------------------------------------------------
// Heartbeat notifications continue at 1 second interval throughout recording
&lt;- CALL 524 STATUS INPROGRESS
&lt;- VOICEMAIL 526 DURATION 6
&lt;- CALL 524 VM_DURATION 6
&lt;- VOICEMAIL 526 DURATION 7
&lt;- CALL 524 VM_DURATION 7
&lt;- VOICEMAIL 526 DURATION 8
&lt;- CALL 524 VM_DURATION 8
&lt;- VOICEMAIL 526 DURATION 9
&lt;- CALL 524 VM_DURATION 9
//------------------------------------------------------------------------------
// Recording stopped, uploading the recorded message
&lt;- VOICEMAIL 526 STATUS UPLOADING
&lt;- CALL 524 STATUS INPROGRESS
&lt;- VOICEMAIL 526 STATUS UPLOADED
&lt;- CALL 524 STATUS FINISHED
&lt;- CALL 524 VAA_INPUT_STATUS FALSE
</pre>
<p><strong>Version</strong><br>
Protocol 6</p>
<p>Prior to <span class="caps">API</span> version 2.5 (protocol 6), <code>VOICEMAIL</code> command was used to leave voicemails. In future development, <code>CALLVOICEMAIL</code> command should be used instead. <br>
Also, following changes were made to this command in <span class="caps">API</span> version 2.5:</p>

	<ul>
		<li>When you create <code>VOICEMAIL</code> object, a <code>CALL</code> object is also created.</li>
		<li>After you play a voicemail, other person’s greeting is not deleted.</li>
		<li>When voicemail is recording, Skype returns a call xx vm_duration x response in addition to voicemail xx duration x message.</li>
	</ul><p><strong>Notes</strong></p>
<ul>
	<li>Leaving a voicemail for a target user actually uses two types of voicemail object:
	<ul>
		<li>a greeting type of voicemail object which is downloaded from the server</li>
		<li>an outgoing type of voicemail object which the user composes</li>
	</ul></li>
</ul>
<p><a name="COMMAND_OPEN_VOICEMAIL"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">VOICEMAIL</span></h5>
<p>To open and start playing a voicemail:</p>
<p><strong>Syntax</strong><br>
<code>OPEN VOICEMAIL &lt;id&gt;</code></p>
<p><strong>Response</strong><br>
If successful command is echoed back</p>
<p><strong>Parameters</strong><br>
<code>&lt;id&gt;</code> – voicemail identifier</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 69 invalid open what</code><br>
Open target is missing or misspelled</li>
	<li><code>ERROR 512 invalid voicemail ID</code><br>
Voicemail identifier is missing, is invalid or does not exist</li>
</ul>
<p><strong>Notes</strong></p>
<ul>
	<li>Voicemail is downloaded from server automatically.</li>
	<li>The main Skype window comes into focus and switches to the Call List tab; use the <a href="#COMMAND_ALTER_VOICEMAIL"><span class="caps">ALTER</span> <span class="caps">VOICEMAIL</span> command</a> to play without a UI response.</li>
</ul>
<p>To get hold of voicemail IDs, refer to <a href="#COMMAND_SEARCH_VOICEMAILS"><span class="caps">SEARCH</span> <span class="caps">VOICEMAILS</span></a> and <a href="#COMMAND_SEARCH_MISSEDVOICEMAILS"><span class="caps">SEARCH</span> <span class="caps">MISSEDVOICEMAILS</span></a> commands.</p>
<p><a name="COMMAND_ALTER_VOICEMAIL"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">VOICEMAIL</span></h5>
<p>The <code>ALTER VOICEMAIL</code> command allows finer control over the <code>VOICEMAIL</code> object.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; ALTER VOICEMAIL &lt;id&gt; action</code></p>
<p><code>&lt;- ALTER VOICEMAIL &lt;id&gt; action</code></p>
<p><strong>Parameters:</strong><br>
<code>action</code> – possible values:</p>
<ul>
	<li><code>STARTPLAYBACK</code> – starts playing downloaded voicemail</li>
	<li><code>STOPPLAYBACK</code> – stops voicemail playback</li>
	<li><code>UPLOAD</code> – uploads recorded voicemail from a local computer to a server</li>
	<li><code>DOWNLOAD</code> – downloads voicemail object from a server to a local computer</li>
	<li><code>STARTRECORDING</code> – stops playing greeting and starts recording, the equivalent to a user pressing the green button;</li>
	<li><code>STOPRECORDING</code> – ends recording, the equivalent to a user pressing the red button</li>
	<li><code>DELETE</code> – delete voicemail object</li>
	<li><code>STARTPLAYBACKINCALL</code> – Initiates voicemail playback during an active call. The voicemail will be played both locally and to remote call participant.</li>
	<li><code>SETUNPLAYED</code> – sets voicemail status property to <code>UNPLAYED</code>.</li>
</ul>
<p>In version 3.5.0.202 following <code>ALTER</code> commands were added to enable redirection of voice streams for voicemails:</p>
<ul>
	<li><a href="#COMMAND_ALTER_VOICEMAIL_SET_INPUT"><span class="caps">ALTER</span> <span class="caps">VOICEMAIL</span> SET_INPUT</a></li>
	<li><a href="#COMMAND_ALTER_VOICEMAIL_SET_OUTPUT"><span class="caps">ALTER</span> <span class="caps">VOICEMAIL</span> SET_OUTPUT</a></li>
	<li><a href="#COMMAND_ALTER_VOICEMAIL_SET_CAPTURE_MIC"><span class="caps">ALTER</span> <span class="caps">VOICEMAIL</span> SET_CAPTURE_MIC</a></li>
</ul>
<p><strong>Notes</strong></p>
<ul>
	<li><code>STARTPLAYBACK</code> plays voicemail but the window does not change to the Call List tab as it does with the <code>OPEN VOICEMAIL</code> command.</li>
	<li><code>STOPRECORDING</code> causes automatic message upload to the server.</li>
	<li>Voicemails are deleted as a background process and the elapsed time depends on the server response; during this period, the <code>SEARCH VOICEMAILS</code> command still returns an ID for the voicemail, but the status is changed to <code>DELETING</code> .</li>
</ul>
<p><a name="COMMAND_CALL_FORWARD"></a></p>
<h4>Managing call forwarding</h4>
<p>This section contains the commands to manage call forwarding.</p>
<p><strong>Skype4Com example:</strong></p>
<ul>
	<li><a href="http://developer.skype.com/delphi-examples/callforwarding-pas">CallForwarding.pas</a></li>
</ul>
<p><a name="COMMAND_GET_PROFILE_CALL_APPLY_CF"></a></p>
<h5><span class="caps">GET</span> <span class="caps">PROFILE</span> CALL_APPLY_CF</h5>
<p>Use the <code>GET PROFILE CALL_APPLY_CF</code> command to query if call forwarding is enabled for a call.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; GET PROFILE CALL_APPLY_CF</code></p>
<p><strong>Response</strong><br>
<code>&lt;- PROFILE CALL_APPLY_CF {True|False}</code></p>
<p><strong>Version</strong><br>
Protocol 1.4</p>
<p><a name="COMMAND_SET_PROFILE_CALL_APPLY_CF"></a></p>
<h5><span class="caps">SET</span> <span class="caps">PROFILE</span> CALL_APPLY_CF</h5>
<p>Use the <code>SET PROFILE CALL_APPLY_CF</code> to enable or disable call forwarding.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; SET PROFILE CALL_APPLY_CF {True|False}</code></p>
<p><strong>Response</strong><br>
<code>&lt;- PROFILE CALL_APPLY_CF {True|False}</code></p>
<p><strong>Version</strong><br>
Protocol 1.4</p>
<p><a name="COMMAND_GET_PROFILE_CALL_FORWARD_RULES"></a></p>
<h5><span class="caps">GET</span> <span class="caps">PROFILE</span> CALL_FORWARD_RULES</h5>
<p>Use the <code>GET PROFILE CALL_FORWARD_RULES</code> to query the rules set for call forwarding. Note that the call forwarding process starts after number of seconds given in <code>CALL_NOANSWER_TIMEOUT</code> property of the <code>PROFILE</code> object.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; GET PROFILE CALL_FORWARD_RULES</code></p>
<p><code>&lt;- PROFILE CALL_FORWARD_RULES 
[&lt;start_time&gt;,&lt;end_time&gt;,{&lt;username&gt;|&lt;+PSTN&gt;}[ 
&lt;start_time&gt;,&lt;end_time&gt;,{&lt;username&gt;|&lt;+PSTN&gt;}]*]</code></p>
<p><strong>Parameters:</strong></p>
<ul>
	<li><code>start_time</code> – in seconds when connecting to this number/user starts</li>
	<li><code>end_time</code> – in seconds when ringing to this number/user ends</li>
	<li><code>username</code> – another Skype username to forward calls to</li>
	<li><code>+PSTN - PSTN</code> number to forward a call</li>
</ul>
<p><strong>Note</strong><br>
A call can be forwarded to multiple numbers and the numbers can overlap 
in time, with all ringing and the first to pick up the call takes it.</p>
<p><strong>Version</strong><br>
Protocol 1.4</p>
<p><a name="COMMAND_SET_PROFILE_CALL_FORWARD_RULES"></a></p>
<h5><span class="caps">SET</span> <span class="caps">PROFILE</span> CALL_FORWARD_RULES</h5>
<p>Use the <code>SET PROFILE CALL_FORWARD_RULES</code> to set the rules for call forwarding. Note that the call forwarding process starts after number of seconds given in <code>CALL_NOANSWER_TIMEOUT</code> property of the <code>PROFILE</code> object.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SET PROFILE CALL_FORWARD_RULES 
[&lt;start_time&gt;,&lt;end_time&gt;,{&lt;username&gt;|&lt;+PSTN&gt;}[ 
&lt;start_time&gt;,&lt;end_time&gt;,{&lt;username&gt;|&lt;+PSTN&gt;}]*]</code></p>
<p><code>&lt;- PROFILE CALL_FORWARD_RULES 
[&lt;start_time&gt;,&lt;end_time&gt;,{&lt;username&gt;|&lt;+PSTN&gt;}[ 
&lt;start_time&gt;,&lt;end_time&gt;,{&lt;username&gt;|&lt;+PSTN&gt;}]*]</code></p>
<p><strong>Parameters:</strong></p>
<ul>
	<li><code>start_time</code> – in seconds when connecting to this number/user starts</li>
	<li><code>end_time</code> – in seconds when ringing to this number/user ends</li>
	<li><code>username</code> – another Skype username to forward calls to</li>
	<li><code>+PSTN - PSTN</code> number to forward a call</li>
</ul>
<p><strong>Version</strong><br>
Protocol 1.4</p>
<p><a name="COMMAND_GET_PROFILE_CALL_NOANSWER_TIMEOUT"></a></p>
<h5><span class="caps">GET</span> <span class="caps">PROFILE</span> CALL_NOANSWER_TIMEOUT</h5>
<p>Use the <code>GET PROFILE CALL_NOANSWER_TIMEOUT</code> to query the amount of seconds a forwarded call will ring before timing out.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; GET PROFILE CALL_NOANSWER_TIMEOUT</code></p>
<p><strong>Response</strong><br>
<code>&lt;- PROFILE CALL_NOANSWER_TIMEOUT 15</code></p>
<p><strong>Note</strong></p>
<ol>
	<li>seconds is the default timeout value.</li>
</ol>
<p><strong>Version</strong><br>
Protocol 1.4</p>
<p><a name="COMMAND_SET_PROFILE_CALL_NOANSWER_TIMEOUT"></a></p>
<h5><span class="caps">SET</span> <span class="caps">PROFILE</span> CALL_NOANSWER_TIMEOUT</h5>
<p>Use the <code>SET PROFILE CALL_NOANSWER_TIMEOUT</code> to change the amount of seconds a forwarded call will ring before timing out.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; SET PROFILE CALL_NOANSWER_TIMEOUT 20</code></p>
<p><strong>Response</strong><br>
<code>&lt;- PROFILE CALL_NOANSWER_TIMEOUT 20</code></p>
<p><strong>Note</strong><br>
This command replaces the default timeout value of 15 seconds.</p>
<p><strong>Version</strong><br>
Protocol 1.4</p>
<p><a name="COMMAND_GET_PROFILE_CALL_SEND_TO_VM"></a></p>
<h5><span class="caps">GET</span> <span class="caps">PROFILE</span> CALL_SEND_TO_VM</h5>
<p>Use the <code>GET PROFILE CALL_SEND_TO_VM</code> to query if voicemail is enabled for forwarded calls.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; GET PROFILE CALL_SEND_TO_VM</code></p>
<p><strong>Response</strong><br>
<code>&lt;- PROFILE CALL_SEND_TO_VM {True|False}</code></p>
<p><strong>Version</strong><br>
Protocol 1.4</p>
<p><a name="COMMAND_SET_PROFILE_CALL_SEND_TO_VM"></a></p>
<h5><span class="caps">SET</span> <span class="caps">PROFILE</span> CALL_SEND_TO_VM</h5>
<p>Use the <code>SET PROFILE CALL_SEND_TO_VM</code> to enable (or disable) voicemail for forwarded calls.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; SET PROFILE CALL_SEND_TO_VM True</code></p>
<p><strong>Response</strong><br>
<code>&lt;- PROFILE CALL_SEND_TO_VM True</code></p>
<p><strong>Version</strong><br>
Protocol 1.4</p>
<p><a name="Chat"></a></p>
<h4>Creating chats and sending messages</h4>
<p>This section contains the commands for creating chats and sending messages.</p>
<p><a name="COMMAND_CHAT_CREATE"></a></p>
<h5><span class="caps">CHAT</span> <span class="caps">CREATE</span></h5>
<p>This command creates a chat object.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; CHAT CREATE [&lt;target&gt;, &lt;target&gt;*]</code></p>
<p><strong>Response</strong><br>
<code>&lt;- CHAT &lt;chat_id&gt; STATUS &lt;value&gt;</code></p>
<p><strong>Version</strong><br>
Protocol 5, updated in protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>&lt;target&gt;</code> – username(s) with whom to create a chat</li>
	<li><code>&lt;chat_id&gt;</code> – chat identifier; string (usually looks like “#me/$target;012345679012345”)</li>
	<li><code>&lt;value&gt;</code> – depends on the type of chat created: <code>DIALOG</code> for a 1:1 chat; <code>MULTI_SUBSCRIBED</code> for a chat with multiple participants</li>
</ul>
<p><strong>Notes</strong></p>
<ul>
	<li>From version 3.6 and later, opening chat windows (both from <span class="caps">API</span> and manually via UI) generate additional chat window open and close notfication messages. Refer to the <a href="#STATUS_CHAT">Chat notifications section</a> for more information.</li>
	<li>The <code>CHAT CREATE</code> command does not open a chat window; use the <a href="#COMMAND_OPEN_CHAT"><span class="caps">OPEN</span> <span class="caps">CHAT</span> command</a> to do so.</li>
	<li>Starting from protocol 7, the <target> parameter(s) are no longer mandatory. If no usernames are passed in parameters, an empty multichat is created.</target></li>
</ul>
<p><strong>Example:</strong></p>
<pre style="codeSample">//------------------------------------------------------------------
// Creating chat with one target
-&gt; CHAT CREATE anappo5
&lt;- CHAT #anappo/$anappo5;2e4e763a2fc121ed STATUS DIALOG
-&gt; OPEN CHAT #anappo/$anappo5;2e4e763a2fc121ed
&lt;- OPEN CHAT #anappo/$anappo5;2e4e763a2fc121ed
//------------------------------------------------------------------
// Creating chat with no target
-&gt; CHAT CREATE
&lt;- CHAT #anappo/$72cb4c9d0871e6dc NAME #anappo/$72cb4c9d0871e6dc
&lt;- CHAT #anappo/$72cb4c9d0871e6dc ACTIVITY_TIMESTAMP 0
&lt;- CHAT #anappo/$72cb4c9d0871e6dc STATUS MULTI_SUBSCRIBED
&lt;- CHAT #anappo/$72cb4c9d0871e6dc TYPE MULTICHAT
&lt;- CHAT #anappo/$72cb4c9d0871e6dc STATUS UNSUBSCRIBED
&lt;- CHATMEMBER 570 ROLE USER
&lt;- CHAT #anappo/$72cb4c9d0871e6dc MYROLE USER
&lt;- CHAT #anappo/$72cb4c9d0871e6dc MEMBERS anappo
&lt;- CHAT #anappo/$72cb4c9d0871e6dc ACTIVEMEMBERS anappo
&lt;- CHAT #anappo/$72cb4c9d0871e6dc MYSTATUS SUBSCRIBED
&lt;- CHAT #anappo/$72cb4c9d0871e6dc STATUS MULTI_SUBSCRIBED
&lt;- CHAT #anappo/$72cb4c9d0871e6dc TIMESTAMP 1175089677
-&gt; OPEN CHAT #anappo/$72cb4c9d0871e6dc
&lt;- OPEN CHAT #anappo/$72cb4c9d0871e6dc
//------------------------------------------------------------------
// Creating chat with two targets
-&gt; CHAT CREATE anappo3, anappo5
&lt;- CHAT #anappo/$8c9e3bb94643d668 NAME #anappo/$8c9e3bb94643d668
&lt;- CHAT #anappo/$8c9e3bb94643d668 ACTIVITY_TIMESTAMP 0
&lt;- CHAT #anappo/$8c9e3bb94643d668 STATUS MULTI_SUBSCRIBED
&lt;- CHAT #anappo/$8c9e3bb94643d668 TYPE MULTICHAT
&lt;- CHAT #anappo/$8c9e3bb94643d668 STATUS UNSUBSCRIBED
&lt;- CHATMEMBER 585 ROLE USER
&lt;- CHAT #anappo/$8c9e3bb94643d668 MYROLE USER
&lt;- CHAT #anappo/$8c9e3bb94643d668 MEMBERS anappo
&lt;- CHAT #anappo/$8c9e3bb94643d668 ACTIVEMEMBERS anappo
&lt;- CHAT #anappo/$8c9e3bb94643d668 MYSTATUS SUBSCRIBED
&lt;- CHAT #anappo/$8c9e3bb94643d668 STATUS MULTI_SUBSCRIBED
&lt;- CHAT #anappo/$8c9e3bb94643d668 TIMESTAMP 1175089858
&lt;- CHAT #anappo/$8c9e3bb94643d668 MEMBERS anappo anappo3 anappo5
&lt;- CHAT #anappo/$8c9e3bb94643d668 FRIENDLYNAME anappo3, anappo5
-&gt; OPEN CHAT #anappo/$8c9e3bb94643d668
&lt;- OPEN CHAT #anappo/$8c9e3bb94643d668
</pre>
<p><strong>Error codes:</strong></p>
<p>615, “<span class="caps">CHAT</span>: chat with given contact is disabled” – added in Skype version 3.5 (protocol 8)</p>
<p><a name="COMMAND_CHATMESSAGE"></a></p>
<h5><span class="caps">CHATMESSAGE</span></h5>
<p><strong>Syntax</strong><br>
<code>CHATMESSAGE &lt;chat_id&gt; &lt;message&gt;</code></p>
<p><strong>Response</strong><br>
<code>CHATMESSAGE &lt;id&gt; STATUS SENDING</code></p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>&lt;chat_id&gt;</code> – chat identifier</li>
	<li><code>&lt;message&gt;</code> – message text body to send</li>
	<li><code>&lt;id&gt;</code> – chatmessage identifier</li>
</ul>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 510 Invalid/unknown chat name given</code><br>
Chat with <chat_id> does not exist</chat_id></li>
	<li><code>ERROR 511 Sending a message to chat fails</code><br>
Could not send message to chat (eg. not a member)</li>
</ul>
<p><a name="COMMAND_ALTER_CHAT_SETTOPIC"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETTOPIC</span></h5>
<p>Changes chat topic.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; ALTER CHAT &lt;chat_id&gt; SETTOPIC &lt;topic&gt;</code></p>
<p><code>&lt;- ALTER CHAT SETTOPIC</code></p>
<p>See also <a href="#COMMAND_ALTER_CHAT_SETTOPICXML"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETTOPICXML</span></a> command.</p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 501 CHAT: No chat found for given chat</code><br>
Chat with <id> does not exist</id></li>
</ul>
<p><a name="COMMAND_ALTER_CHAT_SETTOPICXML"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETTOPICXML</span></h5>
<p>Enables you to set a chat topic that contains <span class="caps">XML</span> formatting elements. Note that the standard chat topic will be updated as well, stripped of <span class="caps">XML</span> tags.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; ALTER CHAT &lt;chat_id&gt; SETTOPICXML &lt;topic&gt;</code></p>
<p><code>&lt;- ALTER CHAT SETTOPICXML</code></p>
<p><strong>Example (without feedback notifications):</strong></p>
<pre style="codeSample">-&gt; ALTER CHAT #test/$b9275b3b334341f2 SETTOPICXML &lt;BLINK&gt;topic is blinking&lt;/BLINK&gt;
-&gt; ALTER CHAT #test/$b9275b3b334341f2 SETTOPICXML &lt;B&gt;topic in bold&lt;/B&gt;
-&gt; ALTER CHAT #test/$b9275b3b334341f2 SETTOPICXML &lt;I&gt;topic in italic&lt;/I&gt;
-&gt; ALTER CHAT #test/$b9275b3b334341f2 SETTOPICXML &lt;U&gt;topic with underline&lt;/U&gt;
-&gt; ALTER CHAT #test/$b9275b3b334341f2 SETTOPICXML Smiley: &lt;SS type="smile"&gt;:-)&lt;/SS&gt;
-&gt; ALTER CHAT #test/$b9275b3b334341f2 SETTOPICXML &lt;FONT COLOR="#FF0010"&gt;topic in red&lt;/FONT&gt;
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_ALTER_CHAT_ADDMEMBERS"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">ADDMEMBERS</span></h5>
<p>This command adds new members to a chat.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; ALTER CHAT &lt;chat_id&gt; ADDMEMBERS &lt;target&gt;[, &lt;target&gt;]*</code></p>
<p><code>&lt;- ALTER CHAT ADDMEMBERS</code></p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 501 CHAT: No chat found for given chat</code><br>
Chat with <chat_id> does not exist</chat_id></li>
	<li><code>ERROR 504 CHAT: Action failed</code><br>
Could not add members into chat (eg <target> is already a member; you have left chat)</target></li>
</ul>
<p><a name="COMMAND_ALTER_CHAT_LEAVE"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">LEAVE</span></h5>
<p>This command causes user to leave the chat.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; ALTER CHAT &lt;chat_id&gt; LEAVE</code></p>
<p><code>&lt;- ALTER CHAT LEAVE</code></p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 501 CHAT: No chat found for given chat</code><br>
Chat with <chat_id> does not exist</chat_id></li>
	<li><code>ERROR 504 CHAT: Action failed</code><br>
Could not leave chat (for example if the user has already left this chat)</li>
</ul>
<p><a name="COMMAND_ALTER_CHAT_BOOKMARKED"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">BOOKMARKED</span></h5>
<p>Adds chat to the list of bookmarked chats.</p>
<p><strong>Syntax to bookmark a chat:</strong><br>
<code>-&gt; ALTER CHAT &lt;chat_id&gt; BOOKMARK</code></p>
<p><code>&lt;- ALTER CHAT &lt;ID&gt; BOOKMARKED TRUE</code></p>
<p><strong>Syntax to remove a chat from list of bookmarked chats:</strong><br>
<code>-&gt; ALTER CHAT &lt;ID&gt; UNBOOKMARK</code></p>
<p><code>&lt;- ALTER CHAT &lt;ID&gt; BOOKMARKED FALSE</code></p>
<p>Refer to following <code>SEARCH</code> commands on how to obtain a chat ID</p>
<p><a href="#COMMAND_SEARCH_CHATS"><span class="caps">SEARCH</span> <span class="caps">CHATS</span></a></p>
<p><a href="#COMMAND_SEARCH_ACTIVECHATS"><span class="caps">SEARCH</span> <span class="caps">ACTIVECHATS</span></a></p>
<p><a href="#COMMAND_SEARCH_MISSEDCHATS"><span class="caps">SEARCH</span> <span class="caps">MISSEDCHATS</span></a></p>
<p><a href="#COMMAND_SEARCH_RECENTCHATS"><span class="caps">SEARCH</span> <span class="caps">RECENTCHATS</span></a></p>
<p><a href="#COMMAND_SEARCH_BOOKMARKEDCHATS"><span class="caps">SEARCH</span> <span class="caps">BOOKMARKEDCHATS</span></a></p>
<p><strong>Version</strong><br>
Protocol 6, Skype <span class="caps">API</span> version 2.5</p>
<p><a name="COMMAND_GET_CHAT_CHATMESSAGES"></a></p>
<h5><span class="caps">GET</span> <span class="caps">CHAT</span> <span class="caps">CHATMESSAGES</span></h5>
<p>Returns IDs of chatmessage objects in a specified chat.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; GET CHAT &lt;chat_id&gt; CHATMESSAGES</code></p>
<p><code>&lt;- CHAT &lt;chat_id&gt; CHATMESSAGES &lt;id&gt;[, &lt;id&gt;]*</code></p>
<p><strong>Version:</strong><br>
Protocol 5</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 501 CHAT: No chat found for given chat</code><br>
Chat with <chat_id> does not exist</chat_id></li>
</ul>
<p><a name="COMMAND_GET_CHAT_RECENTCHATMESSAGES"></a></p>
<h5><span class="caps">GET</span> <span class="caps">CHAT</span> <span class="caps">RECENTCHATMESSAGES</span></h5>
<p><strong>Syntax</strong><br>
<code>GET CHAT &lt;chat_id&gt; RECENTCHATMESSAGES</code></p>
<p><strong>Response</strong><br>
<code>CHAT &lt;chat_id&gt; RECENTCHATMESSAGES &lt;id&gt;[, &lt;id&gt;]*</code></p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 501 CHAT: No chat found for given chat</code><br>
Chat with <chat_id> does not exist</chat_id></li>
</ul>
<p><a name="COMMAND_SET_CHATMESSAGE_SEEN"></a></p>
<h5><span class="caps">SET</span> <span class="caps">CHATMESSAGE</span> <span class="caps">SEEN</span></h5>
<p><strong>Syntax</strong><br>
<code>SET CHATMESSAGE &lt;id&gt; SEEN</code></p>
<p><strong>Response</strong><br>
<code>CHATMESSAGE &lt;id&gt; STATUS &lt;value&gt;</code></p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>&lt;id&gt;</code> – chat message ID.</li>
	<li><code>&lt;value&gt;</code> – new value for chat message status; refer to <a href="#OBJECT_CHATMESSAGE"><span class="caps">CHATMESSAGE</span> object</a> for status values</li>
</ul>
<p><strong>Version</strong><br>
Protocol 3</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SET CHATMESSAGE 61 SEEN
&lt;- CHATMESSAGE 61 STATUS READ</pre>
<p><strong>Errors</strong></p>
<pre style="codeSample">ERROR 18 SET: invalid WHAT
CHATMESSAGE command is missing or misspelled
</pre>

<pre style="codeSample">ERROR 31 Unknown message id
Unknown chat message ID
</pre>


<pre style="codeSample">ERROR 30 Invalid message id
Chat message ID is misspelled or contains non-permitted symbols (numeric are permitted)
</pre>


<pre style="codeSample">ERROR 32 Invalid WHAT
Invalid status given to chat message, for example the message is already marked as seen
</pre>
<p><a name="COMMAND_SET_CHATMESSAGE_BODY"></a></p>
<h5><span class="caps">SET</span> <span class="caps">CHATMESSAGE</span> <span class="caps">BODY</span></h5>
<p>This command enables you to change the text of a chat message.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SET CHATMESSAGE &lt;chatmessage_id&gt; BODY &lt;text&gt;</code></p>
<p>Weather a chat message text is changeable can be determined by checking the <code>IS_EDITABLE</code> property of a <code>CHATMESSAGE</code> object.</p>
<p>The rules for allowing editing are:</p>
<ul>
	<li>Everyone can change their own messages.</li>
	<li>Creator of public chat can edit messages from others.</li>
	<li>Masters can edit messages originating from others, except those from the chat creator.</li>
	<li>Helpers and below cannot edit messages from others.</li>
</ul>
<p>Refer to <a href="#CHAT_ROLES"><span class="caps">CHAT</span> <span class="caps">ROLES</span> section</a> for the list of chat roles.</p>
<p><strong>Example:</strong></p>
<pre style="codeSample">//----------------------------------------------------------------
// First lets send out a chat message
-&gt; CHATMESSAGE #anappo/$a1044019f5dc8c48 Test chat message
&lt;- CHATMESSAGE 864 STATUS SENDING
&lt;- CHAT #anappo/$a1044019f5dc8c48 ACTIVITY_TIMESTAMP 1175093328
&lt;- CHATMESSAGE 864 STATUS SENT
//----------------------------------------------------------------
// Then lets see if we can edit it..
-&gt; GET CHATMESSAGE 864 IS_EDITABLE
&lt;- CHATMESSAGE 864 IS_EDITABLE TRUE
//----------------------------------------------------------------
// Then see if we can change the message text
-&gt; SET CHATMESSAGE 864 BODY Test message after being edited
&lt;- CHATMESSAGE 864 BODY Test message after being edited
&lt;- CHATMESSAGE 864 EDITED_TIMESTAMP 1175093385
&lt;- CHATMESSAGE 864 EDITED_BY anappo
&lt;- CHATMESSAGE 864 BODY Test message after being edited
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_SET_MESSAGE_SEEN"></a></p>
<h5><span class="caps">SET</span> <span class="caps">MESSAGE</span> <span class="caps">SEEN</span> – obsolete</h5>
<p>Mark message as seen by the user and remove it from the missed 
messages list. This command is obsolete and has been replaced by the <a href="#COMMAND_SET_CHATMESSAGE_SEEN"><span class="caps">SET</span> <span class="caps">CHATMESSAGE</span> <span class="caps">SEEN</span> command</a>.</p>
<p><strong>Syntax</strong><br>
<code>SET MESSAGE &lt;id&gt; SEEN</code></p>
<p><strong>Response</strong><br>
<code>MESSAGE &lt;id&gt; STATUS value</code></p>
<p><strong>Properties</strong></p>
<ul>
	<li><code>&lt;id&gt;</code> – message ID;</li>
	<li><code>value</code> – (new) status value</li>
</ul>
<p><strong>Version</strong><br>
Protocol 1, deprecated in protocol 3</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SET MESSAGE 1578 SEEN
&lt;- MESSAGE 1578 STATUS READ</pre>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 18 SET: invalid WHAT</code><br>
Object name missing or misspelled.</li>
	<li><code>ERROR 30 Invalid message id</code><br>
ID includes other than numeric characters.</li>
	<li><code>ERROR 31 Unknown message id</code><br>
Message with specified ID does not exist in current user’s message history.</li>
	<li><code>ERROR 32 Invalid WHAT</code><br>
Property name missing or misspelled.</li>
</ul>
<p><a name="COMMAND_MESSAGE"></a></p>
<h5><span class="caps">MESSAGE</span> – obsolete</h5>
<p>The <code>MESSAGE</code> command is obsolete and has been replaced by the <a href="#COMMAND_CHATMESSAGE"><span class="caps">CHATMESSAGE</span> command</a>.</p>
<p><strong>Syntax</strong><br>
<code>MESSAGE &lt;target&gt; &lt;text&gt;</code></p>
<p><strong>Response</strong><br>
<code>CHATMESSAGE &lt;id&gt; STATUS SENDING</code> (protocol 3 and up)<br>
<code>MESSAGE &lt;id&gt; STATUS SENDING</code> (protocol 1 and 2)</p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>&lt;target&gt;</code> – target username to whom to send the message</li>
	<li><code>&lt;text&gt;</code> – message body, for example Please call me</li>
</ul>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><strong>Errors</strong></p>
<pre style="codeSample">ERROR 26 Invalid user handle
The target username is missing or includes symbols which are not premitted</pre>


<pre style="codeSample">ERROR 43 Cannot send empty message
The message has no body.</pre>
<p><strong>Notes</strong><br>
When message sending fails, a <span class="caps">LEFT</span>-type message is received. The message’s <code>LEAVEREASON</code> shows why it failed. See the <a href="#OBJECT_CHATMESSAGE"><span class="caps">CHATMESSAGE</span> object</a> for a description.</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; MESSAGE echo123 Please call me
&lt;- MESSAGE 982 STATUS SENDING
&lt;- MESSAGE 982 STATUS SENT</pre>
<p><a name="COMMAND_GET_CHAT_MEMBEROBJECTS"></a></p>
<h5><span class="caps">GET</span> <span class="caps">CHAT</span> <span class="caps">MEMBEROBJECTS</span></h5>
<p>This command provides list of <code>CHATMEMBER</code> object IDs that represent chat participants.</p>
<p><strong>Syntax:</strong><br>
<code>GET CHAT &lt;id&gt; MEMBEROBJECTS</code></p>
<p>Refer to</p>
<ul>
	<li><a href="#OBJECT_CHATMEMBER"><span class="caps">CHATMEMBER</span> object</a> for a list of <code>CHATMEMBER</code> properties.</li>
	<li><a href="#COMMAND_GET_CHATMEMBER"><span class="caps">GET</span> <span class="caps">CHATMEMBER</span> command</a> for how to access <code>CHATMEMBER</code> properties.</li>
	<li><a href="#COMMAND_SEARCH_CHATS"><span class="caps">SEARCH</span> <span class="caps">CHATS</span></a> for how to get a list of <code>CHAT</code> IDs.</li>
</ul>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; GET CHAT #test/$test3;5f7cdbdd32dc731c MEMBEROBJECTS
&lt;- CHAT #test/$3;5f7cdbdd32dc731c MEMBEROBJECTS 453, 454, 1465
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_GET_CHATMEMBER"></a></p>
<h5><span class="caps">GET</span> <span class="caps">CHATMEMBER</span></h5>
<p>This command provides read access to objects representing chat participants.</p>
<p><strong>Syntax:</strong><br>
<code>GET CHATMEMBER &lt;id&gt; &lt;property&gt;</code></p>
<p>Refer to</p>
<ul>
	<li><a href="#OBJECT_CHATMEMBER"><span class="caps">CHATMEMBER</span> object</a> for a list of object properties.</li>
	<li><a href="#COMMAND_GET_CHAT_MEMBEROBJECTS"><span class="caps">GET</span> <span class="caps">CHAT</span> <span class="caps">MEMBEROBJECTS</span> command</a> for a list of object IDs.</li>
</ul>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; GET CHAT #test/$test3;5f7cdbdd32dc731c MEMBEROBJECTS
&lt;- CHAT #test/$3;5f7cdbdd32dc731c MEMBEROBJECTS 453, 454, 1465
-&gt; GET CHATMEMBER 1465 IDENTITY
&lt;- CHATMEMBER 1465 IDENTITY test_p
-&gt; GET CHATMEMBER 1465 CHATNAME
&lt;- CHATMEMBER 1465 CHATNAME #test/$test3;5f7cdbdd32dc731c
-&gt; GET CHATMEMBER 1465 ROLE
&lt;- CHATMEMBER 1465 ROLE USER
-&gt; GET CHATMEMBER 1465 IS_ACTIVE
&lt;- CHATMEMBER 1465 IS_ACTIVE TRUE
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_ALTER_CHAT_JOIN"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">JOIN</span></h5>
<p>This command enables you to re-join a Public chat that you have previously left. This command assumes a <code>CHAT</code> object is already present in the local system.</p>
<p>Note that this command does work with non-public multichats. <br>
*</p>
<p><strong>Syntax:</strong><br>
<code>ALTER CHAT &lt;chat_id&gt; JOIN</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">//----------------------------------------------------------------------------
// Leaving public chat #anappo/$a1044019f5dc8c48
-&gt; ALTER CHAT #anappo/$a1044019f5dc8c48 LEAVE
&lt;- ALTER CHAT LEAVE
&lt;- MESSAGE 392 STATUS SENDING
&lt;- CHAT #anappo/$a1044019f5dc8c48 MEMBERS anappo2 anappo3 
&lt;- CHAT #anappo/$a1044019f5dc8c48 ACTIVEMEMBERS anappo2 anappo3 
&lt;- CHAT #anappo/$a1044019f5dc8c48 MYSTATUS UNSUBSCRIBED
&lt;- CHAT #anappo/$a1044019f5dc8c48 STATUS UNSUBSCRIBED
&lt;- CHAT #anappo/$a1044019f5dc8c48 BOOKMARKED FALSE
&lt;- MESSAGE 392 STATUS SENT
//----------------------------------------------------------------------------
// Re-joining the chat
-&gt; ALTER CHAT #anappo/$a1044019f5dc8c48 JOIN
&lt;- CHAT #anappo/$a1044019f5dc8c48 MYSTATUS CONNECTING
&lt;- CHAT #anappo/$a1044019f5dc8c48 STATUS UNSUBSCRIBED
&lt;- ALTER CHAT JOIN
&lt;- CHAT #anappo/$a1044019f5dc8c48 MEMBERS anappo2 anappo3
&lt;- CHAT #anappo/$a1044019f5dc8c48 ACTIVEMEMBERS anappo2 anappo3
&lt;- CHAT #anappo/$a1044019f5dc8c48 BOOKMARKED TRUE
&lt;- CHAT #anappo/$a1044019f5dc8c48 MEMBERS anappo2 anappo3 
&lt;- CHAT #anappo/$a1044019f5dc8c48 ACTIVEMEMBERS anappo2 anappo3 
&lt;- CHAT #anappo/$a1044019f5dc8c48 MYSTATUS WAITING_REMOTE_ACCEPT
&lt;- CHAT #anappo/$a1044019f5dc8c48 STATUS UNSUBSCRIBED
&lt;- CHATMEMBER 75 IS_ACTIVE FALSE
&lt;- CHATMEMBER 396 IS_ACTIVE FALSE
&lt;- CHAT #anappo/$a1044019f5dc8c48 MEMBERS anappo anappo2 anappo3 
&lt;- CHAT #anappo/$a1044019f5dc8c48 ACTIVEMEMBERS anappo anappo3
&lt;- CHAT #anappo/$a1044019f5dc8c48 MYSTATUS SUBSCRIBED
&lt;- CHAT #anappo/$a1044019f5dc8c48 STATUS MULTI_SUBSCRIBED
&lt;- CHATMEMBER 75 IS_ACTIVE TRUE
&lt;- CHATMEMBER 396 IS_ACTIVE TRUE
&lt;- CHAT #anappo/$a1044019f5dc8c48 ACTIVEMEMBERS anappo anappo2 anappo3 
&lt;- MESSAGE 398 STATUS READ
</pre>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 504 CHAT: action failed</code><br>
Attempt to re-join dialog or multichat. This command only enables you to re-join public chats.</li>
</ul>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_ALTER_CLEARRECENTMESSAGES"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">CLEARRECENTMESSAGES</span></h5>
<p>This command clears recent chat messages in a given chat. Note that 
this command does not actually update user interface when a Skype client
 chat window for that chat is open. To see the effect, close the chat 
window and re-open it.</p>
<p><strong>Syntax:</strong><br>
<code>ALTER CHAT &lt;chat_id&gt; CLEARRECENTMESSAGES</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; ALTER CHAT #anappo/$test_p;297fcefb07ffc4b2 CLEARRECENTMESSAGES
&lt;- ALTER CHAT CLEARRECENTMESSAGES
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_ALTER_CHAT_SETALERTSTRING"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETALERTSTRING</span></h5>
<p>This command enables you to set up a chat alert string. Normally, a 
small notification window will pop up at system tray when someone posts a
 message in a chat while the chat window is closed. When an alert string
 is set, the notification window will only appear when the message 
contains value set in <code>SETALERTSTRING</code> property.</p>
<p>Note that when setting this value from <span class="caps">API</span>,
 first symbol of the alert string is assumed to be “=” and gets 
stripped. To prevent first symbol of your alert string from being 
stripped, add “=” in front of it.</p>
<p><strong>Syntax:</strong><br>
<code>ALTER CHAT &lt;chat_id&gt; SETALERTSTRING &lt;alert_string&gt;</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; ALTER CHAT #anappo/$a1044019f5dc8c48 SETALERTSTRING "=test"
&lt;- ALTER CHAT SETALERTSTRING
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_ALTER_CHAT_ACCEPTADD"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">ACCEPTADD</span></h5>
<p>This command is used for accepting invitations to shared contact 
groups. In other chat contexts, invitations are either accepted or 
declined automatically, depending on user’s privacy settings.</p>
<p><strong>Syntax:</strong><br>
<code>ALTER CHAT &lt;chat_id&gt; ACCEPTADD</code></p>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_ALTER_CHAT_DISBAND"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">DISBAND</span></h5>
<p>This command removes all chat participants from the chat and closes it.</p>
<p><strong>Syntax:</strong><br>
<code>ALTER CHAT &lt;chat_id&gt; DISBAND</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; ALTER CHAT #anappo/$a1044019f5dc8c48 DISBAND
&lt;- ALTER CHAT DISBAND
&lt;- CHAT #anappo/$a1044019f5dc8c48 MYSTATUS CHAT_DISBANDED
&lt;- CHAT #anappo/$a1044019f5dc8c48 STATUS UNSUBSCRIBED
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="PUBLIC_CHATS"></a></p>
<h4>Public Chats</h4>
<p>Public Chats were introduced in <span class="caps">API</span> version 3.0 Public Chats are an extension of existing multichat functionality.</p>
<p>From <span class="caps">API</span> point of view, public chats differ from multichats in that:</p>
<ul>
	<li><code>CREATE</code> command works somewhat differently, as a public chat identifier is formed differently from multichats;</li>
</ul>
<p>Public chats have a user hierarchy with different privilege levels 
and a set of tools for chat administration (similar to administration of
 <span class="caps">IRC</span> channels). These administration tools are actually available for standard multichats as well (<span class="caps">API</span> commands such as <code>KICK</code> work in multichats, altho the Skype user interface for setting privileges is not available for multichats).</p>
<p>More or less everything listed under <a href="#Chat">Creating chats and sending messages</a> section is also applicable to public chats. The list of sections below is specific to public chats.</p>
<p><a name="CHAT_ROLES"></a></p>
<h5><span class="caps">CHAT</span> <span class="caps">ROLES</span> and <span class="caps">PRIVILEGES</span></h5>

	<ul>
		<li><code>CREATOR</code> – member who created the chat. There can be only one creator per chat. Only creator can promote other members to masters.</li>
		<li><code>MASTER</code> – Also known as chat hosts. Masters cannot promote other people to masters.</li>
		<li><code>HELPER</code> – a semi-privileged member. Helpers will not be affected by the <code>USERS_ARE_LISTENERS</code> option. Helpers cannot promote or demote other members.</li>
		<li><code>USER</code> – regular members who can post messages into the chat.</li>
		<li><code>LISTENER</code> – a demoted member who can only receive messages but not post anything into the chat.</li>
		<li><code>APPLICANT</code> – a member waiting for acceptance into the chat. Member cannot be demoted to applicants once they have been accepted.</li>
	</ul><p>Refer to</p>
<ul>
	<li><a href="#COMMAND_ALTER_CHATMEMBER_CANSETROLETO"><span class="caps">ALTER</span> <span class="caps">CHATMEMBER</span> <span class="caps">CANSETROLETO</span> command</a> for how to determine if it is possible to change the role of any given chat member.</li>
	<li><a href="#COMMAND_ALTER_CHATMEMBER_SETROLETO"><span class="caps">ALTER</span> <span class="caps">CHATMEMBER</span> <span class="caps">SETROLETO</span> command</a> for more info on how to change chat member roles.</li>
</ul>
<p><a name="COMMAND_ALTER_CHAT_SETPASSWORD"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETPASSWORD</span></h5>
<p>This command enables you to set password protection to a chat channel.</p>
<p><strong>Syntax:</strong><br>
<code>ALTER CHAT &lt;chat_id&gt; SETPASSWORD &lt;password&gt; &lt;password_hint&gt;</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; ALTER CHAT #anappo/$a1044019f5dc8c48 SETPASSWORD test2 password is test2
&lt;- ALTER CHAT SETPASSWORD
&lt;- CHAT #anappo/$a1044019f5dc8c48 PASSWORDHINT password is test2
</pre>
<p>Note that the password must be one word – without any whitespaces in 
it. All subsequent words in command parameters will be considered as 
password hint. Password hint will be displayed to users when they join 
the chat.</p>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_ALTER_CHAT_ENTERPASSWORD"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">ENTERPASSWORD</span></h5>
<p>This command enables you to enter passwords from within your own code, when joining password-protected chat channels.</p>
<p><strong>Syntax:</strong><br>
<code>ALTER CHAT &lt;chat_id&gt; ENTERPASSWORD &lt;password&gt;</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">//---------------------------------------------------------------------------
// While trying to connect to a public password-protected channel, 
// we get following messages:
&lt;- CHAT #test_l/$4ea116d4c216baef PASSWORDHINT "password is test"
&lt;- CHAT #test_l/$4ea116d4c216baef MYSTATUS PASSWORD_REQUIRED
&lt;- CHAT #test_l/$4ea116d4c216baef STATUS UNSUBSCRIBED
//---------------------------------------------------------------------------
// Lets supply a wrong password first and see what happens..
-&gt; ALTER CHAT #test_l/$4ea116d4c216baef ENTERPASSWORD test2
&lt;- ALTER CHAT ENTERPASSWORD
&lt;- CHAT #test_l/$4ea116d4c216baef MYSTATUS CONNECTING
&lt;- CHAT #test_l/$4ea116d4c216baef STATUS UNSUBSCRIBED
&lt;- CHAT #test_l/$4ea116d4c216baef MYSTATUS PASSWORD_REQUIRED
&lt;- CHAT #test_l/$4ea116d4c216baef STATUS UNSUBSCRIBED
//---------------------------------------------------------------------------
// Now lets supply correct password:
-&gt; ALTER CHAT #test_l/$4ea116d4c216baef ENTERPASSWORD test
&lt;- ALTER CHAT ENTERPASSWORD
&lt;- CHAT #test_l/$4ea116d4c216baef MYSTATUS CONNECTING
&lt;- CHAT #test_l/$4ea116d4c216baef STATUS UNSUBSCRIBED
&lt;- CHAT #test_l/$4ea116d4c216baef MYSTATUS WAITING_REMOTE_ACCEPT
&lt;- CHAT #test_l/$4ea116d4c216baef STATUS UNSUBSCRIBED
&lt;- CHAT #test_l/$4ea116d4c216baef MYROLE USER
&lt;- CHAT #test_l/$4ea116d4c216baef MEMBERS anappo test_l
&lt;- CHAT #test_l/$4ea116d4c216baef ACTIVEMEMBERS anappo test_l
&lt;- CHAT #test_l/$4ea116d4c216baef TIMESTAMP 1174906897
&lt;- CHAT #test_l/$4ea116d4c216baef ADDER test_l
&lt;- CHAT #test_l/$4ea116d4c216baef GUIDELINES test guidelines
&lt;- MESSAGE 557 STATUS RECEIVED
&lt;- CHAT #test_l/$4ea116d4c216baef TOPIC TestingPublicChats2
&lt;- CHAT #test_l/$4ea116d4c216baef OPTIONS 1
&lt;- CHATMEMBER 556 ROLE LISTENER
&lt;- CHAT #test_l/$4ea116d4c216baef MYROLE LISTENER
&lt;- CHATMEMBER 547 ROLE CREATOR
&lt;- CHAT #test_l/$4ea116d4c216baef MYSTATUS SUBSCRIBED
&lt;- CHAT #test_l/$4ea116d4c216baef STATUS MULTI_SUBSCRIBED
&lt;- CHAT #test_l/$4ea116d4c216baef FRIENDLYNAME TestingPublicChats2
&lt;- MESSAGE 558 STATUS RECEIVED
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_ALTER_CHAT_SETOPTIONS"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETOPTIONS</span></h5>
<p>This command enables you to change chat options.</p>
<p><strong>Syntax:</strong><br>
<code>ALTER CHAT &lt;chat_id&gt; SETOPTIONS &lt;options bitmap&gt;</code></p>
<p><strong>Chat options bits:</strong></p>
<ul>
	<li>1 – <code>JOINING_ENABLED</code> – when this bit is off, new users cannot join the chat.</li>
	<li>2 – <code>JOINERS_BECOME_APPLICANTS</code> – when this bit is on, 
new users will be able to join the chat but they will be unable to post 
or receive messages until authorized by one of the chat administrators (<code>CREATOR</code> or <code>MASTER</code>).</li>
	<li>4 – <code>JOINERS_BECOME_LISTENERS</code> – when this bit is on, new users will be able to receive message in chat but unable to post until promoted to <code>USER</code> role. Basically a read-only flag for new users.</li>
	<li>8 – <code>HISTORY_DISCLOSED</code> – when this bit is off, newly 
joined members can see chat history prior to their joining. Maximum 
amount of history backlog available is either 400 messages or 2 weeks of
 time, depending on which limit is reached first.</li>
	<li>16 – <code>USERS_ARE_LISTENERS</code> – read-only flag for chat members with <code>USER</code> role.</li>
	<li>32 – <code>TOPIC_AND_PIC_LOCKED_FOR_USERS</code> – when this bit of options is off, <code>USER</code> level chat members can change chat topic and the topic picture.</li>
</ul>
<p><strong>Example:</strong></p>
<pre style="codeSample">//-----------------------------------------------------------------------------
// Setting flags: JOINING_ENABLED, JOINERS_BECOME_LISTENERS, HISTORY_DISCLOSED
// Adding up the bits: 1 + 4 + 8 = 13
-&gt; ALTER CHAT #anappo/$a1044019f5dc8c48 SETOPTIONS 13
&lt;- MESSAGE 678 STATUS SENDING
&lt;- ALTER CHAT SETOPTIONS
&lt;- CHAT #anappo/$a1044019f5dc8c48 OPTIONS 13
&lt;- MESSAGE 678 STATUS SENT
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_ALTER_CHATMEMBER_SETROLETO"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHATMEMBER</span> <span class="caps">SETROLETO</span></h5>
<p>This command enables chat administrators (chat <code>CREATORS</code> <span class="caps">AND</span> <code>MASTERS</code>) to set privilege levels (roles) for other chat members.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; ALTER CHATMEMBER &lt;id&gt; SETROLETO CREATOR|MASTER|HELPER|USER|LISTENER</code></p>
<p>Refer to</p>
<ul>
	<li><a href="#CHAT_ROLES">Chat roles section</a> for more information on different roles. Note that you cannot demote a user to <code>LISTENER</code> role when the chat is already in ready-only mode (<code>USERS_ARE_LISTENERS</code> chat option).</li>
	<li><a href="#COMMAND_ALTER_CHATMEMBER_CANSETROLETO"><span class="caps">ALTER</span> <span class="caps">CHATMEMBER</span> <span class="caps">CANSETROLETO</span> command</a> for how to determine if it is possible to change the role of any given chat member.</li>
</ul>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; GET CHAT #anappo/$anappo3;5f7cdbdd32dc731c MEMBEROBJECTS
&lt;- CHAT #anappo/$anappo3;5f7cdbdd32dc731c MEMBEROBJECTS 1846, 2227, 2495
-&gt; GET CHATMEMBER 2495 IDENTITY
&lt;- CHATMEMBER 2495 IDENTITY anappo2
-&gt; GET CHATMEMBER 2495 ROLE
&lt;- CHATMEMBER 2495 ROLE HELPER
-&gt; ALTER CHATMEMBER 2495 SETROLETO USER
&lt;- ALTER CHATMEMBER SETROLETO
&lt;- MESSAGE 2620 STATUS SENDING
&lt;- CHATMEMBER 2495 ROLE USER
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_ALTER_CHATMEMBER_CANSETROLETO"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHATMEMBER</span> <span class="caps">CANSETROLETO</span></h5>
<p>This command can be used to determine weather current user is able to change the privilege level of another chat member.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; ALTER CHATMEMBER &lt;id&gt; CANSETROLETO CREATOR|MASTER|HELPER|USER|LISTENER|APPLICANT</code></p>
<p><code>&lt;- ALTER CHATMEMBER CANSETROLETO TRUE|FALSE</code></p>
<p>Note that unlike other <code>ALTER</code> commands, this one doesn’t actually change object properties.</p>
<p>Refer to</p>
<ul>
	<li><a href="#CHAT_ROLES">Chat roles section</a> for more information on different roles.</li>
	<li><a href="#COMMAND_ALTER_CHATMEMBER_SETROLETO"><span class="caps">ALTER</span> <span class="caps">CHATMEMBER</span> <span class="caps">SETROLETO</span> command</a> for more info on how to change chat member roles.</li>
</ul>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; GET CHAT #test/$test3;5f7cdbdd32dc731c MEMBEROBJECTS
&lt;- CHAT #test/$test3;5f7cdbdd32dc731c MEMBEROBJECTS 1846, 2227, 2495
-&gt; GET CHATMEMBER 2495 IDENTITY
&lt;- CHATMEMBER 2495 IDENTITY testuser
-&gt; ALTER CHATMEMBER 2495 CANSETROLETO HELPER
&lt;- ALTER CHATMEMBER CANSETROLETO TRUE
-&gt; ALTER CHATMEMBER 2495 SETROLETO HELPER
&lt;- ALTER CHATMEMBER SETROLETO
&lt;- MESSAGE 3166 STATUS SENDING
&lt;- CHATMEMBER 2495 ROLE HELPER
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_ALTER_CHAT_KICK"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">KICK</span></h5>
<p>With this command, chat member with sufficient privilege level (master or creator) can remove another member from chat.</p>
<p>Note that after being kicked from the channel, the kicked member can re-join the chat. For more permanent removal, see <a href="#COMMAND_ALTER_CHAT_KICKBAN"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">KICKBAN</span></a> command.</p>
<p><strong>Syntax:</strong><br>
<code>ALTER CHAT &lt;chat_id&gt; KICK &lt;skypename1[, skypename2 ..]&gt;</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; ALTER CHAT  #test/$a1044019f5dc8c48 KICK test2
&lt;- ALTER CHAT KICK
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_ALTER_CHAT_KICKBAN"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">KICKBAN</span></h5>
<p>With this command, chat member with sufficient privilege level 
(master or creator) can permanently remove another member from chat. 
Note that kickban only prevents the user from re-joining the chat. 
Banned users can be added back to the chat by administrators from within
 the chat.</p>
<p><strong>Syntax:</strong><br>
<code>ALTER CHAT &lt;chat_id&gt; KICKBAN &lt;skypename1[, skypename2 ..]&gt;</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; ALTER CHAT  #test/$a1044019f5dc8c48 KICKBAN test2
&lt;- ALTER CHAT KICKBAN
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_CHAT_FINDUSINGBLOB"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">FINDUSINGBLOB</span></h5>
<p>This command searches for existing <code>CHAT</code> object with given <code>BLOB</code> property value and returns chat ID and status. Refer to <a href="#OBJECT_CHAT"><span class="caps">CHAT</span> object</a> for more information.</p>
<p><strong>Syntax:</strong><br>
<code>CHAT FINDUSINGBLOB &lt;blob&gt;</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; CHAT FINDUSINGBLOB LsgqqqCTpxWYjt9PL1hSvGDOiPhqUuQAHxI7w7Qu7gJ3VZv_q_99ZJO4lF9Dfaw
&lt;- CHAT #anappo2/$d936403094338dbb STATUS MULTI_SUBSCRIBED
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_CHAT_CREATEUSINGBLOB"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">CREATEUSINGBLOB</span></h5>
<p>This command creates a chat object, based on public chat blob. This 
enables you to join public chats from within your own code, assuming 
that you have somehow obtained the chat blob.</p>
<p><strong>Syntax:</strong><br>
<code>CHAT CREATEUSINGBLOB &lt;blob&gt;</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">//------------------------------------------------------------------------------
// What we start is a blob of a public chat we parsed out of a 
// public chat URL or, for example, got sent via another chat.
// that blob is: 6aM81Z5mZRyricRDcjkdy5bf3Y6TsCbVvaxNVVCcYSVsQxRGhlAVmTgpYexh
// First we create a CHAT object.
-&gt; CHAT CREATEUSINGBLOB 6aM81Z5mZRyricRDcjkdy5bf3Y6TsCbVvaxNVVCcYSVsQxRGhlAVmTgpYexh
&lt;- CHAT #anappo/$b9275b3b334341f2 NAME #anappo/$b9275b3b334341f2
&lt;- CHAT #anappo/$b9275b3b334341f2 ACTIVITY_TIMESTAMP 0
&lt;- CHAT #anappo/$b9275b3b334341f2 STATUS UNSUBSCRIBED
&lt;- CHAT #anappo/$b9275b3b334341f2 TYPE MULTICHAT
&lt;- CHAT #anappo/$b9275b3b334341f2 MYSTATUS UNSUBSCRIBED
&lt;- CHAT #anappo/$b9275b3b334341f2 STATUS UNSUBSCRIBED
//------------------------------------------------------------------------------
// Now that we have chat object and it's ID, we can join the chat
-&gt; ALTER CHAT #anappo/$b9275b3b334341f2 JOIN
&lt;- CHAT #anappo/$b9275b3b334341f2 MYSTATUS CONNECTING
&lt;- CHAT #anappo/$b9275b3b334341f2 STATUS UNSUBSCRIBED
&lt;- ALTER CHAT JOIN
//------------------------------------------------------------------------------
// Note that this is our privilege level (role) in this chat
&lt;- CHATMEMBER 293 ROLE USER
&lt;- CHAT #anappo/$b9275b3b334341f2 MEMBERS anappo
&lt;- CHAT #anappo/$b9275b3b334341f2 FRIENDLYNAME Avo Nappo
&lt;- CHAT #anappo/$b9275b3b334341f2 ACTIVEMEMBERS anappo
&lt;- CHAT #anappo/$b9275b3b334341f2 ACTIVITY_TIMESTAMP 1175004600
&lt;- CHAT #anappo/$b9275b3b334341f2 BOOKMARKED TRUE
&lt;- CHAT #anappo/$b9275b3b334341f2 MEMBERS anappo anappo4
&lt;- CHAT #anappo/$b9275b3b334341f2 FRIENDLYNAME Avo Nappo, anappo4
&lt;- CHAT #anappo/$b9275b3b334341f2 ACTIVEMEMBERS anappo anappo4
&lt;- CHAT #anappo/$b9275b3b334341f2 MYSTATUS WAITING_REMOTE_ACCEPT
&lt;- CHAT #anappo/$b9275b3b334341f2 STATUS UNSUBSCRIBED
&lt;- CHATMEMBER 294 IS_ACTIVE FALSE
&lt;- CHAT #anappo/$b9275b3b334341f2 MYROLE USER
&lt;- CHAT #anappo/$b9275b3b334341f2 MEMBERS anappo anappo4 test_p
&lt;- MESSAGE 298 STATUS RECEIVED
&lt;- CHAT #anappo/$b9275b3b334341f2 ACTIVEMEMBERS anappo test_p
&lt;- CHAT #anappo/$b9275b3b334341f2 TIMESTAMP 1175003077
&lt;- CHAT #anappo/$b9275b3b334341f2 ADDER anappo
&lt;- CHAT #anappo/$b9275b3b334341f2 TOPIC TestingPublicChat3
&lt;- CHAT #anappo/$b9275b3b334341f2 OPTIONS 1
//------------------------------------------------------------------------------
// Following notification tells us chatmember ID of the chat owner (creator)
&lt;- CHATMEMBER 293 ROLE CREATOR
&lt;- CHAT #anappo/$b9275b3b334341f2 MYSTATUS SUBSCRIBED
&lt;- CHAT #anappo/$b9275b3b334341f2 STATUS MULTI_SUBSCRIBED
&lt;- CHAT #anappo/$b9275b3b334341f2 FRIENDLYNAME TestingPublicChat3
&lt;- MESSAGE 299 STATUS RECEIVED
&lt;- CHATMEMBER 294 IS_ACTIVE TRUE
&lt;- CHAT #anappo/$b9275b3b334341f2 ACTIVEMEMBERS anappo anappo4 test_p
//------------------------------------------------------------------------------
// We can use GET CHATMEMBER 293 IDENTITY to get creator's Skypename
-&gt; GET CHATMEMBER 293 IDENTITY
&lt;- CHATMEMBER 293 IDENTITY anappo
//------------------------------------------------------------------------------
// Opening chat window in UI
-&gt; OPEN CHAT #anappo/$b9275b3b334341f2
&lt;- OPEN CHAT #anappo/$b9275b3b334341f2
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_ALTER_CHAT_SETGUIDELINES"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETGUIDELINES</span></h5>
<p>This command enables you to set the Guidelines message for public 
chats. The guideline message is displayed at the top of the chat window.</p>
<p><strong>Syntax:</strong><br>
<code>ALTER CHAT &lt;chat_id&gt; SETGUIDELINES &lt;guidelines&gt;</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; ALTER CHAT #anappo/$a1044019f5dc8c48 SETGUIDELINES these here are test guidelines
&lt;- MESSAGE 744 STATUS SENDING
&lt;- ALTER CHAT SETGUIDELINES
&lt;- CHAT #anappo/$a1044019f5dc8c48 GUIDELINES these here are test guidelines
&lt;- MESSAGE 744 STATUS SENT
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="Group"></a></p>
<h4>Managing contacts and groups</h4>
<p>Users can group contacts, for example, creating separate groups for 
friends, family, and work. To add a user to a group, the user must be in
 the contact list. Contacts can be in multiple groups at the same time. 
Refer to the <a href="#OBJECT_GROUP"><span class="caps">GROUP</span> object</a> for a description of the object properties.</p>
<p>This section contains commands used for grouping the contacts.</p>
<p><a name="COMMAND_GET_GROUP_USERS"></a></p>
<h5><span class="caps">GET</span> <span class="caps">GROUP</span> <span class="caps">USERS</span></h5>
<p>The <code>GET GROUP USERS</code> command queries the members of a group.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; GET GROUP &lt;id&gt; USERS</code></p>
<p><strong>Response</strong><br>
<code>&lt;- GROUP &lt;id&gt; USERS &lt;user1&gt;, &lt;user2&gt;, &lt;user3&gt;</code></p>
<p>Refer to <a href="#COMMAND_SEARCH_GROUPS"><span class="caps">SEARCH</span> <span class="caps">GROUPS</span></a> on how to get the group ID list.</p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_GET_GROUP_VISIBLE"></a></p>
<h5><span class="caps">GET</span> <span class="caps">GROUP</span> <span class="caps">VISIBLE</span></h5>
<p>The <code>GET GROUP VISIBLE</code> command queries if a group is visible to the user.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; GET GROUP &lt;id&gt; VISIBLE</code></p>
<p><strong>Response</strong><br>
<code>&lt;- GROUP &lt;id&gt; VISIBLE {True|False}</code></p>
<p>Refer to <a href="#COMMAND_SEARCH_GROUPS"><span class="caps">SEARCH</span> <span class="caps">GROUPS</span></a> on how to get the group ID list.</p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_GET_GROUP_EXPANDED"></a></p>
<h5><span class="caps">GET</span> <span class="caps">GROUP</span> <span class="caps">EXPANDED</span></h5>
<p>The <code>GET GROUP EXPANDED</code> command queries whether a group is expanded in the Skype window.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; GET GROUP &lt;id&gt; EXPANDED</code></p>
<p><strong>Response</strong><br>
<code>&lt;- GROUP &lt;id&gt; EXPANDED {True|False}</code></p>
<p>Refer to <a href="#COMMAND_SEARCH_GROUPS"><span class="caps">SEARCH</span> <span class="caps">GROUPS</span></a> on how to get the group ID list.</p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_GET_GROUP_DISPLAYNAME"></a></p>
<h5><span class="caps">GET</span> <span class="caps">GROUP</span> <span class="caps">DISPLAYNAME</span></h5>
<p>The <code>GET GROUP DISPLAYNAME</code> gets the displayname for a group.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; GET GROUP &lt;id&gt; DISPLAYNAME</code></p>
<p><strong>Response</strong><br>
<code>&lt;- GROUP &lt;id&gt; DISPLAYNAME &lt;name&gt;</code></p>
<p>Refer to <a href="#COMMAND_SEARCH_GROUPS"><span class="caps">SEARCH</span> <span class="caps">GROUPS</span></a> on how to get the group ID list.</p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_SET_GROUP_DISPLAYNAME"></a></p>
<h5><span class="caps">SET</span> <span class="caps">GROUP</span> <span class="caps">DISPLAYNAME</span></h5>
<p>The <code>SET GROUP DISPLAYNAME</code> command changes the displayname for a group.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; SET GROUP &lt;id&gt; DISPLAYNAME &lt;name&gt;</code></p>
<p><strong>Response</strong><br>
<code>&lt;- GROUP &lt;id&gt; DISPLAYNAME &lt;name&gt;</code></p>
<p>Refer to <a href="#COMMAND_SEARCH_GROUPS"><span class="caps">SEARCH</span> <span class="caps">GROUPS</span></a> on how to get the group ID list.</p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_GET_GROUP_TYPE"></a></p>
<h5><span class="caps">GET</span> <span class="caps">GROUP</span> <span class="caps">TYPE</span></h5>
<p>The <code>GET GROUP TYPE</code> command queries the group type.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; GET GROUP &lt;id&gt; TYPE</code></p>
<p><strong>Response</strong><br>
<code>&lt;- GROUP &lt;id&gt; TYPE &lt;group_type&gt;</code></p>
<p>Refer to the <a href="#COMMAND_SEARCH_GROUPS"><span class="caps">SEARCH</span> <span class="caps">GROUPS</span></a> command on how to get the group ID list.</p>
<p>Refer to the <a href="#OBJECT_GROUP"><span class="caps">GROUP</span> object</a> for a list and description of group types.</p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_CREATE_GROUP"></a></p>
<h5><span class="caps">CREATE</span> <span class="caps">GROUP</span></h5>
<p>The <code>CREATE GROUP</code> command creates a contact group, for example a group named Family.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; CREATE GROUP &lt;Family&gt;</code></p>
<p><strong>Response</strong><br>
<code>&lt;- CREATE GROUP &lt;Family&gt;</code></p>
<p><strong>The command triggers a number of <span class="caps">GROUP</span> properties events:</strong></p>
<pre style="codeSample">&lt;- GROUP &lt;234&gt; TYPE CUSTOM_GROUP
&lt;- GROUP &lt;234&gt; NROFUSERS 0
&lt;- GROUP &lt;234&gt; NROFUSERS_ONLINE 0
&lt;- GROUP &lt;234&gt; CUSTOM_GROUP_ID &lt;111&gt;
&lt;- GROUP &lt;234&gt; DISPLAYNAME &lt;Family&gt;
&lt;- GROUP &lt;234&gt; USERS</pre>
<p><strong>The command triggers the following notification:</strong><br>
<code>&lt;- GROUP &lt;234&gt; USERS &lt;user1&gt; &lt;user2&gt;...</code></p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_DELETE_GROUP"></a></p>
<h5><span class="caps">DELETE</span> <span class="caps">GROUP</span></h5>
<p>The <code>DELETE GROUP</code> removes a contact group.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; DELETE GROUP &lt;234&gt;</code></p>
<p><strong>Response</strong><br>
<code>&lt;- DELETE GROUP &lt;234&gt;</code></p>
<p>Refer to <a href="#COMMAND_SEARCH_GROUPS"><span class="caps">SEARCH</span> <span class="caps">GROUPS</span></a> on how to get the group ID list.</p>
<p><strong>The command triggers the following notifications:</strong></p>
<pre style="codeSample">&lt;- DELETED GROUP &lt;234&gt;
&lt;- GROUP &lt;234&gt; USERS &lt;user1&gt; &lt;user2&gt;...</pre>
<p><a name="COMMAND_ALTER_GROUP_ADDUSER"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">GROUP</span> <span class="caps">ADDUSER</span></h5>
<p>The <code>ALTER GROUP ADDUSER</code> command adds contacts to a group.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; ALTER GROUP &lt;234&gt; ADDUSER &lt;userhandle|PSTN&gt;</code></p>
<p><strong>Response</strong><br>
<code>&lt;- ALTER GROUP &lt;234&gt; ADDUSER &lt;userhandle|PSTN&gt;</code></p>
<p><strong>Parameters</strong><br>
<code>ADDUSER &lt;userhandle|PSTN&gt;</code></p>
<p><strong>This command triggers the following notification:</strong><br>
<code>&lt;- GROUP &lt;234&gt; NROFUSERS y</code></p>
<p><strong>Note:</strong><br>
A contact must exist in a contactlist to be added to a group.</p>
<p>Refer to <a href="#COMMAND_SEARCH_GROUPS"><span class="caps">SEARCH</span> <span class="caps">GROUPS</span></a> on how to get the group ID list.</p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_ALTER_GROUP_REMOVEUSER"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">GROUP</span> <span class="caps">REMOVEUSER</span></h5>
<p>The <code>ALTER GROUP REMOVEUSER</code> command removes contacts from a group.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; ALTER GROUP &lt;group_id&gt; REMOVEUSER &lt;userhandle|PSTN&gt;</code><br>
<code>&lt;- ALTER GROUP &lt;group_id&gt; REMOVEUSER &lt;userhandle|PSTN&gt;</code></p>
<p><strong>Parameters:</strong><br>
<code>REMOVEUSER &lt;userhandle|PSTN&gt;</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; ALTER GROUP 49 REMOVEUSER anappo5
// notification - new size of group 49 is 6 contacts
&lt;- GROUP 49 NROFUSERS 6
//  Removed user was placed in system group "Ungrouped" (group 52 in this case)
&lt;- GROUP 52 NROFUSERS 1
&lt;- ALTER GROUP 49 REMOVEUSER anappo5
</pre>
<p>Refer to <a href="#COMMAND_SEARCH_GROUPS"><span class="caps">SEARCH</span> <span class="caps">GROUPS</span></a> on how to get the group ID list.</p>
<p><strong>Version:</strong><br>
Protocol 5</p>
<p><a name="COMMAND_ALTER_GROUP_SHARE"></a></p>
<h5>Sharing contact groups</h5>
<p>Shared contact groups differ from Send Contacts functionality in that
 adding users to shared groups will automatically cause 
cross-authorization attempts between users.</p>
<p>To change an existing contact group into shared contact group:</p>
<p><code>-&gt; ALTER GROUP &lt;id&gt; SHARE [&lt;text&gt;]</code></p>
<p>Where <id> is the contact group ID and text is invitation message displayed to the invited user.</id></p>
<p>To accept invitation to a shared group:</p>
<p><code>-&gt; ALTER GROUP &lt;id&gt; ACCEPT</code></p>
<p>To decline invitation to a shared group:</p>
<p><code>-&gt; ALTER GROUP &lt;id&gt; DECLINE</code></p>
<p>Refer to <a href="#COMMAND_SEARCH_GROUPS"><span class="caps">SEARCH</span> <span class="caps">GROUPS</span></a> on how to get the list of group IDs.</p>
<p><strong>Version</strong><br>
Protocol 6</p>
<p><a name="COMMAND_SET_USER_DISPLAYNAME"></a></p>
<h5><span class="caps">SET</span> <span class="caps">USER</span> <span class="caps">DISPLAYNAME</span></h5>
<p>The <code>SET USER DISPLAYNAME</code> command changes the display name of a contact.</p>
<p>By default this <code>USER</code> object property is empty. If a value is assigned to this property with <code>SET &lt;skypename&gt; DISPLAYNAME &lt;value&gt;</code> then that value will be displayed in Skype UI instead of user’s <code>FULLNAME</code>.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SET USER &lt;handle|PSTN&gt; DISPLAYNAME &lt;name&gt;</code></p>
<p><code>&lt;- SET USER &lt;handle|PSTN&gt; DISPLAYNAME &lt;name&gt;</code></p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="Search"></a></p>
<h4>Search commands</h4>
<p>The search command requests specific information about objects. If no
 target is specified, all results for specified objects are returned.</p>
<p><strong>Syntax:</strong><br>
<code>SEARCH USERS</code> | <code>FRIENDS</code> | <code>CALLS [&lt;target&gt;]</code> | <code>ACTIVECALLS</code> | <code>MISSEDCALLS</code> | <code>VOICEMAILS</code> | <code>CHATS</code> | <code>MISSEDCHATS</code> | <code>ACTIVECHATS</code> | <code>RECENTCHATS</code> | <code>BOOKMARKEDCHATS</code> | <code>CHATMESSAGES [&lt;target&gt;]</code> | <code>MISSEDCHATMESSAGES</code> | <code>MESSAGES [&lt;target&gt;]</code> | <code>MISSEDMESSAGES</code> | <code>USERSWAITINGMYAUTHORIZATION</code> | <code>GROUPS [{ ALL | CUSTOM | HARDWIRED }]</code>  | <code>FILETRANSFERS</code> | <code>ACTIVEFILETRANSFERS</code> | <code>SMSS</code> | <code>MISSEDSMSS</code></p>
<p><strong>Notes</strong></p>
<ul>
	<li>In Skype for Windows 1.1 only one search at a time is allowed; 
since version 1.2 multiple searches can executed at the same time;</li>
	<li>The number of search results is not limited.</li>
	<li>SkypeOut contacts: since Skype for Windows 1.2 release it is 
possible to get the list of SkypeOut contacts which are part of the main
 contact list and they are returned with the contact list numbers, if 
the <code>SEARCH FRIENDS</code> command is executed. To get more information about the number in a current user’s SkypeOut contacts use the <code>GET USER &lt;number&gt; &lt;fullname&gt;"</code> command.<br>
This section contains the search commands.</li>
</ul>
<p><a name="COMMAND_SEARCH_FRIENDS"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">FRIENDS</span></h5>
<p><strong>Syntax</strong><br>
<code>SEARCH FRIENDS</code></p>
<p><strong>Response</strong><br>
<code>USERS [user[, user]*]</code><br>
returns a list of found usernames; an empty list if no match is found</p>
<ul>
	<li><code>ERROR 67 target not allowed with SEARCH FRIENDS</code><br>
A target(such as mike) was specified with the <code>SEARCH FRIENDS</code> command</li>
</ul>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SEARCH FRIENDS
&lt;- USERS tim, joe, mike</pre>
<p><a name="COMMAND_SEARCH_USERS"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">USERS</span></h5>
<p><strong>Syntax</strong><br>
<code>-&gt; SEARCH USERS &lt;target&gt;</code></p>
<p><strong>Parameters</strong><br>
<code>&lt;target&gt;</code> – part of username or e-mail to match. If 
the search string contains “@”, the search is performed by e-mail 
address and has to be an exact match. If the search string is a valid 
Skype username, the search is performed on the full name and username 
fields. In all other cases the search is made on the full name field 
only.</p>
<p><strong>Response</strong><br>
<code>&lt;- USERS [&lt;username&gt;[, &lt;username&gt;]*]</code><br>
returns a list of found usernames; list is empty if no match was found</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 4 Empty target not allowed</code><br>
Target username is not specified</li>
</ul>
<p><strong>Notes</strong><br>
When running the <code>SEARCH USERS</code> command, <code>USER</code> notifications are reported back to the <span class="caps">API</span> client as users are found on the network. The <span class="caps">API</span> client should ignore these events and request each user’s property after the search.</p>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; SEARCH USERS echo123
&lt;- USERS echo123, echo1232885</pre>
<p><a name="COMMAND_SEARCH_CALLS"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">CALLS</span></h5>
<p><strong>Syntax</strong><br>
<code>SEARCH CALLS &lt;target&gt;</code></p>
<p><strong>Parameters</strong><br>
<code>&lt;target&gt;</code> – username. Specifying a target is optional.
 If a target is specified, Skype searches the call history between the 
current user and the target user.</p>
<p><strong>Response</strong><br>
<code>&lt;- CALLS [id[, id]*]</code><br>
Returns a list of call IDs. If a target is specified, Skype returns IDs 
of all calls that have been made between the current and target user.</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 5 Search CALLS: invalid target</code><br>
Characters that are not permitted were used in the target username. The 
username must have 6-22 characters and can contain only the following 
symbols: {a-Z, 0-9-_,.}.</li>
</ul>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SEARCH CALLS abc
&lt;- CALLS 15, 16, 39</pre>
<p><a name="COMMAND_SEARCH_ACTIVECALLS"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">ACTIVECALLS</span></h5>
<p>Lists all calls visible on calltabs, including members of conference calls if the user is hosting a conference.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; SEARCH ACTIVECALLS</code></p>
<p><strong>Response</strong><br>
<code>&lt;- CALLS [&lt;id&gt;[, &lt;id&gt;]*]</code><br>
Returns a list of active call IDs.</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 3 SEARCH: unknown WHAT</code><br>
<code>ACTIVECALLS</code> was misspelled.</li>
</ul>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SEARCH ACTIVECALLS
&lt;- CALLS 25, 56</pre>
<p><a name="COMMAND_SEARCH_MISSEDCALLS"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">MISSEDCALLS</span></h5>
<p><strong>Syntax</strong><br>
<code>-&gt; SEARCH MISSEDCALLS</code></p>
<p><strong>Response</strong><br>
<code>&lt;- CALLS [&lt;id&gt;[, &lt;id&gt;]*]</code><br>
Returns a list ofmissed call IDs, calls in <code>MISSED</code> status.</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 6 SEARCH MISSEDCALLS: target not allowed</code><br>
No target is allowed with <code>SEARCH MISSEDCALLS</code>.</li>
</ul>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SEARCH MISSEDCALLS
&lt;- CALLS 25, 56</pre>
<p><a name="COMMAND_SEARCH_SMS"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">SMSS</span></h5>
<p>All <span class="caps">SMS</span> messages that you have created in 
Skype remain stored in the system until they get removed with 
[#MANAGING_SMS_MESSAGES_DELETING <span class="caps">DELETE</span> <span class="caps">SMS</span> <id>] command.</id></p>
<p>The list of these <span class="caps">SMS</span> messages can be queried with <code>SEARCH SMSS</code> command:</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SEARCH SMSS</code></p>
<p><code>&lt;- SMSS &lt;ID1&gt;, &lt;ID2&gt;, &lt;ID3&gt; ..</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; SEARCH SMSS
&lt;- SMSS 233
</pre>
<p>Refer to <a href="#OBJECT_SMS"><span class="caps">SMS</span> object</a> section for a list of <span class="caps">SMS</span> object properties.</p>
<p><strong>Version</strong><br>
Added in <span class="caps">API</span> version 2.5</p>
<p><a name="COMMAND_SEARCH_MISSEDSMSS"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">MISSEDSMSS</span></h5>
<p>Returns a list of IDs of received but unread <span class="caps">SMS</span> objects.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SEARCH MISSEDSMSS</code></p>
<p><code>&lt;- SMSS &lt;ID1&gt;, &lt;ID2&gt;, &lt;ID3&gt; ..</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; SEARCH SMSS
&lt;- SMSS 233
</pre>
<p>Refer to <a href="#OBJECT_SMS"><span class="caps">SMS</span> object</a> section for a list of <span class="caps">SMS</span> object properties.</p>
<p><strong>Version</strong><br>
Added in <span class="caps">API</span> version 2.5</p>
<p><a name="COMMAND_SEARCH_VOICEMAILS"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">VOICEMAILS</span></h5>
<p>Returns a list of voicemail IDs.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SEARCH VOICEMAILS</code></p>
<p><code>&lt;- VOICEMAILS [&lt;id&gt;[, &lt;id&gt;]*]</code></p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 29 SEARCH VOICEMAILS: target not allowed</code><br>
No target is allowed with <code>SEARCH VOICEMAILS</code>.</li>
</ul>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; SEARCH VOICEMAILS
&lt;- VOICEMAILS 65, 70, 71</pre>
<p><a name="COMMAND_SEARCH_MISSEDVOICEMAILS"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">MISSEDVOICEMAILS</span></h5>
<p>Returns a list of IDs of missed voicemails.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SEARCH MISSEDVOICEMAILS</code></p>
<p><code>&lt;- VOICEMAILS [&lt;id&gt;[, &lt;id&gt;]*]</code></p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 29 SEARCH MISSEDVOICEMAILS: target not allowed</code><br>
No target is allowed with <code>SEARCH MISSEDVOICEMAILS</code></li>
</ul>
<p><strong>Version</strong><br>
Protocol 6</p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; SEARCH MISSEDVOICEMAILS
&lt;- VOICEMAILS 65, 70, 71</pre>
<p><a name="COMMAND_SEARCH_MESSAGES"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">MESSAGES</span></h5>
<p><strong>Syntax</strong><br>
<code>SEARCH MESSAGES [&lt;target&gt;]</code></p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>&lt;target&gt;</code> – username. It is optional to specify a
 target. If a target is specified, Skype searches the message history 
between the current user and the target user.</li>
</ul>
<p><strong>Response</strong><br>
<code>MESSAGES [&lt;id&gt;[, &lt;id&gt;]*]</code><br>
Returns a list of message IDs. If a target is specified, Skype returns 
IDs of all messages that have been sent between the current user and the
 target user.</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 5 SEARCH MESSAGES: invalid target</code><br>
A character was used in the target username that is not permitted. The 
username must have 6-22 characters and can contain only the following 
symbols: {a-Z, 0-9-_,.}.</li>
</ul>
<p><strong>Version</strong><br>
Protocol 1, deprecated in protocol 3</p>
<p><strong>Notes</strong><br>
This search is deprecated in protocol 3, use the <a href="#COMMAND_SEARCH_CHATMESSAGES"><span class="caps">SEARCH</span> <span class="caps">CHATMESSAGES</span> command</a> instead.</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SEARCH MESSAGES abc
&lt;- MESSAGES 123, 124</pre>
<p><a name="COMMAND_SEARCH_MISSEDMESSAGES"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">MISSEDMESSAGES</span></h5>
<p><strong>Syntax</strong><br>
<code>SEARCH MISSEDMESSAGES</code></p>
<p><strong>Response</strong><br>
<code>MESSAGES [&lt;id&gt;[, &lt;id&gt;]*]</code><br>
Returns a list of message IDs.</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 29 SEARCH MISSEDMESSAGES: target not allowed</code><br>
No target is allowed with the <code>SEARCH MISSEDMESSAGES</code> command.</li>
</ul>
<p><strong>Version</strong><br>
Protocol 1, deprecated in protocol 3</p>
<p><strong>Notes</strong><br>
This search is deprecated in protocol 3. Use the <code>SEARCH MISSEDCHATMESSAGES</code> command instead.</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SEARCH MISSEDMESSAGES
&lt;- MESSAGES 123, 124</pre>
<p><a name="COMMAND_SEARCH_CHATS"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">CHATS</span></h5>
<p><strong>Syntax</strong><br>
<code>SEARCH CHATS</code></p>
<p><strong>Response</strong><br>
<code>CHATS [&lt;chatname&gt;[, &lt;chatname&gt;]*]</code><br>
Returns a list of chat IDs.</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 107 target not allowed with CHATS</code><br>
No target isallowed with the <code>SEARCH CHATS</code> command.</li>
</ul>
<p><strong>Version</strong><br>
Protocol 3</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SEARCH CHATS
&lt;- CHATS #bitman/$jessy;eb06e65612353279, #bitman/$jdenton;9244e98f82d7d391</pre>
<p><a name="COMMAND_SEARCH_ACTIVECHATS"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">ACTIVECHATS</span></h5>
<p><strong>Syntax</strong><br>
<code>SEARCH ACTIVECHATS</code></p>
<p><strong>Response</strong><br>
<code>CHATS [&lt;chatname&gt;[, &lt;chatname&gt;]*]</code><br>
Returns a list of chat IDs that are open in the window.</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 29 No target allowed</code><br>
No target is allowed with <code>SEARCH ACTIVECHATS</code> .</li>
</ul>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SEARCH ACTIVECHATS
&lt;- CHATS #bitman/$jessy;eb06e65612353279, #bitman/$jdenton;9244e98f82d7d391</pre>
<p><a name="COMMAND_SEARCH_MISSEDCHATS"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">MISSEDCHATS</span></h5>
<p><strong>Syntax</strong><br>
<code>SEARCH MISSEDCHATS</code></p>
<p><strong>Response</strong><br>
<code>CHATS [&lt;chatname&gt;[, &lt;chatname&gt;]*]</code><br>
Returns a list of chat IDs that include unread messages.</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 29 SEARCH MISSEDCHATS: target not allowed</code><br>
Notarget is allowed with <code>SEARCH MISSEDCHATS</code> .</li>
</ul>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SEARCH MISSEDCHATS
&lt;- CHATS #bitman/$jessy;eb06e65612353279, #bitman/$jdenton;9244e98f82d7d391</pre>
<p><a name="COMMAND_SEARCH_RECENTCHATS"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">RECENTCHATS</span></h5>
<p><strong>Syntax</strong><br>
<code>SEARCH RECENTCHATS</code></p>
<p><strong>Response</strong><br>
<code>CHATS [&lt;chatname&gt;[, &lt;chatname&gt;]*]</code><br>
Returns a list of recent chat IDs.</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 29 SEARCH RECENTCHATS: target not allowed</code><br>
Notarget is allowed with <code>SEARCH RECENTCHATS</code> .</li>
</ul>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SEARCH RECENTCHATS
&lt;- CHATS #bitman/$jessy;eb06e65612353279, #bitman/$jdenton;9244e98f82d7d391</pre>
<p><a name="COMMAND_SEARCH_BOOKMARKEDCHATS"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">BOOKMARKEDCHATS</span></h5>
<p><strong>Syntax</strong><br>
<code>SEARCH BOOKMARKEDCHATS</code></p>
<p><strong>Response</strong><br>
<code>CHATS [&lt;chatname&gt;[, &lt;chatname&gt;]*]</code><br>
Returns a list of bookmarked chat IDs.</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 29 SEARCH BOOKMARKEDCHATS: target not allowed</code><br>
Notarget is allowed with <code>SEARCH BOOKMARKEDCHATS</code> .</li>
</ul>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SEARCH BOOKMARKEDCHATS
&lt;- CHATS #bitman/$jessy;eb06e65612353279, #bitman/$jdenton;9244e98f82d7d391</pre>
<p><a name="COMMAND_SEARCH_CHATMESSAGES"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">CHATMESSAGES</span></h5>
<p><strong>Syntax</strong><br>
<code>SEARCH CHATMESSAGES [&lt;username&gt;]</code></p>
<p><strong>Parameters</strong><br>
<code>&lt;username&gt;</code> – target username, optional. If a username is specified, only chatmessages from/to that target user are returned.</p>
<p><strong>Response</strong><br>
<code>CHATMESSAGES [&lt;id&gt;[, &lt;id&gt;]*]</code><br>
Returns a list of chat message IDs.</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 29 SEARCH CHATMESSAGES: Target not allowed</code><br>
The target username contained a character that is not permitted. 
(Username must have 6-22 characters and can contain only the following 
symbols: {a-Z, 0-9-_,.}.</li>
</ul>
<p><strong>Version</strong><br>
Protocol 3</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SEARCH CHATMESSAGES abc
&lt;- CHATMESSAGES 60, 59</pre>
<p><a name="COMMAND_SEARCH_MISSEDCHATMESSAGES"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">MISSEDCHATMESSAGES</span></h5>
<p><strong>Syntax</strong><br>
<code>SEARCH MISSEDCHATMESSAGES</code></p>
<p><strong>Response</strong><br>
<code>CHATMESSAGES [&lt;id&gt;[, &lt;id&gt;]*]</code><br>
Returns a list of missed chat message IDs.</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 29 SEARCH MISSEDCHATMESSAGES: target not allowed</code><br>
Notarget is allowed with <code>SEARCH MISSEDCHATMESSAGES</code> .</li>
</ul>
<p><strong>Version</strong><br>
Protocol 3</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SEARCH MISSEDCHATMESSAGES
&lt;- CHATMESSAGES 61, 62</pre>
<p><a name="COMMAND_SEARCH_USERSWAITINGMYAUTHORIZATION"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">USERSWAITINGMYAUTHORIZATION</span></h5>
<p>List of users who are waiting for contact authorization.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SEARCH USERSWAITINGMYAUTHORIZATION</code></p>
<p><code>&lt;- USERS [&lt;skypename1&gt;[, &lt;skypename2&gt;]*]</code></p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 29 SEARCH USERSWAITINGMYAUTHORIZATION: target not allowed</code></li>
</ul>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; SEARCH USERSWAITINGMYAUTHORIZATION
&lt;- USERS tim, john, echo123</pre>
<p><a name="COMMAND_SEARCH_GROUPS"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">GROUPS</span></h5>
<p>The <code>SEARCH GROUPS</code> command returns comma-separated list of IDs of user’s contact groups.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SEARCH GROUPS [{ ALL | CUSTOM | HARDWIRED }]</code></p>
<p><code>&lt;- GROUPS &lt;id1&gt;, &lt;id2&gt;, &lt;id3&gt;, ...</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">//----------------------------------------------------
// Getting a list of custom (user-made) groups
-&gt; SEARCH GROUPS CUSTOM
&lt;- GROUPS 3238, 3239, 3240, 3241, 3242, 3372
//----------------------------------------------------
// Getting group names from IDs goes like this:
-&gt; GET GROUP 3240 DISPLAYNAME
&lt;- GROUP 3240 DISPLAYNAME test
</pre>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><strong>Errors</strong></p>
<pre style="codeSample">ERROR 561 - SEARCH GROUPS: invalid target
ERROR 562 - Invalid group id
ERROR 563 - Invalid group object
ERROR 564 - Invalid group property given</pre>
<p><a name="COMMAND_SEARCH_FILETRANSFERS"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">FILETRANSFERS</span></h5>
<p>Returns a list of all file transfer IDs. Refer to <a href="#OBJECT_FILETRANSFER"><span class="caps">FILETRANSFER</span> object</a> for more details.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; SEARCH FILETRANSFERS</code></p>
<p><strong>Response</strong><br>
<code>&lt;- FILETRANSFERS [&lt;id&gt;[, &lt;id&gt;]*]</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; SEARCH FILETRANSFERS
&lt;- FILETRANSFERS 1343, 1314, 1263, 1249, 1241, 982, 544, 1086
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_SEARCH_ACTIVEFILETRANSFERS"></a></p>
<h5><span class="caps">SEARCH</span> <span class="caps">ACTIVEFILETRANSFERS</span></h5>
<p>Returns a list of currently active (ones that are nor <code>COMPLETED</code>, <code>CANCELLED</code> or <code>FAILED</code>) file transfer IDs. <br>
Refer to <a href="#OBJECT_FILETRANSFER"><span class="caps">FILETRANSFER</span> object</a> for more details.</p>
<p>Note that it is not necessary for remote users to accept the file transfer for it to become listed in <span class="caps">ACTIVEFILETRANSFERS</span> for both parties.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; SEARCH ACTIVEFILETRANSFERS</code></p>
<p><strong>Response</strong><br>
<code>&lt;- FILETRANSFERS [&lt;id&gt;[, &lt;id&gt;]*]</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; SEARCH ACTIVEFILETRANSFERS
&lt;- FILETRANSFERS 1411
-&gt; GET FILETRANSFER 1411 STATUS
&lt;- FILETRANSFER 1411 STATUS WAITING_FOR_ACCEPT
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="History"></a></p>
<h4>Managing history</h4>
<p>These commands are available to clear chat, voicemail, and call history.</p>
<p><strong>Skype4Com example:</strong></p>
<ul>
	<li><a href="http://developer.skype.com/delphi-examples/callhistory-pas">CallHistory.pas</a></li>
</ul>
<p><a name="COMMAND_CLEAR_CHATHISTORY"></a></p>
<h5><span class="caps">CLEAR</span> <span class="caps">CHATHISTORY</span></h5>
<p>This command clears chat history. <strong>NB!</strong> This command does not remove chat entries from the Skype history tab. Instead, it clears chatmessage histories within chats.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; CLEAR CHATHISTORY</code></p>
<p><code>&lt;- CLEAR CHATHISTORY</code></p>
<p><a name="COMMAND_CLEAR_VOICEMAILHISTORY"></a></p>
<h5><span class="caps">CLEAR</span> <span class="caps">VOICEMAILHISTORY</span></h5>
<p>Clears voicemail entries from the history tab in Skype UI.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; CLEAR VOICEMAILHISTORY</code></p>
<p><code>&lt;- CLEAR VOICEMAILHISTORY</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; CLEAR VOICEMAILHISTORY
&lt;- CLEAR VOICEMAILHISTORY
&lt;- VOICEMAIL 3398 STATUS DELETING
</pre>
<p><a name="COMMAND_CLEAR_CALLHISTORY"></a></p>
<h5><span class="caps">CLEAR</span> <span class="caps">CALLHISTORY</span></h5>
<p>Clears call entries from the history tab in Skype UI.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; CLEAR CALLHISTORY &lt;ALL|MISSED|INCOMING|OUTGOING&gt; [skypename]</code></p>
<p><code>&lt;- CLEAR CALLHISTORY &lt;ALL|MISSED|INCOMING|OUTGOING&gt; [skypename]</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">//-------------------------------------------------------------
// Removes incoming calls from user test2 from Skype history tab
-&gt; CLEAR CALLHISTORY INCOMING test2
&lt;- CLEAR CALLHISTORY INCOMING test2
</pre>
<p><a name="UIcontrol"></a></p>
<h4>Controlling Skype user interface</h4>
<p>This section lists the commands used to control the Skype user interface.</p>
<p><a name="COMMAND_FOCUS"></a></p>
<h5><span class="caps">FOCUS</span></h5>
<p>The <code>FOCUS</code> brings the Skype window into focus on screen (on top).</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; FOCUS</code></p>
<p><code>&lt;- FOCUS</code></p>
<p>See also <a href="#COMMAND_SET_WINDOWSTATE"><span class="caps">SET</span> <span class="caps">WINDOWSTATE</span></a> command for more recent and universal version of the same functionality.</p>
<p>Note also that from version 3.6 the <code>FOCUS</code> command produces additional window state notification message in following format:</p>
<p><code>&lt;- WINDOWSTATE  NORMAL|MINIMIZED|MAXIMIZED|HIDDEN</code></p>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><a name="COMMAND_MINIMIZE"></a></p>
<h5><span class="caps">MINIMIZE</span></h5>
<p>This command minimizes the main Skype window into the system tray.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; MINIMIZE</code></p>
<p><code>&lt;- MINIMIZE</code><br>
*</p>
<p>See also <a href="#COMMAND_SET_WINDOWSTATE"><span class="caps">SET</span> <span class="caps">WINDOWSTATE</span></a> command for more recent and universal version of the same functionality.</p>
<p>Note also that from version 3.6 the <code>MINIMIZE</code> command produces additional window state notification message in following format:</p>
<p><code>&lt;- WINDOWSTATE  NORMAL|MINIMIZED|MAXIMIZED|HIDDEN</code></p>
<p><strong>Version</strong><br>
Skype for Windows 1.3</p>
<p><strong>Notes</strong><br>
This command does not minimize other Skype windows, such as chat or filetransfer.</p>
<p><a name="COMMAND_GET_WINDOWSTATE"></a></p>
<h5><span class="caps">GET</span> <span class="caps">WINDOWSTATE</span></h5>
<p>Returns the current state of the Skype main window. The <code>WINDOWSTATE</code> property is read-write, so you can cause the Skype main window to minimize to system tray, maximize, etc. with corresponding <code>SET WINDOWSTATE</code> command.</p>
<p><strong>Syntax:</strong><br>
@→ <span class="caps">GET</span> <span class="caps">WINDOWSTATE</span> @</p>
<p><code>&lt;- WINDOWSTATE  NORMAL|MINIMIZED|MAXIMIZED|HIDDEN</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; #1 GET WINDOWSTATE
&lt;- #1 WINDOWSTATE NORMAL
-&gt; #2 SET WINDOWSTATE MINIMIZED
&lt;- #2 WINDOWSTATE MINIMIZED
&lt;- WINDOWSTATE MINIMIZED
-&gt; #3 SET WINDOWSTATE MAXIMIZED
&lt;- #3 WINDOWSTATE MAXIMIZED
&lt;- WINDOWSTATE MAXIMIZED
&lt;- WINDOWSTATE MINIMIZED
-&gt; #4 SET WINDOWSTATE NORMAL
&lt;- #4 WINDOWSTATE NORMAL
&lt;- WINDOWSTATE NORMAL
</pre>
<p>Note that you also get these <code>WINDOWSTATE</code> notification 
messages when the window state was altered via UI, i.e. when a user 
clicks on minimize button in the Skype window, corresponding <span class="caps">API</span> notification event is generated.</p>
<p>This is also the reason <code>SET WINDOWSTATE</code> command receives two reply notifications. One is sent as direct reply to the actual <span class="caps">API</span> command, the second one is generated by the change in Skype window state.</p>
<p>NB! As seen in the example above, of those two notification events, in response to <code>SET WINDOWSTATE</code> only one comes with command identifier.</p>
<p><strong>Version:</strong></p>
<p>Windows version 3.6</p>
<p><a name="COMMAND_SET_WINDOWSTATE"></a></p>
<h5><span class="caps">SET</span> <span class="caps">WINDOWSTATE</span></h5>
<p>This command causes the Skype Main window to change state. Note that this command only applies to Skype <strong>main</strong> window. Other Skype windows, such as chat windows or file trasfer windows are unaffected by this command.</p>
<p><strong>Syntax:</strong><br>
@→ <span class="caps">SET</span> <span class="caps">WINDOWSTATE</span> <span class="caps">NORMAL</span>|<span class="caps">MINIMIZED</span>|<span class="caps">MAXIMIZED</span>|<span class="caps">HIDDEN</span> @</p>
<p><code>&lt;- WINDOWSTATE  NORMAL|MINIMIZED|MAXIMIZED|HIDDEN</code></p>
<p><code>&lt;- WINDOWSTATE  NORMAL|MINIMIZED|MAXIMIZED|HIDDEN</code></p>
<p>Note this command generates two reply notifications. If you are using
 this command together with command identifiers, then it might be 
important to know that only the first one of those notifications comes 
back with command ID (see example below).</p>
<p><strong>Parameters:</strong></p>
<ul>
	<li><code>NORMAL</code> – resets Skype main window to previous manually adjusted size and position.</li>
</ul>
<ul>
	<li><code>MINIMIZED</code> – minimizes Skype window to taskbar – NB! This does not put Skype to system tray, to minimize Skype to system tray use <code>HIDDEN</code> parameter.</li>
</ul>
<ul>
	<li><code>MAXIMIZED</code> – maximizes Skype main window all over the current desktop.</li>
</ul>
<ul>
	<li><code>HIDDEN</code> – minimizes Skype main window to system tray.</li>
</ul>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; #1 GET WINDOWSTATE
&lt;- #1 WINDOWSTATE NORMAL
-&gt; #2 SET WINDOWSTATE MINIMIZED
&lt;- #2 WINDOWSTATE MINIMIZED
&lt;- WINDOWSTATE MINIMIZED
-&gt; #3 SET WINDOWSTATE MAXIMIZED
&lt;- #3 WINDOWSTATE MAXIMIZED
&lt;- WINDOWSTATE MAXIMIZED
&lt;- WINDOWSTATE MINIMIZED
-&gt; #4 SET WINDOWSTATE NORMAL
&lt;- #4 WINDOWSTATE NORMAL
&lt;- WINDOWSTATE NORMAL
</pre>
<p><strong>Version:</strong></p>
<p>*Added in <span class="caps">API</span> version 3.6</p>
<p><a name="COMMAND_OPEN_ADDAFRIEND"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">ADDAFRIEND</span></h5>
<p>This command opens the Add a Contact window. <strong>NB!</strong> Don’t miss that “A” between “<span class="caps">ADD</span>” and “<span class="caps">FRIEND</span>”.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN ADDAFRIEND [&lt;username&gt;]</code></p>
<p><code>&lt;- OPEN ADDAFRIEND [&lt;username&gt;]</code></p>
<p><strong>Parameters</strong><br>
<code>&lt;username&gt;</code> – target username is optional. If a username is specified, the window is prefilled with it.</p>
<p><strong>Errors</strong><br>
<code>ERROR 69 OPEN: invalid WHAT</code><br>
Open target is missing or misspelled</p>
<p><strong>Version</strong><br>
Skype for Windows 1.0</p>
<p><a name="COMMAND_OPEN_IM"></a></p>
<h5><span class="caps">OPEN</span> IM</h5>
<p>This command opens the chat window with prefilled message.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN IM &lt;username&gt; [&lt;message&gt;]</code></p>
<p><strong>Response:</strong><br>
In response, open chat command feedback is generated, followed by with echoing back the original command (see example below).</p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>&lt;username&gt;</code> – contact username to whom to send the message.</li>
	<li><code>&lt;message&gt;</code> – optional message body prefilled into
 the window. Note that this message is not actually sent – just pasted 
into chat window’s input line.</li>
</ul>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 69 OPEN: invalid WHAT</code><br>
Open target is missing or misspelled</li>
	<li><code>ERROR 70 Invalid user handle</code><br>
Username is missing or contains not permitted symbols</li>
</ul>
<p><strong>Notes</strong><br>
The protocol 5 chat management commands and Skype for Windows 1.3 <code>OPEN CHAT</code> command are preferable to the <code>OPEN IM</code> command.</p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; OPEN IM echo123 this is a prefilled chatmessage
&lt;- CHAT #anappo/$echo123;ebe5311cdd203657 NAME #anappo/$echo123;ebe5311cdd203657
&lt;- CHAT #anappo/$echo123;ebe5311cdd203657 ACTIVITY_TIMESTAMP 0
&lt;- MESSAGE 1259 STATUS SENDING
&lt;- CHAT #anappo/$echo123;ebe5311cdd203657 TYPE DIALOG
&lt;- CHATMEMBER 1257 ROLE USER
&lt;- CHAT #anappo/$echo123;ebe5311cdd203657 MYROLE USER
&lt;- CHAT #anappo/$echo123;ebe5311cdd203657 ACTIVEMEMBERS anappo
&lt;- CHAT #anappo/$echo123;ebe5311cdd203657 MYSTATUS SUBSCRIBED
&lt;- CHAT #anappo/$echo123;ebe5311cdd203657 STATUS DIALOG
&lt;- CHAT #anappo/$echo123;ebe5311cdd203657 TIMESTAMP 1178793154
&lt;- CHAT #anappo/$echo123;ebe5311cdd203657 DIALOG_PARTNER echo123
&lt;- CHAT #anappo/$echo123;ebe5311cdd203657 MEMBERS anappo echo123
&lt;- CHAT #anappo/$echo123;ebe5311cdd203657 FRIENDLYNAME Echo / Sound Test Service
&lt;- OPEN IM echo123 this is a prefilled chatmessage
</pre>
<p><strong>Version</strong><br>
Skype for Windows 1.0</p>
<p><a name="COMMAND_OPEN_CHAT"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">CHAT</span></h5>
<p>Opens chat window for existing <code>CHAT</code> object.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN CHAT &lt;chat_id&gt;</code></p>
<p><code>&lt;- OPEN CHAT &lt;chat_id&gt;</code></p>
<p><strong>Parameters</strong><br>
<code>&lt;chat_id&gt;</code> – existing chat identifier (Refer to <a href="#COMMAND_SEARCH_CHATS"><span class="caps">SEARCH</span> <span class="caps">CHATS</span></a> command).</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 69 invalid open what</code><br>
Open target is missing or misspelled</li>
	<li><code>ERROR 105 Invalid chat name</code><br>
Chat id is missing or chat with this id doesn’t exist.</li>
</ul>
<p><strong>Version</strong><br>
Skype for Windows 1.3</p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; OPEN CHAT #test/$echo123;52c2750d8686c10c
&lt;- OPEN CHAT #test/$echo123;52c2750d8686c10c
</pre>
<p><strong>NB!</strong> From version 3.6 and later, opening chat windows (both from <span class="caps">API</span> and manually via UI) generate additional chat window open and close notfication messages. Refer to the <a href="#STATUS_CHAT">Chat notifications section</a> for more information.</p>
<p><a name="COMMAND_OPEN_FILETRANSFER"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">FILETRANSFER</span></h5>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN FILETRANSFER &lt;username&gt;[, &lt;username&gt;]*[ IN &lt;folder&gt;]</code></p>
<p><code>&lt;- OPEN FILETRANSFER &lt;username&gt;[, &lt;username&gt;]*[ IN &lt;folder&gt;]</code></p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>&lt;username&gt;</code> – list of usernames to transfer file to;</li>
	<li><code>&lt;folder&gt;</code> – optional, filesystem folder for file 
selection window. If not specified, the file transfer window opens in 
the default directory.</li>
</ul>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 69 invalid open what</code><br>
Open target is missing or misspelled</li>
	<li><code>ERROR 108 user not contact</code><br>
Command is allowed for authorized contacts only</li>
	<li><code>ERROR 109 directory doesn't exist</code><br>
Given folder does not exist or user has no access to it</li>
</ul>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; OPEN FILETRANSFER echo123 IN C:\temp
&lt;- ERROR 108 user not contact
-&gt; OPEN FILETRANSFER myfriend IN C:\temp
&lt;- OPEN FILETRANSFER myfriend IN C:\temp</pre>
<p><strong>Version</strong><br>
Skype for Windows 1.3</p>
<p><a name="COMMAND_OPEN_LIVETAB"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">LIVETAB</span></h5>
<p>Opens Live tab in Skype UI.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN LIVETAB</code></p>
<p><code>&lt;- OPEN LIVETAB</code></p>
<p><strong>Version</strong><br>
<span class="caps">API</span> version 3.2 (protocol 7)</p>
<p><a name="COMMAND_OPEN_VIDEOTEST1"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">VIDEOTEST</span></h5>
<p>This command opens the Video test window to test if video is working. See <a href="#COMMAND_OPEN_VIDEOTEST"><span class="caps">OPEN</span> <span class="caps">VIDEOTEST</span> command</a> reference for details.</p>
<p><a name="COMMAND_OPEN_VOICEMAIL1"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">VOICEMAIL</span></h5>
<p>This command brings the callhistory tab into focus and starts playing a voicemail. See <a href="#COMMAND_OPEN_VOICEMAIL"><span class="caps">OPEN</span> <span class="caps">VOICEMAIL</span> command</a> reference for details.</p>
<p><a name="COMMAND_OPEN_PROFILE"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">PROFILE</span></h5>
<p>This command opens the profile window for the current user.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN PROFILE</code></p>
<p><code>&lt;- OPEN PROFILE</code></p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 69 invalid open what</code><br>
Open target is missing or misspelled</li>
</ul>
<p><strong>Version</strong><br>
Skype for Windows 1.4</p>
<p><a name="COMMAND_OPEN_USERINFO"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">USERINFO</span></h5>
<p>This command opens the profile window for a named Skype contact. Note that when the contact given in the <skypename> parameter does not exist, a profile window is still opened, with an option to add <code>&lt;skypename&gt;</code> to user’s contact list. Therefore, you cannot rely on feedback of this command to determine whether <code>&lt;skypename&gt;</code> is present in your contact list.</skypename></p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN USERINFO &lt;skypename&gt;</code></p>
<p><code>&lt;- OPEN USERINFO &lt;skypename&gt;</code></p>
<p><strong>Parameters</strong><br>
<code>&lt;skypename&gt;</code> – Skypename of contact</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR invalid skypename</code></li>
	<li><code>ERROR 69 invalid open what</code></li>
	<li><code>Open target is missing or misspelled</code></li>
</ul>
<p><strong>Version</strong><br>
Skype for Windows 1.4</p>
<p><a name="COMMAND_OPEN_CONFERENCE"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">CONFERENCE</span></h5>
<p>This command opens the create conference window. Note that this command does not allow parameters.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN CONFERENCE</code></p>
<p><code>&lt;- OPEN CONFERENCE</code></p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 69 invalid open what</code></li>
	<li><code>Open target is missing or misspelled</code></li>
</ul>
<p><strong>Version</strong><br>
Skype for Windows 1.4</p>
<p><a name="COMMAND_OPEN_SEARCH"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">SEARCH</span></h5>
<p>This command opens the Skype user search window. Note that this command does not allow parameters.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN SEARCH</code></p>
<p><code>&lt;- OPEN SEARCH</code></p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 69 invalid open what</code></li>
	<li><code>Open target is missing or misspelled</code></li>
</ul>
<p><strong>Version</strong><br>
Skype for Windows 1.4</p>
<p><a name="COMMAND_OPEN_OPTIONS"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">OPTIONS</span></h5>
<p>This command opens the options configuration window.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN OPTIONS &lt;page&gt;</code></p>
<p><code>&lt;- OPEN OPTIONS &lt;page&gt;</code></p>
<p><strong>Parameters</strong><br>
<code>&lt;page&gt;</code>, possible values:</p>

	<ul>
		<li>general</li>
		<li>privacy</li>
		<li>notifications</li>
		<li>soundalerts</li>
		<li>sounddevices</li>
		<li>hotkeys</li>
		<li>connection</li>
		<li>voicemail</li>
		<li>callforward</li>
		<li>video</li>
		<li>advanced</li>
	</ul><p>Note that no error feedback is generated that when an erroneous page name is passed in the <code>&lt;page&gt;</code> parameter – the command will still be echoed back, it simply does nothing.  <br>
*<br>
<strong>Errors</strong></p>
<ul>
	<li><code>ERROR 69 invalid open what</code></li>
	<li><code>Open target is missing or misspelled</code></li>
</ul>
<p><strong>Version</strong><br>
Skype for Windows 1.4<br>
<strong>Note:</strong> <code>OPEN OPTIONS video</code> parameter was introduced in Skype for Windows 2.0.</p>
<p><a name="COMMAND_OPEN_CALLHISTORY"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">CALLHISTORY</span></h5>
<p>This command opens and sets the focus to the call history tab in the main Skype window.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN CALLHISTORY</code></p>
<p><code>&lt;- OPEN CALLHISTORY</code></p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 69 invalid open what
Open target is missing or misspelled</code></li>
</ul>
<p><strong>Version</strong><br>
Skype for Windows 1.4</p>
<p>As of version 2.0.0.12, this command also works on Linux.</p>
<p><a name="COMMAND_OPEN_CONTACTS"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">CONTACTS</span></h5>
<p>This command opens and sets the focus to the contacts tab in the main Skype window.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN CONTACTS</code></p>
<p><code>&lt;- OPEN CONTACTS</code></p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 69 invalid open what</code></li>
	<li><code>Open target is missing or misspelled</code></li>
</ul>
<p><strong>Version</strong><br>
Skype for Windows 1.4</p>
<p>As of version 2.0.0.12, this command also works on Linux.</p>
<p><a name="COMMAND_OPEN_DIALPAD"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">DIALPAD</span></h5>
<p>This command opens and sets the focus to the dialpad tab in the main Skype window.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN DIALPAD</code></p>
<p><code>&lt;- OPEN DIALPAD</code></p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 69 invalid open what</code></li>
	<li><code>Open target is missing or misspelled</code></li>
</ul>
<p><strong>Version</strong><br>
Skype for Windows 1.4</p>
<p><a name="COMMAND_OPEN_SENDCONTACTS"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">SENDCONTACTS</span></h5>
<p>This command opens the send contacts window.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN SENDCONTACTS &lt;username&gt; [ &lt;username2&gt; &lt;username3&gt;]</code></p>
<p><code>&lt;- OPEN SENDCONTACTS &lt;username&gt; [ &lt;username2&gt; &lt;username3&gt;]</code></p>
<p><strong>Parameters</strong><br>
Whitespace separated list of Skype usernames of recepients of the contact list.</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 69 invalid open what</code></li>
	<li><code>Open target is missing or misspelled</code></li>
	<li><code>ERROR 4 OPEN Empty target not allowed</code> – missing username parameter(s)</li>
</ul>
<p><strong>Version</strong><br>
Skype for Windows 1.4</p>
<p><a name="COMMAND_OPEN_BLOCKEDUSERS"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">BLOCKEDUSERS</span></h5>
<p>This command opens the blocked users tab of the Options window.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN BLOCKEDUSERS</code></p>
<p><code>&lt;- OPEN BLOCKEDUSERS</code></p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 69 invalid open what</code></li>
	<li><code>Open target is missing or misspelled</code></li>
</ul>
<p><strong>Version</strong><br>
Skype for Windows 1.4</p>
<p><a name="COMMAND_OPEN_IMPORTCONTACTS"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">IMPORTCONTACTS</span></h5>
<p>This command opens the import contacts wizard.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN IMPORTCONTACTS</code></p>
<p><code>&lt;- OPEN IMPORTCONTACTS</code></p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 69 invalid open what</code></li>
	<li><code>Open target is missing or misspelled</code></li>
</ul>
<p><strong>Version</strong><br>
Skype for Windows 1.4</p>
<p><a name="COMMAND_OPEN_GETTINGSTARTED"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">GETTINGSTARTED</span></h5>
<p>This command opens the getting started wizard.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN GETTINGSTARTED</code></p>
<p><code>&lt;- OPEN GETTINGSTARTED</code></p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 69 invalid open what</code></li>
	<li><code>Open target is missing or misspelled</code></li>
</ul>
<p><strong>Version</strong><br>
Skype for Windows 1.4</p>
<p><a name="COMMAND_OPEN_AUTHORIZATION"></a></p>
<h5><span class="caps">OPEN</span> <span class="caps">AUTHORIZATION</span></h5>
<p>This command opens the authorization request window for a given user.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; OPEN AUTHORIZATION &lt;skypename&gt;</code></p>
<p><code>&lt;- OPEN AUTHORIZATION &lt;skypename&gt;</code></p>
<p><strong>Parameters</strong><br>
<code>skypename</code> of the user whose authorization is requested.</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 69 invalid open what</code></li>
	<li><code>Open target is missing or misspelled</code></li>
	<li><code>ERROR 117 OPEN User already authorized</code></li>
</ul>
<p><strong>Version</strong><br>
Skype for Windows 1.4</p>
<p><a name="COMMAND_BTN_PRESSED"></a></p>
<p><a name="COMMAND_BTN_RELEASED"></a></p>
<h5>BTN_PRESSED and BTN_RELEASED</h5>
<p>BTN_PRESSED command does not actually do anything useful.  
BTN_RELEASED command can be used to simulate keyboard events in Skype 
UI.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; BTN_PRESSED &lt;key&gt;</code></p>
<p><code>&lt;- BTN_PRESSED &lt;key&gt;</code></p>
<p><code>-&gt; BTN_RELEASED &lt;key&gt;</code></p>
<p><code>&lt;- BTN_RELEASED &lt;key&gt;</code></p>
<p><strong>Parameters:</strong></p>
<p>Parameter <key> can have one the of following values:<br>
*<br>
<code>{0...9 | A...Z | # | * | + | UP | DOWN | YES | NO | SKYPE | PAGEUP | PAGEDOWN}</code></key></p>
<p>Note that during an active call, when either Call or Call Phone tabs are focused, <code>BTN_RELEASED</code> command with parameter that is a valid <span class="caps">DTMF</span> code, will cause that <span class="caps">DTMF</span> code to be sent to the remote party of the call.</p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_GET_CONTACTS_FOCUSED"></a></p>
<h5><span class="caps">GET</span> <span class="caps">CONTACTS</span> <span class="caps">FOCUSED</span></h5>
<p>This command returns the skypename of a contact currently focused in 
Skype UI. Note that when more than one contacts are selected in SKype 
UI, this command only returns only one contact (the last one focused).</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; GET CONTACTS_FOCUSED</code></p>
<p><code>&lt;- CONTACTS FOCUSED &lt;skypename&gt;</code></p>
<p>Note that the <code>&lt;- CONTACTS FOCUSED</code> response has the same syntax as automatic focus notifications.</p>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.1)</p>
<p><a name="COMMAND_UI_LANGUAGE"></a></p>
<h5><span class="caps">GET</span>/<span class="caps">SET</span> UI_LANGUAGE</h5>
<p>Following two commands are available to change and retrieve current interface language settings:</p>
<p><code>-&gt; GET UI_LANGUAGE</code></p>
<p><code>-&gt; SET UI_LANGUAGE &lt;iso2&gt;</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; GET UI_LANGUAGE
&lt;- UI_LANGUAGE en
-&gt; SET UI_LANGUAGE en
&lt;- UI_LANGUAGE en
&lt;- UI_LANGUAGE en
&lt;- UI_LANGUAGE en
</pre>
<p>Note that the <code>&lt;- UI_LANGUAGE &lt;iso2&gt;</code> notification message is also generated by Skype when language settings get changed manually from the user interface.</p>
<p><strong>NB!</strong> When the UI language is set via custom language file, <code>GET UI_LANGUAGE</code> will return “xx” (used to return “en” in versions prior to 3.5).</p>
<p><strong>Version</strong><br>
Protocol 6 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_UI_WALLPAPERS"></a></p>
<h5><span class="caps">GET</span>/<span class="caps">SET</span> <span class="caps">WALLPAPERS</span></h5>
<p>Following two commands are available to change and retrieve current interface wallpapers:</p>
<p><code>-&gt; GET WALLPAPER</code></p>
<p><code>&lt;- WALLPAPER [&lt;filename&gt;]</code></p>
<p><code>-&gt; SET WALLPAPER [&lt;filename&gt;]</code></p>
<p><code>&lt;- WALLPAPER [&lt;filename&gt;]</code></p>
<p>Note that the filename parameter must contain full path as well as 
file extension of the wallpaper file. The filename parameter must not be
 enclosed in quotes.</p>
<p>When <code>SET WALLPAPER</code> command is given without a parameter, it will remove current wallpaper.</p>
<p>Supported picture formats are <span class="caps">PNG</span>, <span class="caps">JPG</span>, and <span class="caps">BMP</span></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">//----------------------------------------------------------
// Setting user interface background
-&gt; SET WALLPAPER C:\Stuff\test.bmp
&lt;- WALLPAPER C:\Stuff\test.bmp
&lt;- WALLPAPER C:\Stuff\test.bmp
//----------------------------------------------------------
// Trying non-existing file..
-&gt; SET WALLPAPER c:\Stuff\wrongfile.bmp
&lt;- ERROR 111 SET File not found
//----------------------------------------------------------
// Retrieving background filename
-&gt; GET WALLPAPER C:\Stuff\test.bmp
&lt;- WALLPAPER C:\Stuff\test.bmp
//----------------------------------------------------------
// Clearing background filename
-&gt; SET WALLPAPER
&lt;- WALLPAPER 
&lt;- WALLPAPER
</pre>
<p>Note that the <code>&lt;- WALLPAPER &lt;filename&gt;</code> notification message is also generated by Skype when the wallpaper is changed manually from the user interface.</p>
<p><strong>Version</strong><br>
Protocol 6 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_SILENT_MODE"></a></p>
<h5>SILENT_MODE</h5>
<p>While in silent mode, the Skype client will no longer send out any 
visual notifications of calls, chat messages or other Skype events, 
although you will still hear ringtone when someone is calling you.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SET SILENT_MODE {ON|OFF}</code></p>
<p><code>&lt;- SILENT_MODE {ON|OFF}</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; SET SILENT_MODE ON
&lt;- SILENT_MODE ON
-&gt; SET SILENT_MODE OFF
&lt;- SILENT_MODE OFF
</pre>
<p>Silent mode can also be turned off by doubleclicking on the Skype 
icon in the System Tray. NB! Using ‘Open Skype’ command from the System 
Tray local menu will not turn Silent Mode off. Only double-click on the 
icon does.</p>
<p>Note that when a user manually turns off silent mode from System Tray, SILENT_MODE <span class="caps">OFF</span> notification is sent out by Skype.</p>
<p>Note that switching silent mode ON will cause the Skype Client to pop
 a confirmation message, displaying the name of the application from 
which the silent mode request originated. This confirmation message will
 re-pop every time a third party application tries to enter silent mode.</p>
<p><strong>Version</strong><br>
Protocol 6 (Skype <span class="caps">API</span> 2.6)</p>
<p><a name="CUSTOM_MENUS_AND_EVENTS"></a></p>
<h4>Custom Menus and Events</h4>
<p>In <span class="caps">API</span> version 3.0, it is possible to add 
your own menu items under !DoMore sections of Skype UI menus. When such 
menu items get clicked on by a user, notification events are sent back 
to application from which the menu was created. A companion 
functionality to this are Skype Alert Events – clickable notification 
event entries in Skype UI that you can add and remove from your own 
code.</p>
<p><a name="CUSTOM_MENU_ITEMS"></a></p>
<h5>Custom Menu Items</h5>
<p>The custom menu interface provides commands, notifications and events
 required to create and manage custom menu entries in the Skype client. 
Custom menu items are automatically removed when the <span class="caps">API</span> client that created them is disconnected.</p>
<p>When a custom menu item is clicked by the user, notification event to the <span class="caps">API</span> client is fired. Each <span class="caps">API</span> client has its own specific menu items and each client only receives notifications from menu items it creates.</p>
<p>The menu items can appear in Do More sections of various menus across
 the Skype user interface. Which particular Do More menu receives the 
menu item is controlled by the <code>CONTEXT</code> parameter of the <a href="#COMMAND_CREATE_MENU_ITEM"><span class="caps">CREATE</span> MENU_ITEM</a> command.</p>
<p>Note that custom menus are currently only supported by Windows client.</p>
<p><strong>Version</strong><br>
Protocol 6 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_CREATE_MENU_ITEM"></a></p>
<h6><span class="caps">CREATE</span> MENU_ITEM</h6>
<p>Creates a custom menu item in one of the Do More menus of the Skype interface.</p>
<p><strong>Syntax:</strong><br>
<code>CREATE MENU_ITEM &lt;id&gt; CONTEXT &lt;context&gt; CAPTION &lt;caption&gt; [HINT &lt;hint&gt;]</code><br>
*<br>
<code>[ICON &lt;icon_path&gt;] [ENABLED true|false] [ENABLE_MULTIPLE_CONTACTS true|false] [CONTACT_TYPE_FILTER skype|skypeout|all]</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; CREATE MENU_ITEM test01 CONTEXT contact CAPTION "TEST 01" ENABLED true
&lt;- MENU_ITEM test01 CREATED
//---------------------------------------------------------------
// Following menu item will only be enabled for SkypeOut contacts
-&gt; CREATE MENU_ITEM test02 CONTEXT contact CAPTION "TEST FOR SKYPEOUT" CONTACT_TYPE_FILTER skypeout
&lt;- MENU_ITEM test02 CREATED
</pre>
<p>Parameters of the <code>CREATE MENU_ITEM</code> command:</p>
<ul>
	<li><code>ID</code> – Unique alphanumeric identifier, must start with a letter.</li>
	<li><code>CONTEXT</code> – controls in which one of the Do More menus the menu item will appear. Valid values are:
	<ul>
		<li><code>CHAT</code> – Do More button at the upper part of a Chat 
window. Note that the Do More button is disabled when there are more 
than two chat participants.</li>
		<li><code>CALL</code> – Do More menu at the upper part of the Call tab.</li>
		<li><code>MYSELF</code> – Do More menu from the Personalize button on user’s moodmessage tab.</li>
		<li><code>TOOLS</code> – Do More sub-menu under the Tools menu.</li>
		<li><code>CONTACT</code> – Do More sub menu from contact menu that can
 be opened by right-clicking on a contact. Note the Do More menu is 
disabled when more that one contacts are selected. The <code>CONTACT</code> key has three sub-keys:
		<ul>
			<li><code>SKYPE</code> – menu item will be enabled only for contacts with Skype accounts. The menu item will be grayed out for SkypeOut contacts.</li>
			<li><code>SKYPEOUT</code> – menu item will be enabled only for SkypeOut contacts. The menu item will be grayed out for skypename contacts.</li>
			<li><code>ALL</code> – menu item will be enabled for all sorts of contacts, in which case you can basically omit this key altogether.</li>
		</ul></li>
	</ul></li>
	<li><code>CAPTION</code> – Menu item text. Max 32 characters, enclose in quotes if the text contains whitespaces.</li>
	<li><code>HINT</code> – Optional and currently unused.</li>
	<li><code>ICON</code> – The directory path of the .<span class="caps">PNG</span> file of the menu icon. Maximum size of the icon is 32 × 32 pixels. Enclose in quotes. This parameter is optional.</li>
	<li><code>ENABLED</code> – true | false – controls if the menu item is 
in enabled state. Menu item in disabled state remain visible in the menu
 but is grayed out and unclickable.</li>
	<li><code>ENABLE_MULTIPLE_CONTACTS</code> – Optional and currently unused.</li>
</ul>
<p><strong>Version</strong><br>
Protocol 6 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_DELETE_MENU_ITEM"></a></p>
<h6><span class="caps">DELETE</span> MENU_ITEM</h6>
<p>Removes a custom menu item. Note that custom menu items are removed 
automatically when the client application that created them is 
disconnected.</p>
<p><strong>Syntax:</strong><br>
<code>DELETE MENU_ITEM &lt;id&gt;</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; CREATE MENU_ITEM test01 CONTEXT contact CAPTION "TEST 01" ENABLED true
&lt;- MENU_ITEM test01 CREATED
-&gt; DELETE MENU_ITEM test01
&lt;- DELETE MENU_ITEM test01
</pre>
<p><strong>Version</strong><br>
Protocol 6 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_SET_MENU_ITEM"></a></p>
<h6><span class="caps">SET</span> MENU_ITEM</h6>
<p><strong>Syntax:</strong><br>
<code>SET MENU_ITEM &lt;property&gt; &lt;value&gt;</code></p>
<p>This command enables you to change following properties of a custom menu item:</p>
<ul>
	<li><code>CAPTION</code></li>
	<li><code>HINT</code></li>
	<li><code>ENABLED</code></li>
</ul>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; CREATE MENU_ITEM test01 CONTEXT contact CAPTION "TEST 01" ENABLED true
&lt;- MENU_ITEM test01 CREATED
-&gt; SET MENU_ITEM test01 CAPTION "changed caption"
&lt;- MENU_ITEM test01 CAPTION "changed caption"
</pre>
<p>Note that you can only change <code>MENU_ITEM</code> properties one at a time. To change both <code>CAPTION</code> and <code>ENABLED</code> properties of a <code>MENU_ITEM</code>, you will need two <code>SET MENU_ITEM</code> commands.</p>
<p><strong>Version</strong><br>
Protocol 6 (<span class="caps">API</span> version 3.0)</p>
<p><a name="EVENT_MENU_ITEM"></a></p>
<h6>MENU_ITEM click event</h6>
<p><code>MENU_ITEM</code> events are generated when a user clicks on a custom menu item. Note that each <span class="caps">API</span> client receives <code>MENU_ITEM</code> events only for menu items created from within their own code.</p>
<p>The message format is as follows:</p>
<p><code>&lt;- MENU_ITEM &lt;menu_id&gt; CLICKED [&lt;user_id&gt;] CONTEXT &lt;context&gt; [CONTEXT_ID &lt;context_id&gt;]</code></p>
<ul>
	<li>The <menu_id> parameter is always returned as the ID of the menu item that was clicked.</menu_id></li>
	<li><user_id> is only returned if the <code>CONTEXT</code> was either <code>CONTACT</code>, <code>CALL</code> or <code>CHAT</code> and contains the Skype name of the contact.</user_id></li>
	<li><context> is always returned as <code>CONTEXT</code> of the menu item.</context></li>
	<li><context_id> is only returned if the context was either <code>CALL</code> or <code>CHAT</code>. In case of a <code>CALL</code>, <context_id> returns <code>CALL ID</code>, in case of a <code>CHAT</code>, it returns <code>CHAT ID</code>.</context_id></context_id></li>
</ul>
<p><strong>Example:</strong></p>
<pre style="codeSample">//------------------------------------------------------------------------------
// Context = MYSELF
-&gt; CREATE MENU_ITEM test05 CONTEXT MYSELF CAPTION "TEST" ENABLED true
// -- clicking --
&lt;- MENU_ITEM test05 CLICKED CONTEXT myself
//------------------------------------------------------------------------------
// Context = TOOLS
-&gt; CREATE MENU_ITEM test06 CONTEXT TOOLS CAPTION "TEST" ENABLED true
// -- clicking --
&lt;- MENU_ITEM test06 CLICKED CONTEXT tools
//------------------------------------------------------------------------------
// Context = CONTACT
-&gt; CREATE MENU_ITEM test07 CONTEXT CONTACT CAPTION "TEST" ENABLED true
// -- clicking --
&lt;- MENU_ITEM test07 CLICKED echo123 CONTEXT contact
//------------------------------------------------------------------------------
// Context = CALL
-&gt; CREATE MENU_ITEM test03 CONTEXT CALL CAPTION "TEST" ENABLED true
// -- clicking --
&lt;- MENU_ITEM test03 CLICKED echo123 CONTEXT call CONTEXT_ID 879
//------------------------------------------------------------------------------
// Context = CHAT
-&gt; CREATE MENU_ITEM test04 CONTEXT CHAT CAPTION "TEST" ENABLED true
// -- clicking --
&lt;- MENU_ITEM test04 CLICKED echo123 CONTEXT chat CONTEXT_ID #tester/$echo123;559a71c0ef9d758b
</pre>
<p><strong>Version</strong><br>
Protocol 6 (<span class="caps">API</span> version 3.0)</p>
<p><a name="ALERT_EVENTS"></a></p>
<h5>Skype Alert Events</h5>
<p>Events, when created, appear in Skype UI on the right side of the 
mood message / profile panel as well as System Tray when Skype is in 
minimized state. Custom events can be created with the following <span class="caps">API</span> command:</p>
<p><code>-&gt; CREATE EVENT &lt;id&gt; CAPTION &lt;text&gt; HINT &lt;text&gt;</code></p>
<p><strong>Parameters:</strong></p>
<ul>
	<li><code>EVENT &lt;id&gt;</code> – unique identifier, alphanumeric and must start with a letter.</li>
	<li><code>CAPTION &lt;text&gt;</code> – displayed name of the menu item, enclosed in quotes if it contains whitespaces.</li>
	<li><code>HINT &lt;text&gt;</code> – free-form text, enclosed in quotes if it contains whitespaces.</li>
</ul>
<p>Custom events will be displayed on events tab as “Plugin messages”. The <code>CAPTION</code>
 of the event will be displayed as a clickable link. Clicking on such 
link will generate a notification message in following format:</p>
<p><code>&lt;- EVENT &lt;id&gt; CLICKED</code></p>
<p>Note that only the <span class="caps">API</span> client who created that particular event will receive such message.</p>
<p>The text given in <code>HINT</code> parameter will be displayed as hint, on mouse hover on the link.</p>
<p>Events remain in plugin message list as long as the <span class="caps">API</span> client that created them gets disconnected or are deleted from within <span class="caps">API</span> client code.</p>
<p>To delete events:<br>
<code>-&gt; DELETE EVENT &lt;id&gt;</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">//--------------------------------------------------------------------
// Let there be a new event:
-&gt; CREATE EVENT test1 CAPTION "Test message" HINT "Test message hint"
&lt;- EVENT test1 CREATED
//--------------------------------------------------------------------
// At this point a red flag icon and "1 new event message" should appear 
// on the mood message panel. Click on it, then click on "Test message".
// Following event is sent to your API client:
&lt;- EVENT test1 CLICKED
//--------------------------------------------------------------------
// Clearing up the mess from event list
-&gt; delete event test1
&lt;- DELETE EVENT test1
</pre>
<p><strong>Version</strong><br>
Protocol 6 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_AP2AP"></a></p>
<h4>Application to application commands</h4>
<p>The <code>AP2AP</code> feature in Skype allows two <span class="caps">API</span>
 clients to exchange information without the communication being visible
 on the client. Application to application communication has the 
following characteristics:</p>
<ul>
	<li>From Skype version 3.1.0.150 it is no longer required for users to 
be in each other’s contact list to be able to establish AP2AP 
connections. The only requirement for AP2AP connections is that both 
users have to be online.</li>
	<li>From <span class="caps">API</span> version 3.0, you can establish AP2AP connections between several instances of Skype that are logged in with the same skypename.</li>
	<li>Connections are only attempted to connectable users at <span class="caps">CONNECT</span>.</li>
	<li>Connections are established only when there is a matching application on the other side.</li>
	<li>When connection is dropped by one of the parties, all undelivered 
(stream) data will be lost. This is typically a problem when connection 
to remote aplication is dropped by a stream sender before receiver has 
acknowledged that it has received entire stream.</li>
	<li>The application name is limited to 32 bytes.</li>
	<li>Idle connections are dropped in a specific amount of time (typically 8 minutes).</li>
	<li>When connection is relayed, throttling is engaged.</li>
	<li>If the other party is logged in to multiple Skype instances, a stream for each instance is created.</li>
	<li>The stream write provides reliable transmission to deliver a large amount of data.</li>
	<li>The maximum amount of write to a stream can be 0xFFFF bytes long.</li>
	<li>Any character except 0×00 is allowed in a message.</li>
	<li>Datagrams are unreliable packets sent over a network (usually translates to <span class="caps">UDP</span>).</li>
	<li>The maximum size of datagrams is 1400 bytes.</li>
	<li>There is no guarantee that datagrams will be delivered.</li>
</ul>
<p><strong>Note:</strong> When connected to another user using 
application to application messaging, a user cannot install anything on 
the remote user’s client without the express permission of the remote 
user.</p>
<p><strong>Note on AP2AP streams:</strong><br>
With Skype4Com library versions prior to 1.0.28, re-entrant event 
handlers caused stream packets to be retrieved from receiving side in 
incorrect order. If you experience problems with packet order (and you 
are using Skype4Com library), make sure you upgrade it to version 
1.0.28.</p>
<p><strong>Another note on Skype4Com library:</strong><br>
Binary data transfers via ap2ap functionality of Skype4Com library can 
sometimes lead to data getting partially scrambled. To make sure your 
binary data is transmitted properly, we strongly suggest that you use 
base64 encoding to convert your data to strings before passing those 
strings to Skype4Com IApplication.!SendDatagram and 
IApplicationStream.Write methods.</p>
<p>The reason for this phenomenon is that due to how string parameters 
are handled when communicating with ActiveX objects, all Skype <span class="caps">API</span> commands that are passed to or retrieved from the Skype client by Skype4Com library are passed through <span class="caps">UTF</span>-8 encoding routine. This includes commands dealing with application to application datagrams and stream writes/reads. Those <span class="caps">UTF</span>-8
 encoding routines occasionally produce different results, depending on 
additional language packs a user has installed in Windows.</p>
<p>For code example on base64 encoding/decoding algorithms, refer to A2AStreams.pas example linked below.</p>
<p>Read an [#COMMAND_AP2AP_EXAMPLE application to application example] to get you started.</p>
<p><strong>Skype4Com example:</strong></p>
<ul>
	<li><a href="http://developer.skype.com/delphi-examples/a2achat-pas">A2AChat.pas</a></li>
	<li><a href="http://developer.skype.com/delphi-examples/a2astreams-pas">A2AStreams.pas</a></li>
</ul>
<p><a name="COMMAND_AP2AP_CREATE"></a></p>
<h5>AP2AP <span class="caps">CREATE</span></h5>
<p>This command registers a new application object with Skype. Application name cannot contain whitespaces.</p>
<p><strong>Syntax:</strong><br>
<code>CREATE APPLICATION &lt;appname&gt;</code></p>
<p><strong>Response</strong><br>
If successful, the command is echoed back</p>
<p><strong>Parameters:</strong><br>
<code>&lt;appname&gt;</code> : An arbitrary name to identify the application that will be exchanging data</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 536 CREATE: no object or type given</code></li>
	<li><code>ERROR 537 CREATE: Unknown object type given</code></li>
	<li><code>ERROR 540 CREATE APPLICATION: Missing or invalid name</code></li>
	<li><code>ERROR 541 APPLICATION: operation failed - in case an application with this name already exists</code></li>
</ul>
<p><strong>Version</strong></p>
<ul>
	<li>Protocol 5</li>
	<li>Skype for Windows 1.4</li>
</ul>
<p><a name="COMMAND_AP2AP_CONNECT"></a></p>
<h5>AP2AP <span class="caps">CONNECT</span></h5>
<p>This command creates a stream from the application to another Skype user’s instance of the same application.</p>
<p><strong>Syntax:</strong><br>
<code>ALTER APPLICATION &lt;appname&gt; CONNECT &lt;skypename&gt;</code></p>
<p><strong>Response:</strong><br>
If successful, the command is echoed back</p>
<p><strong>Example 1:</strong> no matching application on the other side</p>
<pre style="codeSample">-&gt; #ID1 alter application test connect testuser
&lt;- #ID1 ALTER APPLICATION test CONNECT testuser
&lt;- APPLICATION test CONNECTING testuser
&lt;- APPLICATION test CONNECTING
</pre>
<p>Note that only the initial feedback notification is echoed back with command ID.</p>
<p><strong>Example 2:</strong> Matching application on remote was found</p>
<pre style="codeSample">//--------------------------------------------------------- 
// From initiator perspective
-&gt; #ID1 alter application test connect anappo2
&lt;- #ID1 ALTER APPLICATION test CONNECT anappo2
&lt;- APPLICATION test CONNECTING anappo2
&lt;- APPLICATION test CONNECTING 
&lt;- APPLICATION test STREAMS anappo2:1
//---------------------------------------------------------
// From remote perspective
&lt;- APPLICATION test STREAMS anappo:1
</pre>
<p><strong>Parameters:</strong></p>
<ul>
	<li><code>&lt;appname&gt;</code> : An arbitary name to identify the application that will be exchanging data</li>
	<li><code>&lt;skypename&gt;</code> : The user to connect to this application</li>
</ul>
<p><strong>Errors:</strong></p>
<ul>
	<li><code>ERROR 546 ALTER APPLICATION: Missing or invalid action</code></li>
	<li><code>ERROR 547 ALTER APPLICATION CONNECT: Invalid user handle</code></li>
</ul>
<p><strong>Version:</strong></p>
<ul>
	<li>Protocol 5</li>
	<li>Skype for Windows 1.4</li>
</ul>
<p><strong>Note:</strong><br>
If the user identified by <code>&lt;skypename&gt;</code> is logged in from multiple locations, a stream will be created to each location.</p>
<p><a name="COMMAND_AP2AP_WRITE"></a></p>
<h5>AP2AP <span class="caps">WRITE</span></h5>
<p>This command writes text into the application stream identified by the destination user’s Skypename and stream ID.</p>
<p><strong>Syntax</strong><br>
<code>ALTER APPLICATION &lt;appname&gt; WRITE &lt;skypename&gt;:&lt;id&gt; &lt;text&gt;</code></p>
<p><strong>Response</strong><br>
If successful, the command is echoed back<br>
<strong>Note:</strong> There is a bug in Skype 1.4 where, following an application <span class="caps">WRITE</span> event, Skype reports that the number of bytes sent is two characters greater than that which is actually written.</p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>&lt;appname&gt;</code> : An arbitary name to identify the application that will be exchanging data</li>
	<li><code>&lt;skypename&gt;</code> : The name of the skype contact to whom the message will be sent</li>
	<li><code>&lt;id&gt;</code> : The numeric identifier for the skype instance to which the message will be sent</li>
	<li><code>&lt;text&gt;</code> : The text to send</li>
</ul>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 546 ALTER APPLICATION : Missing or invalid action</code></li>
	<li><code>ERROR 550 ALTER APPLICATION READ: Missing or Invalid stream identifier</code></li>
</ul>
<p><strong>Version</strong></p>
<ul>
	<li>Protocol 5</li>
	<li>Skype for Windows 1.4</li>
</ul>
<p><strong>Example</strong></p>
<pre style="codeSample">//Send "Hello world!" to user "testtest20" stream "1" (application "exe")
-&gt; ALTER APPLICATION exe WRITE testtest20:1 Hello world!
&lt;- ALTER APPLICATION exe WRITE testtest20:1
// The message has been queued for sending, message length is reported back
&lt;- APPLICATION exe SENDING testtest20:1 14
// The message has been sent -- note missing stream ID from the end of response
&lt;- APPLICATION exe SENDING
-&gt; ALTER APPLICATION exe WRITE testtest20:1 1234567890
&lt;- ALTER APPLICATION exe WRITE testtest20:1
&lt;- APPLICATION exe SENDING testtest20:1 12
&lt;- APPLICATION exe SENDING</pre>
<p><a name="COMMAND_AP2AP_DATAGRAM"></a></p>
<h5>AP2AP <span class="caps">DATAGRAM</span></h5>
<p>This command sends a datagram to the application stream.</p>
<p><strong>Syntax:</strong><br>
<code>ALTER APPLICATION &lt;appname&gt; DATAGRAM &lt;skypename&gt;:&lt;id&gt; &lt;text&gt;</code></p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>&lt;appname&gt;</code> : An arbitrary name to identify the application that will be exchanging data</li>
	<li><code>&lt;skypename&gt;</code> : skypename of the remote party</li>
	<li><code>&lt;id&gt;</code> : stream ID</li>
	<li><code>&lt;text&gt;</code> : datagram content (0×00 is not allowed, 
so to use this for binary transfers you need to convert the data to 
remove nulls, using base64 or base128 for example).</li>
</ul>
<p><strong>Example:</strong></p>
<pre style="codeSample">//--------------------------------------------------------
// Creating and connecting application 
// (from sender perspective)
-&gt; CREATE APPLICATION test
&lt;- CREATE APPLICATION test
-&gt; ALTER APPLICATION test CONNECT anappo
&lt;- ALTER APPLICATION test CONNECT anappo
&lt;- APPLICATION test CONNECTING anappo
//--------------------------------------------------------
// Note that a STREAMS event notification is 
// generated automatically upon connect.
&lt;- APPLICATION test STREAMS anappo:1
//--------------------------------------------------------
// Sending datagram
-&gt; ALTER APPLICATION test DATAGRAM anappo:1 BBBBBBBBBBBBBB
&lt;- ALTER APPLICATION test DATAGRAM anappo:1
//--------------------------------------------------------
// Following notification contains the number of 
// characters in datagram
&lt;- APPLICATION test SENDING anappo:1=14
&lt;- APPLICATION test SENDING

//--------------------------------------------------------
// Same thing from receiver perspective
-&gt; CREATE APPLICATION test
&lt;- CREATE APPLICATION test
&lt;- APPLICATION test STREAMS anappo2:1
//--------------------------------------------------------
// Note that receiver does not get a separate notification
// with size of received datagram.
&lt;- APPLICATION test DATAGRAM anappo2:1 BBBBBBBBBBBBBB
</pre>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 546 ALTER APPLICATION : Missing or invalid action</code></li>
	<li><code>ERROR 551 ALTER APPLICATION DATAGRAM: Missing or invalid stream identifier</code></li>
</ul>
<p><strong>Version</strong></p>
<ul>
	<li>Protocol 5</li>
	<li>Skype for Windows 1.4</li>
</ul>
<p><a name="COMMAND_AP2AP_READ"></a></p>
<h5>AP2AP <span class="caps">READ</span></h5>
<p>This command reads data from an application stream.</p>
<p><strong>Syntax</strong><br>
<code>ALTER APPLICATION &lt;appname&gt; READ &lt;skypename&gt;:&lt;id&gt;</code></p>
<p><strong>Response</strong><br>
If successful, the command is echoed back</p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>&lt;appname&gt;</code> : An arbitrary name to identify the application that will be exchanging data</li>
	<li><code>&lt;skypename&gt;</code> : skypename of the remote party</li>
	<li><code>&lt;id&gt;</code> : stream ID</li>
</ul>
<p><strong>Example:</strong></p>
<pre style="codeSample">//--------------------------------------------------------
// Sender
-&gt; CREATE APPLICATION test
&lt;- CREATE APPLICATION test
-&gt; ALTER APPLICATION test CONNECT anappo
&lt;- ALTER APPLICATION test CONNECT anappo
&lt;- APPLICATION test CONNECTING anappo
&lt;- APPLICATION test CONNECTING 
&lt;- APPLICATION test STREAMS anappo:1
-&gt; ALTER APPLICATION test WRITE anappo:1 AAAAAA
&lt;- ALTER APPLICATION test WRITE anappo:1
&lt;- APPLICATION test SENDING anappo:1=8
&lt;- APPLICATION test SENDING

//--------------------------------------------------------
// Receiver
-&gt; CREATE APPLICATION test
&lt;- CREATE APPLICATION test
//--------------------------------------------------------
// Streams notification we received on remote connect
&lt;- APPLICATION test STREAMS anappo2:1
//--------------------------------------------------------
// Packet notification message including packet size
&lt;- APPLICATION test RECEIVED anappo2:1=6
//--------------------------------------------------------
// Reading the packet
-&gt; ALTER APPLICATION test READ anappo2:1
&lt;- ALTER APPLICATION test READ anappo2:1 AAAAAA
&lt;- APPLICATION test RECEIVED
</pre>
<p><strong>Errors:</strong></p>
<ul>
	<li><code>ERROR 546 ALTER APPLICATION : Missing or invalid action</code></li>
	<li><code>ERROR 550 ALTER APPLICATION READ: Missing or invalid stream identifier</code></li>
</ul>
<p><strong>Version</strong></p>
<ul>
	<li>Protocol 5</li>
	<li>Skype for Windows 1.4</li>
</ul>
<p><a name="COMMAND_AP2AP_DISCONNECT"></a></p>
<h5>AP2AP <span class="caps">DISCONNECT</span></h5>
<p>This command disconnects a user stream from an application.</p>
<p><strong>Syntax</strong><br>
<code>ALTER APPLICATION &lt;appname&gt; DISCONNECT &lt;skypname&gt;:&lt;id&gt;</code></p>
<p><strong>Response</strong><br>
If successful, the command is echoed back</p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>&lt;appname&gt;</code> : An arbitrary name to identify the application that will be exchanging data</li>
	<li><code>&lt;skypename&gt;:&lt;id&gt;</code> : The user and stream to disconnect</li>
</ul>
<p><strong>Example:</strong></p>
<pre style="codeSample">//--------------------------------------------------------- 
// From initiator perspective
-&gt; #ID2 alter application test disconnect anappo2:1
&lt;- #ID2 ALTER APPLICATION test DISCONNECT anappo2:1
&lt;- APPLICATION test STREAMS
//---------------------------------------------------------
// From remote perspective
&lt;- APPLICATION test STREAMS
</pre>
<p>Note that if you use re-connect to the same remote user after disconnecting, the <id> part of the streams notification will increment itself.</id></p>
<pre style="codeSample">-&gt; ALTER APPLICATION test CONNECT anappo2
&lt;- ALTER APPLICATION test CONNECT anappo2
&lt;- APPLICATION test CONNECTING anappo2
&lt;- APPLICATION test CONNECTING 
&lt;- APPLICATION test STREAMS anappo2:2
</pre>
<p><strong>Errors:</strong></p>
<ul>
	<li><code>ERROR 546 ALTER APPLICATION : Missing or invalid action</code></li>
	<li><code>ERROR 548 ALTER APPLICATION DISCONNECT: Invalid stream identifier</code></li>
</ul>
<p><strong>Version</strong></p>
<ul>
	<li>Protocol 5</li>
	<li>Skype for Windows 1.4</li>
</ul>
<p><a name="COMMAND_AP2AP_DELETE"></a></p>
<h5>AP2AP <span class="caps">DELETE</span></h5>
<p>This command deletes an application and drops all connections to it.</p>
<p><strong>Syntax</strong><br>
<code>DELETE APPLICATION &lt;appname&gt;</code></p>
<p><strong>Response</strong><br>
If successful, the command is echoed back</p>
<p><strong>Parameters</strong><br>
<code>&lt;appname&gt;</code> : The name of the application to be deleted</p>
<p><strong>NB!</strong> If your application had open connections to 
remote users, these users will not receive notifications when you delete
 that application.</p>
<p><strong>Errors:</strong></p>
<ul>
	<li><code>ERROR 538 DELETE: no object or type given</code></li>
	<li><code>ERROR 539 DELETE: Unknown object type given</code></li>
	<li><code>ERROR 542 DELETE APPLICATION : missing or invalid application name</code></li>
	<li><code>ERROR 541 APPLICATION: operation failed</code></li>
</ul>
<p><strong>Version</strong></p>
<ul>
	<li>Protocol 5</li>
	<li>Skype for Windows 1.4</li>
</ul>
<p><a name="COMMAND_AP2AP_EXAMPLE"></a></p>
<h5>Application to application example</h5>
<p>Jim and Joe are two users who installed “toru” application.</p>
<pre style="codeSample">// register application on both sides
[JIM] =&gt; CREATE APPLICATION toru
[JIM] &lt;= CREATE APPLICATION toru
[JOE] =&gt; CREATE APPLICATION toru
[JOE] &lt;= CREATE APPLICATION toru
// JIM initiates communication to JOE
[JIM] =&gt; ALTER APPLICATION toru CONNECT joe
[JIM] &lt;= ALTER APPLICATION toru CONNECT joe
// connection establishing ...
[JIM] &lt;= APPLICATION toru CONNECTING joe
// .. and is successful
[JIM] &lt;= APPLICATION toru CONNECTING
// .. and creates one stream
[JIM] &lt;= APPLICATION toru STREAMS joe:1
// and JOE is notified by new stream
[JOE] &lt;= APPLICATION toru STREAMS jim:1
// JIM sends data over stream to JOE
[JIM] =&gt; ALTER APPLICATION toru WRITE joe:1 Hello world!
[JIM] &lt;= ALTER APPLICATION toru WRITE joe:1
// stay tuned while data is transmitted...
[JIM] &lt;= APPLICATION toru SENDING joe:1
// .. and you are notified on delivery success
[JIM] &lt;= APPLICATION toru SENDING
// JOE receives notification about the incoming message
[JOE] &lt;= APPLICATION toru RECEIVED jim:1
// .. and reads data from stream
[JOE] =&gt; ALTER APPLICATION toru READ jim:1
[JOE] &lt;= ALTER APPLICATION toru READ jim:1 Hello world!
// ... and is notified that stream is empty
[JOE] &lt;= APPLICATION toru RECEIVED
// JOE sends back acknowledgement of message
// A datagram is used because it is not so important to acknowledge
[JOE] =&gt; ALTER APPLICATION toru DATAGRAM jim:1 Hello back!
[JOE] &lt;= ALTER APPLICATION toru DATAGRAM jim:1
// Now data is transmitted...
[JOE] &lt;= APPLICATION toru SENDING jim:1=11
// .. and notificed when it was sent (but delivery not assured)
[JOE] &lt;= APPLICATION toru SENDING
// JIM receives datagram notifcation
[JIM] &lt;= APPLICATION toru DATAGRAM joe:1 Hello back!
// JIM decides to end the communication
[JIM] =&gt; ALTER APPLICATION toru DISCONNECT joe:1
[JIM] &lt;= ALTER APPLICATION toru DISCONNECT joe:1
// .. and when stream is closed it is notified
[JIM] &lt;= APPLICATION toru STREAMS
// Also JOE receives notification that stream was closed
[JOE] &lt;= APPLICATION toru STREAMS
// JIM unregisters applicaton
[JIM] =&gt; DELETE APPLICATION toru
[JIM] &lt;= DELETE APPLICATION toru
// JOE unregisters applicaton
[JOE] =&gt; DELETE APPLICATION toru
[JOE] &lt;= DELETE APPLICATION toru</pre>
<p><a name="COMMAND_VOICE_STREAMS"></a></p>
<h4>Voice Streams</h4>
<p>Refer to <a href="#OBJECT_CALL"><span class="caps">CALL</span> object</a> for properties relevant to manipulating voice streams.</p>
<p>To change voice stream properties of a <code>CALL</code> object, there are three extensions of the <code>ALTER CALL</code> command:</p>
<p><code>ALTER CALL &lt;id&gt; SET_INPUT SOUNDCARD="default" | PORT="port_no" | FILE="FILE_LOCATION"</code></p>
<p>This enables you to set a port or a wav file as a source of your voice, instead of a microphone.</p>
<p><code>ALTER CALL &lt;id&gt; SET_OUTPUT SOUNDCARD="default" | PORT="port_no" | FILE="FILE_LOCATION"</code></p>
<p>Redirects incoming transmission to a port or a wav file.</p>
<p><code>ALTER CALL &lt;id&gt; SET_CAPTURE_MIC PORT="port_no" | FILE="FILE_LOCATION"</code></p>
<p>Captures your own voice from microphone to a port or a wav file.</p>
<p>Note that as of version 3.5.0.202 redirecting of voice streams is also available for <a href="#OBJECT_VOICEMAIL">voicemails</a>. Look for corresponding <code>ALTER</code> commands at the end of this section.</p>
<p><strong>Example 1 – capturing incoming transmission</strong></p>
<pre style="codeSample">//---------------------------------------------------------------
// In this example we will call Skype call testing service
// and play around with redirecting inputs and outputs.
// First, lets try capturing incoming transmission into a file.
-&gt; call echo123
&lt;- CALL 808 STATUS UNPLACED
&lt;- CALL 808 STATUS ROUTING
&lt;- CALL 808 STATUS RINGING
&lt;- CONTACTS FOCUSED 
&lt;- CALL 808 VAA_INPUT_STATUS FALSE
&lt;- CALL 808 STATUS INPROGRESS
//---------------------------------------------------------------
// Ok, the call is now in progress and the helpful lady robot
// on the other side is talking. We can capture her voice to 
// a wav file by issuing the following command:
-&gt; ALTER CALL 808 SET_OUTPUT file="c:\test.wav"
&lt;- ALTER CALL 808 SET_OUTPUT file="c:\test.wav"
&lt;- CALL 808 STATUS FINISHED
//---------------------------------------------------------------
// We now have a c:\test.wav file, containing the incoming transmission.
</pre>
<p><strong>Example 2 – altering the source of the outgoing transmission</strong></p>
<pre style="codeSample">//---------------------------------------------------------------
// Let's call the helpful robot again and play a little trick on her.
// By altering sound input source, we can send her back her own voice
// that we recorded in our previous example.
-&gt; call echo123
&lt;- CALL 846 STATUS UNPLACED
&lt;- CALL 846 STATUS ROUTING
&lt;- CALL 846 STATUS RINGING
&lt;- CALL 846 VAA_INPUT_STATUS FALSE
&lt;- CALL 846 STATUS INPROGRESS
//---------------------------------------------------------------
// Wait until the lady robot asks for you to speak, then set 
// call input to a file instead of microphone.
-&gt; ALTER CALL 846 SET_INPUT file="c:\test.wav"
&lt;- ALTER CALL 846 SET_INPUT file="c:\test.wav"
&lt;- CALL 846 VAA_INPUT_STATUS TRUE
&lt;- CALL 846 VAA_INPUT_STATUS FALSE
//---------------------------------------------------------------
// If the sound from fail was sent correctly, you should hear
// the robot's voice in the playback phase of the call test.
&lt;- CALL 846 STATUS FINISHED
</pre>
<p><strong>Example 3 – capturing voice from the microphone</strong></p>
<pre style="codeSample">//---------------------------------------------------------------
// In this example, we will capture our own voice. 
-&gt; call echo123
&lt;- CALL 889 STATUS UNPLACED
&lt;- CALL 889 STATUS ROUTING
&lt;- CALL 889 STATUS RINGING
&lt;- CONTACTS FOCUSED 
&lt;- CALL 889 VAA_INPUT_STATUS FALSE
&lt;- CALL 889 STATUS INPROGRESS
//---------------------------------------------------------------
// Wait until the lady robot asks you to speak, then switch on 
// sound capture to a file and talk.
-&gt; ALTER CALL 889 SET_CAPTURE_MIC file="c:\test.wav"
&lt;- ALTER CALL 889 SET_CAPTURE_MIC file="c:\test.wav"
&lt;- CALL 889 STATUS FINISHED
//---------------------------------------------------------------
// The test.wav file should now contain your own voice.
</pre>
<p>The relevant properties of a <code>CALL</code> object can be accessed in a following manner:</p>
<pre style="codeSample">-&gt; GET CALL 748 INPUT
&lt;- CALL 748 INPUT SOUNDCARD="default"
-&gt; GET CALL 748 OUTPUT
&lt;- CALL 748 OUTPUT SOUNDCARD="default"
-&gt; GET CALL 748 VAA_INPUT_STATUS
&lt;- CALL 748 VAA_INPUT_STATUS FALSE
</pre>
<p><strong>Audio format</strong><br>
File: <span class="caps">WAV</span> <span class="caps">PCM</span></p>
<p>Sockets: raw <span class="caps">PCM</span> samples</p>
<ol>
	<li>KHz mono, 16 bit</li>
</ol>
<p><strong>Note:</strong><br>
The voice access <span class="caps">API</span> works with virtual audio cables (VACs) versions 3 and 4. However, users with <span class="caps">VAC</span> version 3.x may encounter distorted sound for the initial one or two seconds of a call.</p>
<p>When you redirect a port, Skype acts as a <span class="caps">TCP</span> client and goes looking for a <span class="caps">TCP</span> server on the given port. To receive voice stream data, you have to have your own <span class="caps">TCP</span> server running on that port.</p>
<p><strong>Skype4Com example:</strong></p>
<ul>
	<li><a href="http://developer.skype.com/delphi-examples/voicestreams-pas">VoiceStreams.pas</a> – Example of how to redirect voice streams to a <span class="caps">TCP</span> port.</li>
	<li><a href="http://developer.skype.com/delphi-examples/voicemail2wav-pas">VoiceMail2WAV.pas</a> – Example on how to save voicemails into <span class="caps">WAV</span> files.</li>
	<li><a href="http://developer.skype.com/delphi-examples/voicemail2port-pas">VoiceMail2Port.pas</a> – Example on how to redirect voicemail output to a <span class="caps">TCP</span> port.</li>
</ul>
<p><strong>Version</strong><br>
Skype <span class="caps">API</span> version 2.6 (protocol 6)</p>
<p><a name="COMMAND_ALTER_CALL_SET_INPUT"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CALL</span> SET_INPUT</h5>
<p>This enables you to set a port or a wav file as a source of your voice, instead of a microphone.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; ALTER CALL &lt;id&gt; SET_INPUT SOUNDCARD="default" | PORT="port_no" | FILE="FILE_LOCATION"</code></p>
<p><code>&lt;- ALTER CALL &lt;id&gt; SET_INPUT SOUNDCARD="default" | PORT="port_no" | FILE="FILE_LOCATION"</code></p>
<p>Note that for now, the <code>SOUNDCARD</code> parameter only accepts one value – “default”.</p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; ALTER CALL 846 SET_INPUT file="c:\test.wav"
&lt;- ALTER CALL 846 SET_INPUT file="c:\test.wav"
</pre>
<p><strong>Version</strong><br>
Skype <span class="caps">API</span> version 2.6 (protocol 6)</p>
<p><a name="COMMAND_ALTER_CALL_SET_OUTPUT"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CALL</span> SET_OUTPUT</h5>
<p>This command redirects incoming transmission to a port or a wav file.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; ALTER CALL &lt;id&gt; SET_OUTPUT SOUNDCARD="default" | PORT="port_no" | FILE="FILE_LOCATION"</code></p>
<p><code>&lt;- ALTER CALL &lt;id&gt; SET_OUTPUT SOUNDCARD="default" | PORT="port_no" | FILE="FILE_LOCATION"</code></p>
<p>Note that for now, the <code>SOUNDCARD</code> parameter only accepts 
one value – “default”. If this parameter is omitted or differs from 
“default”, the soundcard output is muted.</p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; ALTER CALL 808 SET_OUTPUT file="c:\test.wav"
&lt;- ALTER CALL 808 SET_OUTPUT file="c:\test.wav"
</pre>
<p><strong>Version</strong><br>
Skype <span class="caps">API</span> version 2.6 (protocol 6)</p>
<p><a name="COMMAND_ALTER_CALL_SET_CAPTURE_MIC"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">CALL</span> SET_CAPTURE_MIC</h5>
<p>This command captures your own voice from microphone to a port or a wav file.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; ALTER CALL &lt;id&gt; SET_CAPTURE_MIC PORT="port_no" | FILE="FILE_LOCATION"</code></p>
<p><code>&lt;- ALTER CALL &lt;id&gt; SET_CAPTURE_MIC PORT="port_no" | FILE="FILE_LOCATION"</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; ALTER CALL 889 SET_CAPTURE_MIC file="c:\test.wav"
&lt;- ALTER CALL 889 SET_CAPTURE_MIC file="c:\test.wav"
</pre>
<p><strong>Version</strong><br>
Skype <span class="caps">API</span> version 2.6 (protocol 6)</p>
<p><a name="COMMAND_ALTER_VOICEMAIL_SET_INPUT"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">VOICEMAIL</span> SET_INPUT</h5>
<p>This enables you to set a port or a wav file as a source of voicemail’s input instead of a microphone.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; ALTER VOICEMAIL &lt;id&gt; SET_INPUT SOUNDCARD="default" | PORT="port_no" | FILE="FILE_LOCATION"</code></p>
<p><code>&lt;- ALTER VOICEMAIL &lt;id&gt; SET_INPUT SOUNDCARD="default" | PORT="port_no" | FILE="FILE_LOCATION"</code></p>
<p>Note that for now, the <code>SOUNDCARD</code> parameter only accepts 
one value – “default”. If this parameter is omitted or differs from 
“default”, the soundcard input is muted.</p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; ALTER VOICEMAIL 146 SET_INPUT file="c:\test.wav"
&lt;- ALTER VOICEMAIL 146 SET_INPUT file="c:\test.wav"
</pre>
<p><strong>Version</strong><br>
Skype <span class="caps">API</span> version 3.5.0.202 (protocol 8)</p>
<p><a name="COMMAND_ALTER_VOICEMAIL_SET_OUTPUT"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">VOICEMAIL</span> SET_OUTPUT</h5>
<p>This command redirects voicemail output to a port or a wav file.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; ALTER VOICEMAIL &lt;id&gt; SET_OUTPUT SOUNDCARD="default" | PORT="port_no" | FILE="FILE_LOCATION"</code></p>
<p><code>&lt;- ALTER VOICEMAIL &lt;id&gt; SET_OUTPUT SOUNDCARD="default" | PORT="port_no" | FILE="FILE_LOCATION"</code></p>
<p>Note that for now, the <code>SOUNDCARD</code> parameter only accepts 
one value – “default”. If this parameter is omitted or differs from 
“default”, the soundcard output is muted.</p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; ALTER VOICEMAIL 108 SET_OUTPUT file="c:\test.wav"
&lt;- ALTER VOICEMAIL 108 SET_OUTPUT file="c:\test.wav"
</pre>
<p><strong>Version</strong><br>
Skype <span class="caps">API</span> version 3.5.0.202 (protocol 8)</p>
<p><a name="COMMAND_ALTER_VOICEMAIL_SET_CAPTURE_MIC"></a></p>
<h5><span class="caps">ALTER</span> <span class="caps">VOICEMAIL</span> SET_CAPTURE_MIC</h5>
<p>This command captures your own voice from microphone to a port or a wav file.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; ALTER VOICEMAIL &lt;id&gt; SET_CAPTURE_MIC PORT="port_no" | FILE="FILE_LOCATION"</code></p>
<p><code>&lt;- ALTER VOICEMAIL &lt;id&gt; SET_CAPTURE_MIC PORT="port_no" | FILE="FILE_LOCATION"</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; ALTER VOICEMAIL 189 SET_CAPTURE_MIC file="c:\test.wav"
&lt;- ALTER VOICEMAIL 189 SET_CAPTURE_MIC file="c:\test.wav"
</pre>
<p><strong>Version</strong><br>
Skype <span class="caps">API</span> version 3.5.0.202 (protocol 8)</p>
<p><a name="COMMAND_PING"></a></p>
<h4>Testing connections</h4>
<p>This command can be used to test whether connection between your 
application and Skype is still alive. This command is not meant to query
 online status of remote users.</p>
<p><strong>Syntax</strong><br>
<code>PING</code></p>
<p><strong>Response</strong><br>
If successful <code>PONG</code> is echoed back</p>
<p><strong>Version</strong><br>
Protocol 1<br>
*<br>
Note that from protocol 6 and onward, the <code>PONG</code> reply to <code>PING</code> is asynchronous.</p>
<p><a name="OBJECTS"></a></p>
<h3>Objects</h3>
<p>This section contains the Skype objects.</p>
<p><a name="OBJECT_USER"></a></p>
<h4><span class="caps">USER</span> object</h4>
<p><strong>NB!</strong> When you retrieve <code>USER</code> object records with <code>SEARCH USERS</code> command, the user profile data is guaranteed to be accessible with <code>GET USER &lt;user_id&gt; &lt;property_name&gt;</code> commands <strong>only</strong> until another <code>SEARCH</code> command is executed.  The reason for this is that big <code>SEARCH</code>
 commands can and often trigger Skype’s internal garbage collection 
routine that can clear out the data retreived by previous searches.</p>
<p>The user object has the following properties:</p>
<ul>
	<li><code>HANDLE</code> – username, for example: <code>USER pamela HANDLE pamela</code> .</li>
	<li><code>FULLNAME</code> – user’s full name, for example: <code>USER pamela FULLNAME Jane Doe</code> .</li>
	<li><code>BIRTHDAY</code> – user’s birth date in <span class="caps">YYYYMMDD</span> format, for example: <code>USER bitman BIRTHDAY 19780329</code> .</li>
	<li><code>SEX</code> – example: <code>USER pamela SEX UNKNOWN</code> . Values:
	<ul>
		<li><code>UNKNOWN</code> – user has not specified sex in personal profile.</li>
		<li><code>MALE</code></li>
		<li><code>FEMALE</code></li>
	</ul></li>
	<li><code>LANGUAGE</code> – name of language, for example: <code>USER mike LANGUAGE English</code> . In protocol 4 with the <span class="caps">ISO</span> 639 prefix, example: <code>USER mike LANGUAGE en English</code> .</li>
	<li><code>COUNTRY</code> – name of country, for example: <code>USER mike COUNTRY Estonia</code> . In protocol 4 with the <span class="caps">ISO</span> 3166 prefix, example: <code>USER mike COUNTRY ee Estonia</code> .</li>
	<li><code>PROVINCE</code> – example: <code>USER mike PROVINCE Harjumaa</code> .</li>
	<li><code>CITY</code> – example: <code>USER mike CITY Tallinn</code> .</li>
	<li><code>PHONE_HOME</code> – example: <code>USER mike PHONE_HOME 3721111111</code> .</li>
	<li><code>PHONE_OFFICE</code> – example: <code>USER mike PHONE_OFFICE 3721111111</code> .</li>
	<li><code>PHONE_MOBILE</code> – example: <code>USER mike PHONE_MOBILE 3721111111</code> .</li>
	<li><code>HOMEPAGE</code> – example: <code>USER mike HOMEPAGE http://www.joltid.com</code> .</li>
	<li><code>ABOUT</code> – example: <code>USER mike ABOUT I am a nice person</code> .</li>
	<li><code>HASCALLEQUIPMENT</code> – always returns <code>TRUE</code> . Example: <code>USER pamela HASCALLEQUIPMENT TRUE</code> .</li>
	<li><code>IS_VIDEO_CAPABLE</code> – possible values: <code>True</code> or <code>False</code></li>
	<li><code>IS_VOICEMAIL_CAPABLE</code> –  possible values: <code>True</code> or <code>False</code></li>
	<li><code>BUDDYSTATUS</code> – example: <code>USER pamela BUDDYSTATUS 2</code> . Possible <code>BUDDYSTATUS</code> values:
	<ul>
		<li><code>0</code> – never been in contact list.</li>
		<li><code>1</code> – deleted from contact list. (read-write)</li>
		<li><code>2</code> – pending authorisation. (read-write)</li>
		<li><code>3</code> – added to contact list.</li>
	</ul></li>
	<li><code>ISAUTHORIZED</code> – (read-write) is user authorized by current user? Example: <code>USER pamela ISAUTHORIZED TRUE</code> . Values:
	<ul>
		<li><code>TRUE</code></li>
		<li><code>FALSE</code></li>
	</ul></li>
	<li><code>ISBLOCKED</code> – (read-write) is user blocked by current user? Example: <code>USER spammer ISBLOCKED TRUE</code> . Values:
	<ul>
		<li><code>TRUE</code></li>
		<li><code>FALSE</code></li>
	</ul></li>
	<li><code>ONLINESTATUS</code> – user online status, for example: <code>USER mike ONLINESTATUS ONLINE</code> . Possible values:
	<ul>
		<li><code>UNKNOWN</code> – unknown user.</li>
		<li><code>OFFLINE</code> – user is offline (not connected). Will also 
be returned if current user is not authorized by other user to see 
his/her online status.</li>
		<li><code>ONLINE</code> – user is online.</li>
		<li><code>AWAY</code> – user is away (has been inactive for certain period).</li>
		<li><code>NA</code> – user is not available.</li>
		<li><code>DND</code> – user is in “Do not disturb” mode.</li>
	</ul></li>
	<li><code>SkypeOut</code> – user is in the SkypeOut contact list.</li>
	<li><code>SKYPEME</code> (Protocol 2)</li>
	<li><code>LASTONLINETIMESTAMP</code> – <span class="caps">UNIX</span> timestamp, available only for offline user. Example <code>USER mike LASTONLINETIMESTAMP 1078959579</code> .</li>
	<li><code>CAN_LEAVE_VM</code> – is it possible to send voicemail to user? Example: <code>USER test CAN_LEAVE_VM TRUE</code> . Possible values:
	<ul>
		<li><code>TRUE</code></li>
		<li><code>FALSE</code></li>
	</ul></li>
	<li><code>SPEEDDIAL</code> – (read-write) speeddial code assigned to user.</li>
	<li><code>RECEIVEDAUTHREQUEST</code> – text message for authorization request; available only when user asks for authorization.</li>
	<li><code>MOOD_TEXT</code> – mood text for user (mood text is only visible to authorised users; visible in Skype for Windows 2.0).</li>
	<li><code>RICH_MOOD_TEXT</code> – advanced version of user’s mood message. See <a href="#COMMAND_SET_PROFILE_RICH_MOOD_TEXT"><span class="caps">SET</span> <span class="caps">PROFILE</span> RICH_MOOD_TEXT</a> command for more information. Introduced in <span class="caps">API</span> version 3.0</li>
	<li><code>ALIASES &lt;text&gt;</code> – list of assigned aliases (aliases are only visible as a result of a direct match for alias search).</li>
	<li><code>TIMEZONE &lt;offset&gt;</code> – time offset from <span class="caps">GMT</span> in minutes; visible in Skype for Windows 2.0.</li>
	<li><code>IS_CF_ACTIVE</code> – whether the user has Call Forwarding activated or not. Possible values:
	<ul>
		<li><code>TRUE</code></li>
		<li><code>FALSE</code></li>
	</ul></li>
	<li><code>NROF_AUTHED_BUDDIES</code> – Stores the number of authorized contacts in the contact list.</li>
</ul>
<p>Most user properties are read-only. The following properties are read-write and can be modified with the <code>SET</code> command:</p>
<ul>
	<li><code>BUDDYSTATUS</code>
	<ul>
		<li>1 – delete from buddylist</li>
		<li>2 – add user into contactlist and ask for authorization: <code>SET USER echo123 BUDDYSTATUS 2 Please authorize me</code></li>
	</ul></li>
	<li><code>ISBLOCKED</code>
	<ul>
		<li><code>TRUE</code> – block user</li>
		<li><code>FALSE</code> – unblock user</li>
	</ul></li>
	<li><code>ISAUTHORIZED</code>
	<ul>
		<li><code>TRUE</code> – authorize user</li>
		<li><code>FALSE</code> – dismiss authorization for user</li>
	</ul></li>
	<li><code>SPEEDDIAL</code> – speeddial code assigned to user</li>
	<li><code>DISPLAYNAME</code> – By default this property is empty. If a value is assigned to this property with <code>SET &lt;skypename&gt; DISPLAYNAME &lt;value&gt;</code> then that value will be displayed in Skype UI instead of user’s <code>FULLNAME</code>.</li>
</ul>
<p><a name="OBJECT_PROFILE"></a></p>
<h4><span class="caps">PROFILE</span> object</h4>
<p>Use the <code>GET PROFILE</code> command to retrieve profile information. The <code>PROFILE</code> object has the following properties:</p>
<ul>
	<li><code>PSTN_BALANCE</code> – ( <strong>read only</strong> ) SkypeOut
 balance value. Note that the precision of profile balance value is 
currently fixed at 2 decimal places, regardless of currency or any other
 settings.</li>
	<li><code>PSTN_BALANCE_CURRENCY</code> – ( <strong>read only</strong> ) SkypeOut currency value</li>
	<li><code>FULLNAME</code> – text</li>
	<li><code>BIRTHDAY</code> – yyyymmdd, 0 is returned if not set; no partial birthday allowed</li>
	<li><code>SEX</code> – <code>MALE | FEMALE | UNKNOWN</code></li>
	<li><code>LANGUAGES</code> – [lang[ lang]*] — lang is a two letter <span class="caps">ISO</span> code (en, de, et)</li>
	<li><code>COUNTRY</code> – iso2 name, a two letter <span class="caps">ISO</span> code; name – country name</li>
	<li><code>IPCOUNTRY</code> – GeoIP location, country code in two letter <span class="caps">ISO</span> format</li>
	<li><code>PROVINCE</code> – text</li>
	<li><code>CITY</code> – text</li>
	<li><code>PHONE_HOME</code> – text</li>
	<li><code>PHONE_OFFICE</code> – text</li>
	<li><code>PHONE_MOBILE</code> – text</li>
	<li><code>HOMEPAGE</code> – text</li>
	<li><code>ABOUT</code> – text</li>
	<li><code>MOOD_TEXT</code> – user’s mood message (the plain text version).</li>
	<li><code>RICH_MOOD_TEXT</code> – advanced version of user’s mood message. See <a href="#COMMAND_SET_PROFILE_RICH_MOOD_TEXT"><span class="caps">SET</span> <span class="caps">PROFILE</span> RICH_MOOD_TEXT</a> command for more information. Introduced in <span class="caps">API</span> version 3.0</li>
	<li><code>TIMEZONE</code> – Offset is given in seconds, according to 
this formula: (24 + offset_from _GMT) * 3600. For example, value of this
 property for Estonia (GMT+2) would be 93600 (26*3600).</li>
	<li><code>CALL_APPLY_CF</code> – To enable/disable call forwarding – See <a href="#COMMAND_CALL_FORWARD">Call forwarding</a></li>
	<li><code>CALL_NOANSWER_TIMEOUT</code> – Time out on call – See <a href="#COMMAND_CALL_FORWARD">Call forwarding</a></li>
	<li><code>CALL_FORWARD_RULES</code> – See <a href="#COMMAND_CALL_FORWARD">Call forwarding</a></li>
	<li><code>CALL_SEND_TO_VM</code> – To enable/disable voicemail for forwarded calls – See <a href="#COMMAND_CALL_FORWARD">Call forwarding</a></li>
	<li><code>SMS_VALIDATED_NUMBERS</code> – A read-only property that 
contains a comma-separated list of phone numbers the user has registered
 for usage in reply-to field of <span class="caps">SMS</span> messages. See [#SMS_NUMBER_VALIDATION Setting mobile phone number on reply-to field in outgoing <span class="caps">SMS</span> messages] section for further information.</li>
</ul>
<p><a name="OBJECT_CALL"></a></p>
<h4><span class="caps">CALL</span> object</h4>
<p>The <code>CALL</code> object has the following properties:</p>
<ul>
	<li><code>TIMESTAMP</code> – time when call was placed (<span class="caps">UNIX</span> timestamp), for example <code>CALL 17 TIMESTAMP 1078958218</code></li>
	<li><code>PARTNER_HANDLE</code> – for example <code>CALL 17 PARTNER_HANDLE mike</code>. In case of SkypeOut and SkypeIn calls this property contains the <span class="caps">PSTN</span> number of remote party, prefixed by countrycode (+123456789).</li>
	<li><code>PARTNER_DISPNAME</code> – for example <code>CALL 17 PARTNER_DISPNAME Mike Mann</code></li>
	<li><code>TARGET_IDENTITY</code> – This property is set when you a) have a SkypeIn number and b) receive an incoming <span class="caps">PSTN</span>
 call. The value of call’s target identity property is then set to your 
own SkypeIn number. This property is not set if the incoming call is 
P2P. This property was introduced in <span class="caps">API</span> version 3.1</li>
	<li><code>CONF_ID</code> – if the <code>CONF_ID&gt;0</code> the call is a conference call, for example: <code>CALL 17 CONF_ID 0</code></li>
	<li><code>TYPE</code> – call type, for example: <code>CALL 17 TYPE OUTGOING_PSTN</code> . Possible values:
	<ul>
		<li><code>INCOMING_PSTN</code> – incoming call from <span class="caps">PSTN</span></li>
		<li><code>OUTGOING_PSTN</code> – outgoing call to <span class="caps">PSTN</span></li>
		<li><code>INCOMING_P2P</code> – incoming call from P2P</li>
		<li><code>OUTGOING_P2P</code> – outgoing call to P2P</li>
	</ul></li>
	<li><code>STATUS</code> – call status, for example: <code>CALL 17 STATUS FAILED</code> . Possible values:
	<ul>
		<li><code>UNPLACED</code> – call was never placed</li>
		<li><code>ROUTING</code> – call is currently being routed</li>
		<li><code>EARLYMEDIA</code> – with pstn it is possible that before a 
call is established, early media is played. For example it can be a 
calling tone or a waiting message such as all operators are busy.</li>
		<li><code>FAILED</code> – call failed – try to get a <code>FAILUREREASON</code> for more information.</li>
		<li><code>RINGING</code> – currently ringing</li>
		<li><code>INPROGRESS</code> – call is in progress</li>
		<li><code>ONHOLD</code> – call is placed on hold</li>
		<li><code>FINISHED</code> – call is finished</li>
		<li><code>MISSED</code> – call was missed</li>
		<li><code>REFUSED</code> – call was refused</li>
		<li><code>BUSY</code> – destination was busy</li>
		<li><code>CANCELLED</code> (Protocol 2)</li>
		<li><code>TRANSFERRING</code> – Refer to <a href="#COMMAND_ALTER_CALL_TRANSFER"><span class="caps">ALTER</span> <span class="caps">CALL</span> <span class="caps">TRANSFER</span></a> command. Added in protocol 7 (<span class="caps">API</span> version 3.0)</li>
		<li><code>TRANSFERRED</code> – Refer to <a href="#COMMAND_ALTER_CALL_TRANSFER"><span class="caps">ALTER</span> <span class="caps">CALL</span> <span class="caps">TRANSFER</span></a> command. Added in protocol 7 (<span class="caps">API</span> version 3.0)</li>
		<li><code>VM_BUFFERING_GREETING</code> – voicemail greeting is being downloaded</li>
		<li><code>VM_PLAYING_GREETING</code> – voicemail greeting is being played</li>
		<li><code>VM_RECORDING</code> – voicemail is being recorded</li>
		<li><code>VM_UPLOADING</code> – voicemail recording is finished and uploaded into server</li>
		<li><code>VM_SENT</code> – voicemail has successfully been sent</li>
		<li><code>VM_CANCELLED</code> – leaving voicemail has been cancelled</li>
		<li><code>VM_FAILED</code> – leaving voicemail failed; check <code>FAILUREREASON</code></li>
		<li><code>WAITING_REDIAL_COMMAND</code> – This status is set when your outgoing call to <span class="caps">PSTN</span> gets rejected by remote party. This state was added in version 3.5 (protocol 8).</li>
		<li><code>REDIAL_PENDING</code> – This status is set when you press 
redial button on the Call Phones tab of the Skype interface. This state 
was added in version 3.5 (protocol 8).</li>
	</ul></li>
	<li><code>VIDEO_STATUS</code> – Commands <a href="#COMMAND_ALTER_CALL_VIDEO_SEND"><span class="caps">ALTER</span> <span class="caps">CALL</span> VIDEO_SEND</a> and <a href="#COMMAND_ALTER_CALL_VIDEO_"><span class="caps">RECEIVE</span> <span class="caps">ALTER</span> <span class="caps">CALL</span> VIDEO_ <span class="caps">RECEIVE</span></a> can be used to change call video status. Possible values of this property are:
	<ul>
		<li><code>VIDEO_NONE</code></li>
		<li><code>VIDEO_SEND_ENABLED</code></li>
		<li><code>VIDEO_RECV_ENABLED</code></li>
		<li><code>VIDEO_BOTH_ENABLED</code></li>
	</ul></li>
	<li><code>VIDEO_SEND_STATUS</code> and <code>VIDEO_RECEIVE_STATUS</code> – possible values of this property are:
	<ul>
		<li><code>NOT_AVAILABLE</code> – the client does not have video capability because video is disabled or a webcam is unplugged).</li>
		<li><code>AVAILABLE</code> – the client is video-capable but the video is not running (can occur during a manual send).</li>
		<li><code>STARTING</code> – the video is sending but is not yet running at full speed.</li>
		<li><code>REJECTED</code> – the receiver rejects the video feed (can occur during a manual receive).</li>
		<li><code>RUNNING</code> – the video is actively running.</li>
		<li><code>STOPPING</code> – the active video is in the process of stopping but has not halted yet.</li>
		<li><code>PAUSED</code> – the video call is placed on hold.</li>
	</ul></li>
	<li><code>FAILUREREASON</code> – example: <code>CALL 17 FAILUREREASON 1</code> (numeric).</li>
	<li><code>SUBJECT</code> – not used.</li>
	<li><code>PSTN_NUMBER</code> – example: <code>CALL 17 PSTN_NUMBER 372123123</code> .</li>
	<li><code>DURATION</code> – example: <code>CALL 17 DURATION 0</code> .</li>
	<li><code>PSTN_STATUS</code> – error string from gateway, in the case of a <span class="caps">PSTN</span> call, for example: <code>CALL 26 PSTN_STATUS 6500 PSTN connection creation timeout</code> .</li>
	<li><code>CONF_PARTICIPANTS_COUNT</code> – number of non-hosts in the case of a conference call. Possible values are:
	<ul>
		<li><code>0</code> – call is not a conference. For the host, <code>CONF_PARTICIPANTS_COUNT</code> is always 0.</li>
		<li><code>1</code> – call is a former conference.</li>
		<li><code>2, 3, 4</code> – call is a conference. Note that from 2.5 and upwards, Skype <span class="caps">API</span> manages conference participation in a slightly different manner. In newer versions, after the call is finished, the <code>CONF_PARTICIPANTS_COUNT</code> reports highest number of participants the call had at any given time.</li>
	</ul></li>
	<li><code>CONF_PARTICIPANT n</code> – the username of the nth 
participant in a conference call, the call type and status and the 
displayname of participants who are not the host. For example: <code>CALL 59 CONF_PARTICIPANT 1 echo123 INCOMING_P2P INPROGRESS Echo Test Service</code> .</li>
	<li><code>VM_DURATION</code></li>
	<li><code>VM_ALLOWED_DURATION</code> – maximum duration in seconds allowed to leave voicemail</li>
	<li><code>RATE</code> – expressed as cost per minute (added in protocol 6).</li>
	<li><code>RATE_CURRENCY</code> – <span class="caps">EUR</span>|<span class="caps">USD</span>.. This property gets populated from currency selected in Skype account details – <code>PSTN_BALANCE_CURRENCY</code> property of the <code>PROFILE</code> object. However, the value of <code>PSTN_BALANCE_CURRENCY</code> can change in time (added in protocol 6).</li>
	<li><code>RATE_PRECISION</code> – the number of times to divide <code>RATE</code> by 10 to get the full currency unit. For example, a <code>RATE</code> of 1234 with <code>RATE_PRECISION</code> of 2 amounts to 12.34 (added in protocol 6).</li>
	<li><code>INPUT</code> – New in <span class="caps">API</span> version 2.6 Refer to <a href="#COMMAND_VOICE_STREAMS">Voice Streams</a> section for more information. Can have following values:
	<ul>
		<li><code>SOUNDCARD="default"</code> – default is currently the only acceptable value.</li>
		<li><code>PORT="port_no"</code> – the ID of the audio port (1..65535)</li>
		<li><code>FILE="filename.wav"</code> – the path and name of the audio file.</li>
	</ul></li>
	<li><code>OUTPUT</code> – can have all the same values as <code>INPUT</code> property. Refer to <a href="#COMMAND_VOICE_STREAMS">Voice Streams</a> section for more information. New in <span class="caps">API</span> version 2.6</li>
	<li><code>CAPTURE_MIC</code> – can have all the same values as <code>INPUT</code> and <code>OUTPUT</code> properties. Refer to <a href="#COMMAND_VOICE_STREAMS">Voice Streams</a> section for more information. New in <span class="caps">API</span> version 2.6</li>
	<li><code>VAA_INPUT_STATUS</code> – true|false, indicates if voice input is enabled. New in <span class="caps">API</span> version 2.6</li>
	<li><code>FORWARDED_BY</code> – Contains identity of the user who 
forwarded a call. If the user who forwarded the call could not be 
identified then this property will be set to “?”. New in <span class="caps">API</span> version 2.6</li>
	<li><code>TRANSFER_ACTIVE</code> – Refer to <a href="#COMMAND_ALTER_CALL_TRANSFER"><span class="caps">ALTER</span> <span class="caps">CALL</span> <span class="caps">TRANSFER</span></a> command. Added in protocol 7 (<span class="caps">API</span> version 3.0)</li>
	<li><code>TRANSFER_STATUS</code> – Refer to <a href="#COMMAND_ALTER_CALL_TRANSFER"><span class="caps">ALTER</span> <span class="caps">CALL</span> <span class="caps">TRANSFER</span></a> command. Added in protocol 7 (<span class="caps">API</span> version 3.0)</li>
	<li><code>TRANSFERRED_BY</code> – Refer to <a href="#COMMAND_ALTER_CALL_TRANSFER"><span class="caps">ALTER</span> <span class="caps">CALL</span> <span class="caps">TRANSFER</span></a> command. Added in protocol 7 (<span class="caps">API</span> version 3.0)</li>
	<li><code>TRANSFERRED_TO</code> – Refer to <a href="#COMMAND_ALTER_CALL_TRANSFER"><span class="caps">ALTER</span> <span class="caps">CALL</span> <span class="caps">TRANSFER</span></a> command. Added in protocol 7 (<span class="caps">API</span> version 3.0)</li>
</ul>
<p><strong>Notes</strong></p>
<ul>
	<li>Status values for voicemails ( <code>VM_xxx</code> ) and <code>VM_DURATION/VM_ALLOWED_DURATION</code> apply to calls which are forwarded into voicemail. This feature was introduced in protocol 5.<br>
Most call properties are read-only. The following properties are read-write and can be modified with the <code>SET</code> command:</li>
</ul>
<ul>
	<li><code>STATUS</code> – for call control. Possible values:
	<ul>
		<li><code>ONHOLD</code> – hold call</li>
		<li><code>INPROGRESS</code> – answer or resume call</li>
		<li><code>FINISHED</code> – hang up call</li>
	</ul></li>
	<li><code>SEEN</code> – sets call as seen, so that a missed call is seen and can be removed from the missed calls list.</li>
	<li><code>DTMF</code> – sends <code>VALUE</code> as <span class="caps">DTMF</span>. Permitted symbols in <code>VALUE</code> are: {0..9,#,*}.</li>
	<li><code>JOIN_CONFERENCE</code> – joins call with another call into conference. <code>VALUE</code> is the ID of another call.</li>
</ul>
<p><a name="OBJECT_MESSAGE"></a></p>
<h4><span class="caps">MESSAGE</span> object</h4>
<p><strong>Version</strong><br>
Protocol 1, <strong>deprecated in protocol 3</strong> and replaced by the <a href="#OBJECT_CHATMESSAGE"><span class="caps">CHATMESSAGE</span></a> object.</p>
<p><strong>Properties</strong></p>
<ul>
	<li><code>TIMESTAMP</code> – time when the message was sent (<span class="caps">UNIX</span> timestamp), for example: <code>MESSAGE 21 TIMESTAMP 1078958218</code></li>
	<li><code>PARTNER_HANDLE</code> – for example <code>MESSAGE 21 PARTNER_HANDLE mike</code></li>
	<li><code>PARTNER_DISPNAME</code> – for example <code>MESSAGE 21 PARTNER_DISPNAME Mike Mann</code></li>
	<li><code>CONF_ID</code> – not used.</li>
	<li><code>TYPE</code> – message type, for example <code>MESSAGE 21 TYPE TEXT</code> . Possible <code>TYPE</code> values:
	<ul>
		<li><code>AUTHREQUEST</code> – authorization request</li>
		<li><code>TEXT</code> – IM or topic set</li>
		<li><code>CONTACTS</code> – contacts data</li>
		<li><code>UNKNOWN</code> – other</li>
	</ul></li>
	<li><code>STATUS</code> – message status, for example <code>MESSAGE 21 STATUS QUEUED</code> . Possible values:
	<ul>
		<li><code>SENDING</code> – message is being sent</li>
		<li><code>SENT</code> – message was sent</li>
		<li><code>FAILED</code> – message sending failed. Try to get a <code>FAILUREREASON</code> for more information.</li>
		<li><code>RECEIVED</code> – message has been received</li>
		<li><code>READ</code> – message has been read</li>
		<li><code>IGNORED</code> – message was ignored</li>
		<li><code>QUEUED</code> – message is queued</li>
	</ul></li>
	<li><code>FAILUREREASON</code> – for example <code>MESSAGE 21 FAILUREREASON 1</code> (numeric).</li>
	<li><code>BODY</code> – message body, for example <code>MESSAGE 21 BODY Hi, what's up?</code><br>
Most message properties are read-only. The following property is read-write and can be modified with the <code>SET</code> command:</li>
	<li><code>SEEN</code> – the message is seen and will be removed from 
missed messages list. The UI sets this automatically if auto-popup is 
enabled for the user.</li>
</ul>
<p><a name="OBJECT_CHAT"></a></p>
<h4><span class="caps">CHAT</span> object</h4>
<p><strong>Version</strong><br>
Protocol 3 (updated in protocol 7)</p>
<p><strong>Properties</strong></p>
<ul>
	<li><code>NAME</code> – chat ID, for example <code>CHAT #test_l/$6a072ce5537c4044 NAME #test_l/$6a072ce5537c4044</code></li>
	<li><code>TIMESTAMP</code> – time when chat was created, for example <code>CHAT #test_l/$6a072ce5537c4044 TIMESTAMP 1078958218</code></li>
	<li><code>ADDER</code> – user who added the current user to chat, for example <code>CHAT 1078958218 ADDER k6rberebane</code></li>
	<li><code>STATUS</code> – chat status, for example <code>CHAT #test_l/$6a072ce5537c4044 STATUS MULTI_SUBSCRIBED</code> . Possible values:
	<ul>
		<li><code>LEGACY_DIALOG</code> – old style IM</li>
		<li><code>DIALOG</code> – 1:1 chat.</li>
		<li><code>MULTI_SUBSCRIBED</code> – participant in chat</li>
		<li><code>UNSUBSCRIBED</code> – left chat</li>
	</ul></li>
	<li><code>POSTERS</code> – members who have posted messages, for example <code>CHAT #test_l/$6a072ce5537c4044 POSTERS k6rberebane test_3</code></li>
	<li><code>MEMBERS</code> – all users who have been there, for example <code>CHAT #test_l/$6a072ce5537c4044 MEMBERS k6rberebane test test_2 test_3</code></li>
	<li><code>TOPIC</code> – chat topic. Example: <code>CHAT #test_l/$6a072ce5537c4044 TOPIC API testimine</code></li>
	<li><code>TOPICXML</code> – set when a chat topic contains <span class="caps">XML</span> formatting elements (topic was changed with <a href="#COMMAND_ALTER_CHAT_SETTOPICXML"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETTOPICXML</span></a> command) This property works in parallel with <code>TOPIC</code> property – when <code>TOPICXML</code> is set, the value is stripped of <span class="caps">XML</span> tags and updated in <code>TOPIC</code>.</li>
	<li><code>CHATMESSAGES</code> – all messages IDs in this chat, for example <code>CHAT #test_l/$6a072ce5537c4044 CHATMESSAGES 34, 35, 36, 38, 39</code></li>
	<li><code>ACTIVEMEMBERS</code> – members who have stayed in chat, for example <code>CHAT #test_l/$6a072ce5537c4044 ACTIVEMEMBERS k6rberebane test_2 test_3</code></li>
	<li><code>FRIENDLYNAME</code> – name shown in chat window title, for example <code>CHAT #test_l/$6a072ce5537c4044 FRIENDLYNAME Test Test XX | tere ise ka</code></li>
	<li><code>CHATMESSAGES</code> – list of chatmessage identifiers</li>
	<li><code>RECENTCHATMESSAGES</code> – list of missed/recent chatmessage identifiers</li>
	<li><code>BOOKMARKED</code> – <code>TRUE|FALSE</code> (added in protocol version 6 / Skype <span class="caps">API</span> version 2.5)</li>
</ul>
<p>Following properties were added to <code>CHAT</code> object in protocol 7 (<span class="caps">API</span> version 3.0):</p>
<ul>
	<li><code>MEMBEROBJECTS</code> – contains the list of <span class="caps">CHATMEMBER</span> object IDs. Refer to
	<ul>
		<li><a href="#OBJECT_CHATMEMBER"><span class="caps">CHATMEMBER</span> object</a> for list of properties</li>
		<li><a href="#COMMAND_GET_CHATMEMBER"><span class="caps">GET</span> <span class="caps">CHATMEMBER</span> command</a> on how to access those properties.</li>
		<li><a href="#COMMAND_GET_CHAT_MEMBEROBJECTS"><span class="caps">GET</span> <span class="caps">CHAT</span> <span class="caps">MEMBEROBJECTS</span> command</a> on how to get a list of chatmember object IDs for a given chat.</li>
	</ul></li>
	<li><code>PASSWORDHINT</code> – contains password hint text for the chat object. Refer to <a href="#COMMAND_ALTER_CHAT_SETPASSWORD"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETPASSWORD</span> command</a> on how to set chat passwords.</li>
	<li><code>GUIDELINES</code> – contains chat guidelines text. Refer to <a href="#COMMAND_ALTER_CHAT_SETGUIDELINES"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETGUIDELINES</span> command</a> on how to set chat guidelines.</li>
	<li><code>OPTIONS</code> – bitmap of chat options. Refer to <a href="#COMMAND_ALTER_CHAT_SETOPTIONS"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETOPTIONS</span> command</a> for more information.</li>
	<li><code>DESCRIPTION</code> – currently used only for hidden synchronization channels for managing shared groups.</li>
	<li><code>DIALOG_PARTNER</code> – the handle of the dialog partner for dialog type chats (chats with two participants).</li>
	<li><code>ACTIVITY_TIMESTAMP</code> – the <span class="caps">UNIX</span> timestamp of last activity.</li>
	<li><code>TYPE</code> – chat type with following possible values:
	<ul>
		<li><code>LEGACY_DIALOG</code> – no longer supported.</li>
		<li><code>DIALOG</code> – a chat with only two participants.</li>
		<li><code>MULTICHAT</code> – a chat with more than two participants.</li>
		<li><code>SHAREDGROUP</code> – a chat used for synchronization of shared contact groups.</li>
		<li><code>LEGACY_UNSUBSCRIBED</code> – no longer supported.</li>
	</ul></li>
	<li><code>MYSTATUS</code> – user’s current status in chat. Possible values are:
	<ul>
		<li><code>CONNECTING</code> – status set when the system is trying to connect to the chat.</li>
		<li><code>WAITING_REMOTE_ACCEPT</code> – set when a new user joins a public chat. When the chat has “participants need authorization to read messages” option, the <code>MYSTATUS</code>
 property of a new applicant will remain in this status until he gets 
accepted or rejected by a chat administrator. Otherwise user’s <code>MYSTATUS</code> will automatically change to either <code>LISTENER</code> or <code>USER</code>, depending on public chat options.</li>
		<li><code>ACCEPT_REQUIRED</code> – this status is used for shared contact groups functionality.</li>
		<li><code>PASSWORD_REQUIRED</code> – status set when the system is waiting for user to supply the chat password.</li>
		<li><code>SUBSCRIBED</code> – set when user joins the chat.</li>
		<li><code>UNSUBSCRIBED</code> – set when user leaves the chat or chat ends.</li>
		<li><code>CHAT_DISBANDED</code> – status set when the chat is disbanded.</li>
		<li><code>QUEUED_BECAUSE_CHAT_IS_FULL</code> – currently the maximum number of people in the same chat is 100.</li>
		<li><code>APPLICATION_DENIED</code> – set when public chat administrator has rejected user from joining.</li>
		<li><code>KICKED</code> – status set when the user has been kicked 
from the chat. Note that it is possible for the user to re-join the chat
 after being kicked.</li>
		<li><code>BANNED</code> – status set when the user has been banned from the chat.</li>
		<li><code>RETRY_CONNECTING</code> – status set when connect to chat failed and system retries to establish connection.</li>
	</ul></li>
	<li><code>MYROLE</code> – user’s privilege level in chat Refer to <a href="#CHAT_ROLES"><span class="caps">CHAT</span> <span class="caps">ROLES</span> section</a> for more information.</li>
	<li><code>BLOB</code> – for public chats, this property contains 
encoded list of chat join-points. Contents of this field is used in 
public chat URLs.</li>
	<li><code>APPLICANTS</code> – this property contains list of skypenames
 of people who have applied to join the chat but have not yet been 
accepted by a public chat administrator. Users only become applicants 
when the chat has <code>JOINERS_BECOME_APPLICANTS</code> option. Refer to <a href="#COMMAND_ALTER_CHAT_SETOPTIONS"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETOPTIONS</span> command</a> for more information.</li>
</ul>
<p><a name="OBJECT_CHATMEMBER"></a></p>
<h4><span class="caps">CHATMEMBER</span> object</h4>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><strong>Properties:</strong></p>
<ul>
	<li><code>CHATNAME</code> – <chat_id></chat_id></li>
	<li><code>IDENTITY</code> – <user_id></user_id></li>
	<li><code>ROLE</code> – <code>CREATOR|MASTER|HELPER|USER|LISTENER|APPLICANT</code> Refer to <a href="#CHAT_ROLES">chat roles</a> for more information.</li>
	<li><code>IS_ACTIVE</code> – <code>TRUE|FALSE</code>
	<ul>
		<li><code>TRUE</code> – indicates that the chat member has joined the chat.</li>
		<li><code>FALSE</code> indicates that the member has been added to the
 chat but has not yet acknowledged it. Normally occurs when the member 
who was added to a chat was offline at the time. Once <code>IS_ACTIVE</code> becomes <span class="caps">TRUE</span>, it will remain true.</li>
	</ul></li>
</ul>
<p>Refer to <a href="#COMMAND_GET_CHATMEMBER"><span class="caps">GET</span> <span class="caps">CHATMEMBER</span> command</a> on how to access <code>CHATMEMBER</code> properties.</p>
<p><a name="OBJECT_CHATMESSAGE"></a></p>
<h4><span class="caps">CHATMESSAGE</span> object</h4>
<p><strong>Version</strong><br>
Protocol 3. Supersedes the <code>MESSAGE</code> object. Updated in protocol 7. Note that when your application connects to Skype, “<span class="caps">PROTOCOL</span>
 7” command must be sent to Skype before your client can recognize new 
message types added in protocol 7. Connecting with default protocol 
(protocol 1) will cause new message types being reported as <code>UNKNOWN</code>.</p>
<p><strong>Properties</strong></p>
<ul>
	<li><code>TIMESTAMP</code> – time when message was sent (<span class="caps">UNIX</span> timestamp), for example <code>MESSAGE 21 TIMESTAMP 1078958218</code></li>
	<li><code>PARTNER_HANDLE</code> – <strong>NB!</strong> This property is deprecated since <span class="caps">API</span> version 3.0 and replaced with <code>FROM_HANDLE</code>.</li>
	<li><code>PARTNER_DISPNAME</code> – <strong>NB!</strong> This property is deprecated since <span class="caps">API</span> version 3.0 and replaced with <code>FROM_DISPNAME</code>.</li>
	<li><code>FROM_HANDLE</code> – skypename of the originator of the chatmessage.</li>
	<li><code>FROM_DISPNAME</code> – displayed name of the originator of the chatmessage.</li>
	<li><code>TYPE</code> – message type, for example <code>MESSAGE 21 TYPE TEXT</code> . Possible values:
	<ul>
		<li><code>SETTOPIC</code> – change of chat topic</li>
		<li><code>SAID</code> – IM</li>
		<li><code>ADDEDMEMBERS</code> – invited someone to chat</li>
		<li><code>SAWMEMBERS</code> – chat participant has seen other members</li>
		<li><code>CREATEDCHATWITH</code> – chat to multiple people is created</li>
		<li><code>LEFT</code> – someone left chat; can also be a notification if somebody cannot be added to chat</li>
		<li><code>POSTEDCONTACTS</code> – system message that is sent or received when one user sends contacts to another. Added in protocol 7.</li>
		<li><code>GAP_IN_CHAT</code> – messages of this type are generated 
locally, during synchronization, when a user enters a chat and it 
becomes apparent that it is impossible to update user’s chat history 
completely. Chat history is kept only up to maximum of 400 messages or 2
 weeks. When a user has been offline past that limit, <code>GAP_IN_CHAT</code> notification is generated. Added in protocol 7.</li>
		<li><code>SETROLE</code> – system messages that are sent when a chat member gets promoted or demoted. Refer to <a href="#COMMAND_ALTER_CHATMEMBER_SETROLETO"><span class="caps">ALTER</span> <span class="caps">CHATMEMBER</span> <span class="caps">SETROLETO</span> command</a> for more info on how to change chat member roles. Added in protocol 7.</li>
		<li><code>KICKED</code> – system messages that are sent when a chat member gets kicked. Refer to <a href="#COMMAND_ALTER_CHAT_KICK"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">KICK</span> command</a> for more information. Added in protocol 7.</li>
		<li><code>KICKBANNED</code> – system messages that are sent when a chat member gets banned. Refer to <a href="#COMMAND_ALTER_CHAT_KICKBAN"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">KICKBAN</span> command</a> for more information. Added in protocol 7.</li>
		<li><code>SETOPTIONS</code> – system messages that are sent when chat options are changed. Refer to <a href="#COMMAND_ALTER_CHAT_SETOPTIONS"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETOPTIONS</span> command</a> for more information. Added in protocol 7.</li>
		<li><code>SETPICTURE</code> – system messages that are sent when a chat member has changed the public chat topic picture. Added in protocol 7.</li>
		<li><code>SETGUIDELINES</code> – system messages that are sent when chat guidelines are changed. Refer to <a href="#COMMAND_ALTER_CHAT_SETGUIDELINES"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETGUIDELINES</span> command</a> for more information. Added in protocol 7.</li>
		<li><code>JOINEDASAPPLICANT</code> – notification message that gets sent in a public chat with <code>JOINERS_BECOME_APPLICANTS</code> options, when a new user joins the chat. See <a href="#COMMAND_ALTER_CHAT_SETOPTIONS"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETOPTIONS</span> command</a> for more information on chat options. Added in protocol 7.</li>
		<li><code>UNKNOWN</code> – unknown message type, possibly due to connecting to Skype with older protocol.</li>
	</ul></li>
	<li><code>STATUS</code> – message status, for example <code>MESSAGE 21 STATUS QUEUED</code> . Possible values:
	<ul>
		<li><code>SENDING</code> – message is being sent</li>
		<li><code>SENT</code> – message was sent</li>
		<li><code>RECEIVED</code> – message has been received</li>
		<li><code>READ</code> – message has been read</li>
	</ul></li>
	<li><code>LEAVEREASON</code> – used with <code>LEFT</code> type message, for example <code>CHATMESSAGE 21 LEAVEREASON UNSUBSCRIBE</code> . Possible values:
	<ul>
		<li><code>USER_NOT_FOUND</code> – user was not found</li>
		<li><code>USER_INCAPABLE</code> – user has an older Skype version and cannot join multichat</li>
		<li><code>ADDER_MUST_BE_FRIEND</code> – recipient accepts messages from contacts only and sender is not in his/her contact list</li>
		<li><code>ADDED_MUST_BE_AUTHORIZED</code> – recipient accepts messages from authorized users only and sender is not authorized</li>
		<li><code>UNSUBSCRIBE</code> – participant left chat</li>
	</ul></li>
	<li><code>CHATNAME</code> – chat that includes the message, for example <code>#test_3/$b17eb511457e9d20</code></li>
	<li><code>USERS</code> – people added to chat</li>
	<li><code>IS_EDITABLE</code> – <code>TRUE|FALSE</code> Refer to <a href="#COMMAND_SET_CHATMESSAGE_BODY"><span class="caps">SET</span> <span class="caps">CHATMESSAGE</span> <span class="caps">BODY</span> command</a> for more information on how to edit chat message text (<code>BODY</code>) and on what conditions is such editing permitted. This property was introduced in <span class="caps">API</span> version 3.0</li>
	<li><code>EDITED_BY</code> – identity of the last user who edited the message. New in <span class="caps">API</span> version 3.0</li>
	<li><code>EDITED_TIMESTAMP</code> – <span class="caps">UNIX</span> timestamp of the last edit. New in <span class="caps">API</span> version 3.0</li>
	<li><code>OPTIONS</code> – numeric field that contains chat options 
bitmap in system messages that get sent out when a change is made to 
chat options (messages where <code>TYPE</code> is <code>SETOPTIONS</code>). In normal messages the value of this field is 0. Refer to <a href="#COMMAND_ALTER_CHAT_SETOPTIONS"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETOPTIONS</span> command</a> for more information.</li>
	<li><code>ROLE</code> – used in system messages that get sent when a public chat administrator has promoted or demoted a chat member. The <code>TYPE</code> property of such messages is set to <code>SETROLE</code>.
 In these messages the value of this field is set to the new assigned 
role of the promoted or demoted chat member. In normal messages the 
value of this property is set to <code>UNKNOWN</code>. Refer to <a href="#CHAT_ROLES"><span class="caps">CHAT</span> <span class="caps">ROLES</span> section</a> for a list of different chat roles and <a href="#COMMAND_ALTER_CHATMEMBER_SETROLETO"><span class="caps">ALTER</span> <span class="caps">CHATMEMBER</span> <span class="caps">SETROLETO</span> command</a> for how chat roles can be changed. New in <span class="caps">API</span> version 3.0</li>
</ul>
<p>Most chatmessage properties are read-only. The following property is read-write and can be modified with the <code>SET</code> command:</p>
<ul>
	<li><code>SEEN</code> – mark missed chatmessage as seen and removes chat from missed events.</li>
	<li><code>BODY</code> – message text. Note that this property was read-only prior to <span class="caps">API</span> version 3.0</li>
</ul>
<p><a name="OBJECT_VOICEMAIL"></a></p>
<h4><span class="caps">VOICEMAIL</span> object</h4>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><strong>Properties</strong></p>
<ul>
	<li><code>TYPE</code> – type of voicemail object
	<ul>
		<li><code>INCOMING</code> – voicemail received from partner</li>
		<li><code>OUTGOING</code> – voicemail sent to partner</li>
		<li><code>DEFAULT_GREETING</code> – Skype default greeting from partner</li>
		<li><code>CUSTOM_GREETING</code> – partner’s recorded custom greeting</li>
		<li><code>UNKNOWN</code></li>
	</ul></li>
	<li><code>PARTNER_HANDLE</code> – username for voicemail sender (for incoming) or recipient (for outgoing)</li>
	<li><code>PARTNER_DISPNAME</code> – user displayname for partner</li>
	<li><code>STATUS</code> – current status of voicemail object
	<ul>
		<li><code>NOTDOWNLOADED</code> – voicemail is stored on server (has not been downloaded yet)</li>
		<li><code>DOWNLOADING</code> – downloading from server to local machine</li>
		<li><code>UNPLAYED</code> – voicemail has been downloaded but not played back yet</li>
		<li><code>BUFFERING</code> – buffering for playback</li>
		<li><code>PLAYING</code> – currently played back</li>
		<li><code>PLAYED</code> – voicemail has been played back</li>
		<li><code>BLANK</code> – intermediate status when new object is created but recording has not begun</li>
		<li><code>RECORDING</code> – voicemail currently being recorded</li>
		<li><code>RECORDED</code> – voicemail recorded but not yet uploaded to the server</li>
		<li><code>UPLOADING</code> – voicemail object is currently being uploaded to server</li>
		<li><code>UPLOADED</code> – upload to server finished but not yet deleted; object is also locally stored</li>
		<li><code>DELETING</code> – pending delete</li>
		<li><code>FAILED</code> – downloading voicemail/greeting failed</li>
		<li><code>UNKNOWN</code></li>
	</ul></li>
	<li><code>FAILUREREASON</code> possible values
	<ul>
		<li><code>MISC_ERROR</code></li>
		<li><code>CONNECT_ERROR</code></li>
		<li><code>NO_VOICEMAIL_PRIVILEGE</code></li>
		<li><code>NO_SUCH_VOICEMAIL</code></li>
		<li><code>FILE_READ_ERROR</code></li>
		<li><code>FILE_WRITE_ERROR</code></li>
		<li><code>RECORDING_ERROR</code></li>
		<li><code>PLAYBACK_ERROR</code></li>
		<li><code>UNKNOWN</code></li>
	</ul></li>
	<li><code>SUBJECT</code> – not used</li>
	<li><code>TIMESTAMP</code></li>
	<li><code>DURATION</code> – actual voicemail duration in seconds</li>
	<li><code>ALLOWED_DURATION</code> – maximum voicemail duration in seconds allowed to leave to partner</li>
	<li><code>INPUT</code> – New in <span class="caps">API</span> version 3.5.0.202 Can have following values:
	<ul>
		<li><code>SOUNDCARD="default"</code> – default is currently the only acceptable value.</li>
		<li><code>PORT="port_no"</code> – the ID of the audio port (1..65535)</li>
		<li><code>FILE="filename.wav"</code> – the path and name of the audio file.</li>
	</ul></li>
	<li><code>OUTPUT</code> – can have all the same values as <code>INPUT</code> property. New in <span class="caps">API</span> version 3.5.0.202</li>
	<li><code>CAPTURE_MIC</code> – can have all the same values as <code>INPUT</code> and <code>OUTPUT</code> properties. New in <span class="caps">API</span> version 3.5.0.202</li>
</ul>
<p><a name="OBJECT_SMS"></a></p>
<h4><span class="caps">SMS</span> object</h4>
<p><strong>Version</strong><br>
Added in <span class="caps">API</span> version 2.5</p>
<p>Refer to <a href="#MANAGING_SMS_MESSAGES">Sending and managing <span class="caps">SMS</span> messages</a> section for additional info.</p>
<p><strong>Properties</strong></p>
<ul>
	<li><code>BODY</code> – <span class="caps">SMS</span> message text, read-write access</li>
	<li><code>TYPE</code> – Possible values:
	<ul>
		<li><code>INCOMING</code> – received messages. Note that as sending <span class="caps">SMS</span> messages to Skype numbers is currently not supported, this status is here mainly for future compatibility.</li>
		<li><code>OUTGOING</code> – sent messages</li>
		<li><code>CONFIRMATION_CODE_REQUEST</code> – [#SMS_NUMBER_VALIDATION used for registering user’s Skype ID as a reply-to number]</li>
		<li><code>CONFIRMATION_CODE_SUBMIT</code> – [#SMS_NUMBER_VALIDATION used for registering user’s Skype ID as a reply-to number]</li>
		<li><code>UNKNOWN</code> – for unknown reasons, the message type is unknown</li>
	</ul></li>
</ul>
<ul>
	<li><code>STATUS</code> – Possible values:
	<ul>
		<li><code>RECEIVED</code> – the message has been received (but not tagged as read)</li>
		<li><code>READ</code> – the message has been tagged as read</li>
		<li><code>COMPOSING</code> – the message has been created but not yet sent</li>
		<li><code>SENDING_TO_SERVER</code> – the message is in process of being sent to server</li>
		<li><code>SENT_TO_SERVER</code> – the message has been sent to server</li>
		<li><code>DELIVERED</code> – server has confirmed that the message is sent out to recepient</li>
		<li><code>SOME_TARGETS_FAILED</code> – server reports failure to deliver the message to one of the recepients within 24h</li>
		<li><code>FAILED</code> – the message has failed, possible reason may be found in <code>FAILUREREASON</code> property</li>
		<li><code>UNKNOWN</code> – message status is unknown</li>
	</ul></li>
	<li><code>FAILUREREASON</code>
	<ul>
		<li><code>MISC_ERROR</code> – indicates failure to supply a meaningful error message</li>
		<li><code>SERVER_CONNECT_FAILED</code> – unable to connect to <span class="caps">SMS</span> server</li>
		<li><code>NO_SMS_CAPABILITY</code> – recepient is unable to receive <span class="caps">SMS</span> messages</li>
		<li><code>INSUFFICIENT_FUNDS</code> – insufficient Skype Credit to send an <span class="caps">SMS</span> message</li>
		<li><code>INVALID_CONFIRMATION_CODE</code> – set when an erroneous code was submitted in a <a href="#SMS_NUMBER_VALIDATION">CONFIRMATION_CODE_SUBMIT message</a></li>
		<li><code>USER_BLOCKED</code> – user is blocked from the server</li>
		<li><code>IP_BLOCKED</code> – user’s IP is blocked from the server</li>
		<li><code>NODE_BLOCKED</code> – user’s p2p network node has been blocked from the server</li>
		<li><code>UNKNOWN</code> – default failure code</li>
		<li><code>NO_SENDERID_CAPABILITY</code> – Set when a <code>CONFIRMATION_CODE_REQUEST</code> <span class="caps">SMS</span> message is sent with a mobile phone number containing country code of either <span class="caps">USA</span>,
 Taiwan or China. Setting reply-to number from Skype SMS’s to your 
mobile number is not supported in these countries. Added in Skype 
version 3.5 (protocol 8).</li>
	</ul></li>
	<li><code>IS_FAILED_UNSEEN</code> – <code>TRUE|FALSE</code> To change this value from True to False, use <code>SET SMS &lt;id&gt; SEEN</code> command</li>
	<li><code>TIMESTAMP</code> – Unix timestamp (usually <span class="caps">GMT</span>)</li>
	<li><code>PRICE</code> – cost of sending the <span class="caps">SMS</span> message (integer value)</li>
	<li><code>PRICE_PRECISION</code> – 1|2|3.. the number of times the <code>PRICE</code> is divided by 10 to express ther full currency unit. <br>
For example, a <code>PRICE</code> of 1234 with <code>PRICE_PRECISION</code> of 2 amounts to 12.34.</li>
	<li><code>PRICE_CURRENCY</code> – <span class="caps">EUR</span>|<span class="caps">USD</span>..</li>
	<li><code>REPLY_TO_NUMBER</code> – reply-to field of the <span class="caps">SMS</span> message, read-write access</li>
	<li><code>TARGET_NUMBERS</code> – comma-separated list of <span class="caps">SMS</span> recepients (+number, +number, +number..), read-write access</li>
	<li><code>TARGET_STATUSES</code> –  a string containing comma-separated
 list of recepients with message delivery status for each of them, in 
following format: “+number=status, +number=status..” Possible values for
 target statuses are:
	<ul>
		<li><code>TARGET_ANALYZING</code></li>
		<li><code>TARGET_UNDEFINED</code></li>
		<li><code>TARGET_ACCEPTABLE</code></li>
		<li><code>TARGET_NOT_ROUTABLE</code></li>
		<li><code>TARGET_DELIVERY_PENDING</code></li>
		<li><code>TARGET_DELIVERY_SUCCESSFUL</code></li>
		<li><code>TARGET_DELIVERY_FAILED</code></li>
		<li><code>UNKNOWN</code></li>
	</ul></li>
</ul>
<p><a name="OBJECT_APPLICATION"></a></p>
<h4><span class="caps">APPLICATION</span> object</h4>
<p><strong>Properties</strong></p>
<p><code>CONNECTABLE</code> – query connectable users. NB! From <span class="caps">API</span> version 3.0, this property enters the deprecation process.</p>
<pre style="codeSample">-&gt; GET APPLICATION appname CONNECTABLE
&lt;- APPLICATION appname CONNECTABLE [username[ username]*]</pre>
<p><code>CONNECTING</code> – query on-going connection process after the connection is established. Username is removed from <code>CONNECTING</code> list.</p>
<pre style="codeSample">-&gt; GET APPLICATION appname CONNECTING
&lt;- APPLICATION appname CONNECTING [username[ username]*]</pre>
<p><code>STREAMS</code> – query open streams (connections)</p>
<pre style="codeSample">-&gt; GET APPLICATION appname STREAMS
&lt;- APPLICATION appname STREAMS [username:id[ username:id]*]</pre>
<p><code>SENDING</code> – query if currently sending any data. After the data is sent, the stream name is removed from the <code>SENDING</code> list</p>
<pre style="codeSample">-&gt; GET APPLICATION appname RECIEVED
&lt;- APPLICATION appname SENDING [username:id=bytes [username:id bytes]*]</pre>
<p><strong>Note:</strong> In Skype 1.4x, the number of bytes reported by the <code>SENDING</code> notification following an <code>APPLICATION WRITE</code> is 2 bytes longer than that which was written.</p>
<pre style="codeSample">-&gt; alter application exe write testtest20:1 w
&lt;- ALTER APPLICATION exe WRITE testtest20:1
&lt;- APPLICATION exe SENDING testtest20:1 3
-&gt; alter application exe write testtest20:1 1234567890
&lt;- ALTER APPLICATION exe WRITE testtest20:1
&lt;- APPLICATION exe SENDING testtest20:1 12</pre>
<p><code>RECEIVED</code> – query if there is data waiting in received 
buffer. After the data is read from the stream, the stream name is 
removed from the <code>RECEIVED</code> list.</p>
<pre style="codeSample">-&gt; GET APPLICATION appname RECEIVED
&lt;- APPLICATION appname SENDING [username:id=bytes [username:id bytes]*]</pre>
<p>incoming datagram notification</p>
<pre style="codeSample">&lt;- APPLICATION appname DATAGRAM user:id text</pre>
<p><strong>Version</strong></p>
<ul>
	<li>Protocol 5</li>
	<li>Skype for Windows 1.4</li>
</ul>
<p><a name="OBJECT_GROUP"></a></p>
<h4><span class="caps">GROUP</span> object</h4>
<p>The <code>GROUP</code> object enables users to group contacts. There are two types of <code>GROUP</code> ; custom groups and hardwired groups. The <code>GROUP</code> object has the following properties:</p>
<ul>
	<li><code>TYPE: {ALL | CUSTOM | HARDWIRED | SHARED_GROUP | PROPOSED_SHARED_GROUP}</code>
	<ul>
		<li><code>ALL</code> – all groups. (new in <span class="caps">API</span> version 2.5)</li>
		<li><code>CUSTOM</code> – user-defined groups.</li>
		<li><code>HARDWIRED</code> – “smart” groups defined by Skype to manage groups.</li>
		<li><code>SHARED_GROUP</code> – shared groups, with semi-automatic cross-authrization between contacts (new in <span class="caps">API</span> version 2.5)</li>
		<li><code>PROPOSED_SHARED_GROUP</code> – a group that has turned into a shared group and is waiting for accept/decline (new in <span class="caps">API</span> version 2.5)</li>
	</ul></li>
	<li><code>CUSTOM_GROUP_ID</code> – a persistent ID for custom groups which can be empty at the start of group creation.</li>
	<li><code>DISPLAYNAME</code> – the display name of the group (read-write)</li>
	<li><code>NROFUSERS</code> – the number of contacts in this group (read-only)</li>
	<li><code>NROFUSERS_ONLINE</code> – the number of contacts online in this group (read-only)</li>
	<li><code>USERS</code> – the list of contacts in the group (read-only)<br>
Following is a description of all group types defined by Skype:</li>
</ul>
<p><code>HARDWIRED GROUPS</code> are described in the following table.</p>
<table>
	<tbody><tr>
		<td><strong>Contact group type</strong></td>
		<td><strong>Description</strong></td>
	</tr>
	<tr>
		<td><code>ALL_USERS</code></td>
		<td>This group contains all users I know about, including users in my contactlist, users I recently contacted and blocked users.</td>
	</tr>
	<tr>
		<td><code>ALL_FRIENDS</code></td>
		<td>This group contains all contacts in my contactlist (also known as friends)</td>
	</tr>
	<tr>
		<td><code>SKYPE_FRIENDS</code></td>
		<td>This group contains Skype contacts in my contactlist.</td>
	</tr>
	<tr>
		<td><code>SkypeOut_FRIENDS</code></td>
		<td>This group contains SkypeOut contacts in my contactlist.</td>
	</tr>
	<tr>
		<td><code>ONLINE_FRIENDS</code></td>
		<td>This group contains Skype contacts in my contactlist who are online.</td>
	</tr>
	<tr>
		<td><code>UNKNOWN_OR_PENDINGAUTH_FRIENDS</code></td>
		<td>This group contains contacts in my contactlist who have not yet authorized me.</td>
	</tr>
	<tr>
		<td><code>RECENTLY_CONTACTED_USERS</code></td>
		<td>This group contains contacts I have conversed with recently, including non-friends.</td>
	</tr>
	<tr>
		<td><code>USERS_WAITING_MY_AUTHORIZATION</code></td>
		<td>This group contains contacts who are awating my response to an authorisation request, including non-friends.</td>
	</tr>
	<tr>
		<td><code>USERS_AUTHORIZED_BY_ME</code></td>
		<td>This group contains all contacts I have authorised, including non-friends.</td>
	</tr>
	<tr>
		<td><code>USERS_BLOCKED_BY_ME</code></td>
		<td>This group contains all contacts I have blocked, including non-friends.</td>
	</tr>
	<tr>
		<td><code>UNGROUPED_FRIENDS</code></td>
		<td>This group contains all contacts in my contactlist that do not belong to any custom group.</td>
	</tr>
	<tr>
		<td><code>CUSTOM_GROUP</code></td>
		<td>This group type is reserved for user-defined groups.</td>
	</tr>
</tbody></table>
<p><a name="OBJECT_FILETRANSFER"></a></p>
<h4><span class="caps">FILETRANSFER</span> object</h4>
<p>File transfer objects are for monitoring purposes only. No alters/actions via <span class="caps">API</span> are currently allowed with these objects. File transfers cannot be initiated nor accepted via <span class="caps">API</span> commands.</p>
<p>Values of all the properties can be accessed with <code>GET FILETRANSFER &lt;id&gt; &lt;property_name&gt;</code> commands.</p>
<p>Refer to <a href="#COMMAND_SEARCH_FILETRANSFERS"><span class="caps">SEARCH</span> <span class="caps">FILETRANSFERS</span></a> and <a href="#COMMAND_SEARCH_ACTIVEFILETRANSFERS"><span class="caps">SEARCH</span> <span class="caps">ACTIVEFILETRANSFERS</span></a> for getting lists of <code>FILETRANSFER</code> objects in the system.</p>
<p><strong>Properties:</strong></p>
<ul>
	<li><code>TYPE</code> – possible values are:
	<ul>
		<li><code>INCOMING</code> – file transfer object from receiving side.</li>
		<li><code>OUTGOING</code> – file transfer object from transmitting side.</li>
	</ul></li>
	<li><code>STATUS</code> – current status of the object. Possible values are:
	<ul>
		<li><code>NEW</code> – initial state of a file transfer. For sender, the status proceeds to <code>WAITING_FOR_ACCEPT</code>.</li>
		<li><code>WAITING_FOR_ACCEPT</code> – status set for sender until receiver either accepts or cancels the transfer.</li>
		<li><code>CONNECTING</code> – is set for both parties after remote user accepts the file transfer.</li>
		<li><code>TRANSFERRING</code> – is set at the start of the file transfer.</li>
		<li><code>TRANSFERRING_OVER_RELAY</code> – set when no direct connection between sender and receiver could be established over the network. Analogous to <code>TRANSFERRING</code>.</li>
		<li><code>PAUSED</code> – this status is currently unused.</li>
		<li><code>REMOTELY_PAUSED</code> – this status is also currently unused.</li>
		<li><code>CANCELLED</code> – file transfer has been locally cancelled. Remote user status is set to <code>FAILED</code> and <code>FAILURE_REASON</code> to <code>REMOTELY_CANCELLED</code>.</li>
		<li><code>COMPLETED</code> – file transfer was completed.</li>
		<li><code>FAILED</code> – file transfer failed to complete. Cause of the failure can be seen in <code>FAILUREREASON</code>.</li>
	</ul></li>
	<li><code>FAILUREREASON</code> – set when <code>STATUS</code> is set to <code>FAILED</code>.
	<ul>
		<li><code>SENDER_NOT_AUTHORIZED</code> – It is only possible to 
transfer files between users who have authorized each-other. As 
initiating file transfers to remote users who have not authorized the 
sender is currently blocked by UI, this <code>FAILUREREASON</code> appears to be unused.</li>
		<li><code>REMOTELY_CANCELLED</code> – set when remote user has cancelled the transfer.</li>
		<li><code>FAILED_READ</code> – read error on local machine.</li>
		<li><code>FAILED_REMOTE_READ</code> – read error on remote machine.</li>
		<li><code>FAILED_WRITE</code> – write error on local machine.</li>
		<li><code>FAILED_REMOTE_WRITE</code> – write error on remote machine.</li>
		<li><code>REMOTE_DOES_NOT_SUPPORT_FT</code> – Skype client of the receiver does not support file transfers.</li>
		<li><code>REMOTE_OFFLINE_FOR_TOO_LONG</code> – the recipient of the proposed file transfer is not available (offline for longer than 7 days).</li>
	</ul></li>
	<li><code>PARTNER_HANDLE</code> – remote user’s skypename.</li>
	<li><code>PARTNER_DISPNAME</code> – remote user’s display name.</li>
	<li><code>STARTTIME</code> – Unix timestamp of when the transfer was started.</li>
	<li><code>FINISHTIME</code> – while transmission is in progress the 
value is updated with estimated time of completion (0 when no estimation
 can be given). When transmission is finished, the value is set to the 
timestamp of completion/failure.</li>
	<li><code>FILEPATH</code> – full path of the file being read or written in local file system. Includes filename and extension.  * <code>FILENAME</code> – filename (and extension) without path. This is also seen by the receiver before accept (default file name, from sender).</li>
	<li><code>FILESIZE</code> – file size, 64-bit numeric.</li>
	<li><code>BYTESPERSECOND</code> – transfer speed during file transfer. Becomes 0 after transfer is completed, failed or aborted.</li>
	<li><code>BYTESTRANSFERRED</code> – current nr. of bytes transferred (progress), 64-bit numeric.</li>
</ul>
<p><strong>Example:</strong></p>
<pre style="codeSample">//----------------------------------------------------------------------------------
// Sender initiates file transfer from UI
// Note that the file name in notification message is not enclosed in quotes.
&lt;- FILETRANSFER 982 TYPE OUTGOING
&lt;- FILETRANSFER 982 PARTNER_HANDLE Test2
&lt;- FILETRANSFER 982 PARTNER_DISPNAME Test2
&lt;- FILETRANSFER 982 FILEPATH C:\Stuff\This is test file.mp3
&lt;- FILETRANSFER 982 FILENAME This is test file.mp3
&lt;- FILETRANSFER 982 STATUS NEW
&lt;- FILETRANSFER 982 FILESIZE 0
&lt;- FILETRANSFER 982 STARTTIME 1174558044
&lt;- FILETRANSFER 982 FINISHTIME 0
&lt;- FILETRANSFER 982 BYTESPERSECOND 0
&lt;- FILETRANSFER 982 BYTESTRANSFERRED 0
&lt;- FILETRANSFER 982 FILESIZE 2193720
&lt;- FILETRANSFER 982 STATUS WAITING_FOR_ACCEPT
//----------------------------------------------------------------------------------
// Remote user receives incoming file notification
&lt;- FILETRANSFER 1250 TYPE INCOMING
&lt;- FILETRANSFER 1250 PARTNER_HANDLE Test
&lt;- FILETRANSFER 1250 PARTNER_DISPNAME Test
&lt;- FILETRANSFER 1250 FILENAME This is test file.mp3
&lt;- FILETRANSFER 1250 STATUS NEW
&lt;- FILETRANSFER 1250 STARTTIME 1174644373
&lt;- FILETRANSFER 1250 FINISHTIME 0
&lt;- FILETRANSFER 1250 BYTESPERSECOND 0
&lt;- FILETRANSFER 1250 BYTESTRANSFERRED 0
//----------------------------------------------------------------------------------
// Remote user accepts the file from UI and starts receiving
&lt;- FILETRANSFER 1250 FILEPATH C:\test\This is test file.mp3
&lt;- FILETRANSFER 1250 STATUS CONNECTING
&lt;- FILETRANSFER 1250 STATUS TRANSFERRING
&lt;- FILETRANSFER 1250 BYTESTRANSFERRED 262454
&lt;- FILETRANSFER 1250 BYTESPERSECOND 307806
&lt;- FILETRANSFER 1250 BYTESTRANSFERRED 580110
&lt;- FILETRANSFER 1250 FINISHTIME 1174644526
&lt;- FILETRANSFER 1250 BYTESPERSECOND 526959
&lt;- FILETRANSFER 1250 BYTESTRANSFERRED 1316372
&lt;- FILETRANSFER 1250 FINISHTIME 1174644523
&lt;- FILETRANSFER 1250 BYTESPERSECOND 613776
&lt;- FILETRANSFER 1250 BYTESTRANSFERRED 2103782
&lt;- FILETRANSFER 1250 BYTESPERSECOND 0
&lt;- FILETRANSFER 1250 BYTESTRANSFERRED 2193720
&lt;- FILETRANSFER 1250 STATUS COMPLETED
//----------------------------------------------------------------------------------
// Sender receives notification that the file has been accepted and starts sending
&lt;- FILETRANSFER 982 STATUS CONNECTING
&lt;- FILETRANSFER 982 STATUS TRANSFERRING
&lt;- FILETRANSFER 982 BYTESTRANSFERRED 262454
&lt;- FILETRANSFER 982 BYTESPERSECOND 308104
&lt;- FILETRANSFER 982 BYTESTRANSFERRED 580110
&lt;- FILETRANSFER 982 FINISHTIME 1174558198
&lt;- FILETRANSFER 982 BYTESPERSECOND 510987
&lt;- FILETRANSFER 982 BYTESTRANSFERRED 1296182
&lt;- FILETRANSFER 982 FINISHTIME 1174558195
&lt;- FILETRANSFER 982 BYTESPERSECOND 606237
&lt;- FILETRANSFER 982 BYTESTRANSFERRED 2083592
&lt;- FILETRANSFER 982 BYTESPERSECOND 0
&lt;- FILETRANSFER 982 FINISHTIME 0
&lt;- FILETRANSFER 982 STATUS CONNECTING
&lt;- FILETRANSFER 982 BYTESTRANSFERRED 2193720
&lt;- FILETRANSFER 982 FINISHTIME 1174558195
&lt;- FILETRANSFER 982 STATUS COMPLETED
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="PROPERTIES_OBJECT"></a></p>
<h3>Managing object properties</h3>
<p>Three commands are available for retrieving and modifing object properties and general parameters:</p>
<ul>
	<li><code>GET</code> – general request command to retrieve object properties and general parameters</li>
	<li><code>SET</code> – to set object properties and modify general parameters</li>
	<li><code>ALTER</code> – to alter or perform an action with an object</li>
</ul>
<p><strong>General syntax</strong></p>
<ul>
	<li><code>GET USER &lt;username&gt; property</code><br>
| <code>CALL &lt;id&gt; property</code><br>
| <code>MESSAGE &lt;id&gt; property</code><br>
| <code>CHAT &lt;id&gt; property</code><br>
| <code>CHATMESSAGE &lt;id&gt; property</code><br>
| <code>VOICEMAIL &lt;id&gt; property</code></li>
	<li><code>SET USER &lt;username&gt; property &lt;value&gt;</code><br>
| <code>CALL &lt;id&gt; property &lt;value&gt;</code><br>
| <code>MESSAGE &lt;id&gt; property &lt;value&gt;</code><br>
| <code>CHAT &lt;id&gt; property &lt;value&gt;</code><br>
| <code>CHATMESSAGE &lt;id&gt; property &lt;value&gt;</code><br>
| <code>VOICEMAIL &lt;id&gt; property &lt;value&gt;</code><br>
See the corresponding object information for available properties and property values:</li>
	<li><a href="#OBJECT_CALL"><span class="caps">CALL</span> object</a></li>
	<li><a href="#OBJECT_USER"><span class="caps">USER</span> object</a></li>
	<li><a href="#OBJECT_PROFILE"><span class="caps">PROFILE</span> object</a></li>
	<li><a href="#OBJECT_CHAT"><span class="caps">CHAT</span> object</a></li>
	<li><a href="#OBJECT_CHATMESSAGE"><span class="caps">CHATMESSAGE</span> object</a></li>
	<li><a href="#OBJECT_VOICEMAIL"><span class="caps">VOICEMAIL</span> object</a></li>
	<li><a href="#OBJECT_APPLICATION"><span class="caps">APPLICATION</span> object</a><br>
This section contains the commands for managing object properties. Note that:</li>
	<li>The <code>GET MESSAGE</code> command is deprecated and has been replaced by the <a href="#COMMAND_GET_CHATMESSAGE"><span class="caps">GET</span> <span class="caps">CHATMESSAGE</span> command</a>.</li>
	<li>Commands for the <code>APPLICATION</code> object are described in the <a href="#OBJECT_APPLICATION"><span class="caps">APPLICATION</span> object</a> information.</li>
</ul>
<p><a name="COMMAND_GET_USER"></a></p>
<h4><span class="caps">GET</span> <span class="caps">USER</span></h4>
<p>This command returns property values for a specified user.</p>
<p><strong>Syntax</strong><br>
<code>GET USER &lt;username&gt; property</code></p>
<p><strong>Response</strong><br>
<code>USER &lt;username&gt; property &lt;value&gt;</code></p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>&lt;username&gt;</code> – Skype username to retrieve property</li>
	<li><code>property</code> – property name. Refer to the <a href="#OBJECT_USER"><span class="caps">USER</span> object</a> information for list of properties.</li>
</ul>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 7 GET: invalid WHAT</code><br>
Object name missing or misspelled</li>
	<li><code>ERROR 10 Invalid prop</code><br>
ID and/or property missing or misspelled.</li>
	<li><code>ERROR 8 invalid handle</code><br>
<code>USERNAME</code> missing or includes a not permitted character . Note: The <code>GET USER &lt;target&gt; ONLINESTATUS</code> command returns the response <code>OFFLINE</code> unless the current user is authorized by the target user to see his/her online status.</li>
</ul>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; GET USER pamela FULLNAME
&lt;- USER pamela FULLNAME Jane Doe</pre>
<p><a name="COMMAND_SET_USER"></a></p>
<h4><span class="caps">SET</span> <span class="caps">USER</span></h4>
<p><strong>Syntax</strong><br>
<code>SET USER &lt;target&gt; ISAUTHORIZED TRUE|FALSE</code> – allow/disable target to see current user’s userstatus<br>
<code>SET USER &lt;target&gt; ISBLOCKED TRUE|FALSE</code> – block/unblock target user<br>
<code>SET USER &lt;target&gt; BUDDYSTATUS 1</code> – remove target from contactlist<br>
<code>SET USER &lt;target&gt; BUDDYSTATUS 2 &lt;message&gt;</code> – add target into contactlist and ask authorization with message</p>
<p><a name="COMMAND_GET_CALL1"></a></p>
<h4><span class="caps">GET</span> <span class="caps">CALL</span></h4>
<p>This command returns property values for a specified call. See <a href="#COMMAND_GET_CALL"><span class="caps">GET</span> <span class="caps">CALL</span> command</a> reference for more details.</p>
<p><a name="COMMAND_GET_CHAT"></a></p>
<h4><span class="caps">GET</span> <span class="caps">CHAT</span></h4>
<p>This command returns property values for a specified chat.</p>
<p><strong>Syntax</strong><br>
<code>GET CHAT &lt;chat_id&gt; property</code></p>
<p><strong>Response</strong><br>
<code>CHAT &lt;chat_id&gt; property &lt;value&gt;</code></p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>&lt;chat_id&gt;</code> – chat identifier;</li>
	<li><code>property</code> – property name.<br>
Available properties are: <code>NAME</code> , <code>TIMESTAMP</code> , <code>ADDER</code> , <code>STATUS</code> , <code>POSTERS</code> , <code>MEMBERS</code> , <code>TOPIC</code> , <code>CHATMESSAGES</code> , <code>ACTIVEMEMBERS</code> , <code>FRIENDLYNAME</code> . See <a href="#OBJECT_CHAT"><span class="caps">CHAT</span> object</a> description for detailed info.</li>
</ul>
<p><strong>Version</strong><br>
Protocol 3</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 7 GET: invalid WHAT</code><br>
Object name missing or misspelled.</li>
	<li><code>ERROR 105 invalid chat name</code><br>
Errorin the <code>CHATNAME</code> parameter.</li>
	<li><code>ERROR 106 Invalid PROP</code><br>
Property name missing or misspelled.</li>
</ul>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; GET CHAT #bitman/$jessy;eb06e65635359671 NAME
&lt;- CHAT #bitman/$jessy;eb06e65635359671 NAME #bitman/$jessy;eb06e65635359671</pre>
<p><a name="COMMAND_GET_CHATMESSAGE"></a></p>
<h4><span class="caps">GET</span> <span class="caps">CHATMESSAGE</span></h4>
<p>This command returns property values for a specified chat message.</p>
<p><strong>Syntax</strong><br>
<code>GET CHATMESSAGE &lt;id&gt; property</code></p>
<p><strong>Response</strong><br>
<code>CHATMESSAGE &lt;id&gt; property &lt;value&gt;</code></p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>&lt;id&gt;</code> – chat message ID;</li>
	<li><code>property</code> – property name.<br>
Available properties are: <code>CHATNAME</code> , <code>TIMESTAMP</code> , <code>FROM_HANDLE</code> , <code>FROM_DISPNAME</code> , <code>TYPE</code> , <code>USERS</code> , <code>LEAVEREASON</code> , <code>BODY</code> , <code>STATUS</code> . Refer to the <a href="#OBJECT_CHATMESSAGE"><span class="caps">CHATMESSAGE</span> object</a> information for more detail.</li>
</ul>
<p><strong>Version</strong><br>
Protocol 3</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; GET CHATMESSAGE 60 CHATNAME
&lt;- CHATMESSAGE 60 CHATNAME #bitman/$jessy;eb06e65631239671</pre>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 7 GET: invalid WHAT</code><br>
Object name missing or misspelled.</li>
	<li><code>ERROR 14 Invalid message id</code><br>
Chat message ID contains not permitted symbols (only numeric are permitted)</li>
	<li><code>ERROR 15 Unknown message</code><br>
Unknown chat message ID</li>
	<li><code>ERROR 16 Invalid PROP</code><br>
Property name missing or misspelled</li>
</ul>
<p><a name="COMMAND_GET_MESSAGE"></a></p>
<h4><span class="caps">GET</span> <span class="caps">MESSAGE</span></h4>
<p>This command returns property values for a specified message. This 
command is deprecated since protocol 3, and was replaced by the <a href="#COMMAND_GET_CHATMESSAGE"><span class="caps">GET</span> <span class="caps">CHATMESSAGE</span> command</a>.</p>
<p><strong>Syntax</strong><br>
<code>GET MESSAGE &lt;id&gt; property</code></p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>&lt;id&gt;</code> – chat message ID;</li>
	<li><code>property</code> – property name.<br>
Availableproperties are: <code>TIMESTAMP (UNIX timestamp)</code> , <code>PARTNER_HANDLE</code> , <code>PARTNER_DISPNAME</code> , <code>CONF_ID (not used)</code> , <code>TYPE</code> , <code>STATUS</code> , <code>FAILUREREASON (numeric)</code> , <code>BODY</code> . Refer to the <a href="#OBJECT_MESSAGE"><span class="caps">MESSAGE</span> object</a> information for more detail.</li>
</ul>
<p><strong>Version</strong><br>
Protocol 1, <strong>deprecated in protocol 3</strong></p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 7 GET: invalid WHAT</code><br>
Object name missing or misspelled.</li>
	<li><code>ERROR 14 Invalid message id</code><br>
ID includes other than numeric characters.</li>
	<li><code>ERROR 15 Unknown message</code><br>
Message with specified ID does not exist in current user’s message history.</li>
	<li><code>ERROR 16 Invalid prop</code><br>
Property name missing or misspelled.</li>
</ul>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; GET MESSAGE 159 TYPE
&lt;- MESSAGE 159 TYPE TEXT</pre>
<p><a name="COMMAND_GET_APPLICATION"></a></p>
<h4><span class="caps">GET</span> <span class="caps">APPLICATION</span></h4>
<p>For information about the <code>GET APPLICATION</code> command, refer to the <a href="#OBJECT_APPLICATION"><span class="caps">APPLICATION</span> object</a> information.</p>
<p><a name="PROPERTIES_GENERAL"></a></p>
<h3>Managing general parameters</h3>
<p>Use <code>GET</code> and <code>SET</code> commands to manage the general variables.</p>
<p><a name="COMMAND_GET_SKYPEVERSION"></a></p>
<h4><span class="caps">GET</span> <span class="caps">SKYPEVERSION</span></h4>
<p><strong>Syntax</strong><br>
<code>GET SKYPEVERSION</code></p>
<p><strong>Response</strong><br>
<code>SKYPEVERSION &lt;version&gt;</code></p>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; GET SKYPEVERSION
&lt;- SKYPEVERSION 1.3.0.28</pre>
<p><a name="COMMAND_GET_CURRENTUSERHANDLE"></a></p>
<h4><span class="caps">GET</span> <span class="caps">CURRENT</span> <span class="caps">USER</span></h4>
<p>This command gets the username for the currently logged in user.</p>
<p><strong>Syntax</strong><br>
<code>GET CURRENTUSERHANDLE</code></p>
<p><strong>Response</strong><br>
<code>CURRENTUSERHANDLE &lt;username&gt;</code></p>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><a name="COMMAND_GET_USERSTATUS"></a></p>
<h4><span class="caps">GET</span> <span class="caps">USERSTATUS</span></h4>
<p>This command queries or modifies user visiblity for the current user.</p>
<p><strong>Syntax</strong><br>
<code>GET USERSTATUS</code><br>
<code>SET USERSTATUS &lt;value&gt;</code></p>
<p><strong>Response</strong><br>
<code>USERSTATUS &lt;value&gt;</code></p>
<p><strong>Parameters</strong><br>
<code>&lt;value&gt;</code> – new userstatus. Possible values:</p>
<ul>
	<li><code>UNKNOWN</code></li>
	<li><code>ONLINE</code> – current user is online</li>
	<li><code>OFFLINE</code> – current user is offline</li>
	<li><code>SKYPEME</code> – current user is in “Skype Me” mode (protocol 2).</li>
	<li><code>AWAY</code> – current user is away.</li>
	<li><code>NA</code> – current user is not available.</li>
	<li><code>DND</code> – current user is in “Do not disturb” mode.</li>
	<li><code>INVISIBLE</code> – current user is invisible to others.</li>
	<li><code>LOGGEDOUT</code> – current user is logged out. Clients are detached.</li>
</ul>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 28 Unknown userstatus</code><br>
Status value is incorrect or misspelled</li>
</ul>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SET USERSTATUS OFFLINE
&lt;- USERSTATUS OFFLINE
&lt;- USERSTATUS OFFLINE
-&gt; SET USERSTATUS xxx
&lt;- ERROR 28 Unknown userstatus</pre>
<p><a name="COMMAND_GET_PRIVILEGE"></a></p>
<h4><span class="caps">GET</span> <span class="caps">PRIVILEGE</span></h4>
<p><strong>Syntax</strong><br>
<code>GET PRIVILEGE user_privilege</code></p>
<p><strong>Response</strong><br>
<code>PRIVILEGE user_privilege &lt;value&gt;</code></p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>user_privilege</code> – possible values:
	<ul>
		<li><code>SkypeOut True or False</code></li>
		<li><code>SkypeIn True or False</code></li>
		<li><code>VOICEMAIL True or False</code></li>
	</ul></li>
</ul>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 40 Unknown privilege</code><br>
Privilege name is missing or misspelled</li>
</ul>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; GET PRIVILEGE SkypeOut
&lt;- PRIVILEGE SkypeOut TRUE
-&gt; GET PRIVILEGE SkypeIn
&lt;- PRIVILEGE SkypeIn FALSE</pre>
<p><a name="COMMAND_GET_PROFILE"></a></p>
<h4><span class="caps">GET</span> <span class="caps">PROFILE</span></h4>
<p>This command queries the current user’s profile information.</p>
<p><strong>Syntax:</strong></p>
<p><code>-&gt; GET PROFILE &lt;profile_property&gt;</code></p>
<p><code>&lt;- PROFILE &lt;profile_property&gt; &lt;value&gt;</code></p>
<p>Refer to <a href="#OBJECT_PROFILE"><span class="caps">PROFILE</span> object</a> for possible values of <profile_property> parameter.</profile_property></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; GET PROFILE PSTN_BALANCE
&lt;- PROFILE PSTN_BALANCE 5000
-&gt; GET PROFILE PSTN_BALANCE_CURRENCY
&lt;- PROFILE PSTN_BALANCE_CURRENCY EUR</pre>
<p><strong>Version</strong><br>
Protocol 3</p>
<p><a name="COMMAND_GET_PREDICTIVE_DIALER_COUNTRY"></a></p>
<h4><span class="caps">GET</span> <span class="caps">PREDICTIVE</span> <span class="caps">DIALER</span> <span class="caps">COUNTRY</span></h4>
<p>This command returns the country code that is currently being used for inventing correct country prefixes for <span class="caps">PSTN</span> numbers (predictive dialing). The country code is returned in ISO2 format.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; GET PREDICTIVE_DIALER_COUNTRY</code></p>
<p><code>&lt;- PREDICTIVE_DIALER_COUNTRY &lt;iso2&gt;</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; GET PREDICTIVE_DIALER_COUNTRY
&lt;- PREDICTIVE_DIALER_COUNTRY ee
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.1)</p>
<p><a name="COMMAND_SET_PROFILE_MOOD_TEXT"></a></p>
<h4><span class="caps">SET</span> <span class="caps">PROFILE</span> MOOD_TEXT</h4>
<p>The <code>SET PROFILE MOOD TEXT</code> command changes the mood text for a user.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; SET PROFILE MOOD_TEXT Life is great and then you...</code></p>
<p><code>&lt;- PROFILE MOOD_TEXT Life is great and then you...</code></p>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_SET_PROFILE_RICH_MOOD_TEXT"></a></p>
<h4><span class="caps">SET</span> <span class="caps">PROFILE</span> RICH_MOOD_TEXT</h4>
<p>This is a “with bells and whistles” version of the <code>SET PROFILE MOOD_TEXT</code> command.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SET PROFILE RICH_MOOD_TEXT &lt;text&gt;</code></p>
<p><code>&lt;- PROFILE RICH_MOOD_TEXT &lt;text&gt;</code></p>
<p><code>&lt;- PROFILE RICH_MOOD_TEXT &lt;text&gt;</code></p>
<p><code>&lt;- PROFILE MOOD_TEXT &lt;text&gt;</code></p>
<p><code>&lt;- USER &lt;username&gt; RICH_MOOD_TEXT &lt;text&gt;</code></p>
<p><code>&lt;- USER &lt;username&gt; MOOD_TEXT &lt;text&gt;</code></p>
<p>Note that when this property is changed, it is also propagated into the old <code>MOOD_TEXT</code>, with <span class="caps">XML</span> tags stripped. Corresponding properties of the <code>USER</code> object are updated as well.</p>
<p>When <code>MOOD_TEXT</code> property is set, the <code>RICH_MOOD_TEXT</code> property is automatically cleared.</p>
<p><strong>Example:</strong></p>
<pre style="codeSample">//------------------------------------------------------------------
// For purpose of bit conservation we omit feedback notifications
SET PROFILE RICH_MOOD_TEXT Smiley: &lt;SS type="smile"&gt;:-)&lt;/SS&gt;
SET PROFILE RICH_MOOD_TEXT &lt;FONT COLOR="#FF0010"&gt;Red text&lt;/FONT&gt;
SET PROFILE RICH_MOOD_TEXT &lt;BLINK&gt;Blinking text&lt;/BLINK&gt;
SET PROFILE RICH_MOOD_TEXT &lt;B&gt;Bold text&lt;/B&gt;
SET PROFILE RICH_MOOD_TEXT &lt;I&gt;Italics&lt;/I&gt;
SET PROFILE RICH_MOOD_TEXT &lt;U&gt;Underlined&lt;/U&gt;
SET PROFILE RICH_MOOD_TEXT First line&lt;br/&gt;Second line&lt;br/&gt;Third line
</pre>
<p><code>&lt;SS type="smile"&gt;&lt;/SS&gt;</code>  also accepts following smileys:</p>
<p>smile, sad, laugh, cool, surprised, wink, cry, sweat, speechless, 
kiss, tongueout, blush, wonder, sleepy, snooze, dull, inlove, talk, 
yawn, puke, doh, angry, wasntme, party, worry, mmm, nerdy, lipssealed, 
hi, call, devil, angel, envy, wait, hug, makeup, giggle, clap, think, 
bow, rofl, whew, happy, smirk, nod, shake, punch, emo, no, yes, 
handshake, skype, heart, brokenheart, mail, flower, rain, sun, time, 
music, movie, phone, coffee, pizza, cash, muscle, beer, drink, dance, 
ninja, star, mooning, finger, bandit, smoke, toivo, rock, headbang, 
poolparty, swear, bug, fubar, tmi.</p>
<p>You can also get ideas for cute mood messages by looking at what 
others have done with theirs. To retrieve rich mood messages of other 
people, use <a href="#COMMAND_GET_USER_RICH_MOOD_TEXT"><span class="caps">GET</span> <span class="caps">USER</span> <span class="caps">RICH</span> <span class="caps">MOOD</span> <span class="caps">TEXT</span></a> command.</p>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_GET_USER_RICH_MOOD_TEXT"></a></p>
<h4><span class="caps">GET</span> <span class="caps">USER</span> RICH_MOOD_TEXT</h4>
<p>Retrieves RICH_MOOD_TEXT of a remote user.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; GET USER &lt;skypename&gt; RICH_MOOD_TEXT</code></p>
<p><code>&lt;- USER &lt;skypename&gt; RICH_MOOD_TEXT &lt;text&gt;</code></p>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="COMMAND_CONNSTATUS"></a></p>
<h4><span class="caps">GET</span> <span class="caps">CONNSTATUS</span> (connection)</h4>
<p>This command returns the current network connection status.</p>
<p><strong>Syntax</strong><br>
<code>GET CONNSTATUS</code></p>
<p><strong>Response</strong><br>
<code>CONNSTATUS &lt;value&gt;</code></p>
<p><strong>Parameters</strong><br>
<code>&lt;value&gt;</code> – possible values:</p>
<ul>
	<li><code>OFFLINE</code></li>
	<li><code>CONNECTING</code></li>
	<li><code>PAUSING</code></li>
	<li><code>ONLINE</code></li>
</ul>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; GET CONNSTATUS
&lt;- CONNSTATUS ONLINE</pre>
<p><a name="COMMAND_AUDIO_IN"></a></p>
<h4>AUDIO_IN</h4>
<p>The <code>GET</code> command returns the current audio input device for Skype.<br>
The <code>SET</code> command assigns a new audio input device for Skype.</p>
<p><strong>Syntax</strong><br>
<code>GET AUDIO_IN</code><br>
<code>SET AUDIO_IN &lt;device_name&gt;</code></p>
<p><strong>Response</strong><br>
<code>AUDIO_IN &lt;device_name&gt;</code></p>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><strong>Note</strong><br>
Setting a device with an empty name selects the Windows default device.</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; GET AUDIO_IN
&lt;- AUDIO_IN SB Audigy 2 ZS Audio [DC00]</pre>
<p><a name="COMMAND_AUDIO_OUT"></a></p>
<h4>AUDIO_OUT</h4>
<p>The <code>GET</code> command returns the current audio output device for Skype.<br>
The <code>SET</code> command assigns a new audio output device for Skype.</p>
<p><strong>Syntax</strong><br>
<code>GET AUDIO_OUT</code><br>
<code>SET AUDIO_OUT &lt;device_name&gt;</code></p>
<p><strong>Response</strong><br>
<code>AUDIO_OUT &lt;device_name&gt;</code></p>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><strong>Note</strong><br>
Setting a device with an empty name selects the Windows default device.</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; GET AUDIO_OUT
&lt;- AUDIO_OUT SB Audigy 2 ZS Audio [DC00]</pre>
<p><a name="COMMAND_RINGER"></a></p>
<h4><span class="caps">RINGER</span></h4>
<p>The <code>GET</code> command returns the current ringing device for Skype. The <code>SET</code> command assigns a new ringing device for Skype.</p>
<p><strong>Syntax</strong><br>
<code>GET RINGER</code><br>
<code>SET RINGER &lt;device_name&gt;</code></p>
<p><strong>Response</strong><br>
<code>RINGER &lt;device_name&gt;</code></p>
<p><strong>Version</strong><br>
Skype for Windows 1.3</p>
<p><strong>Note</strong><br>
Setting a device with an empty name selects the Windows default device.</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; GET RINGER
&lt;- RINGER SB Audigy 2 ZS Audio [DC00]</pre>
<p><a name="COMMAND_MUTE"></a></p>
<h4><span class="caps">MUTE</span></h4>
<p>This command gets or sets the mute status.</p>
<p><strong>Syntax</strong><br>
<code>GET MUTE</code><br>
<code>SET MUTE ON|OFF</code></p>
<p><strong>Response</strong><br>
<code>MUTE ON|OFF</code></p>
<p><strong>Version</strong><br>
Protocol 1</p>
<p><strong>Notes</strong><br>
If there are currently no active calls (call status <code>INPROGRESS</code> ), <code>MUTE</code> is always <code>OFF</code> and setting <code>MUTE ON</code> has no effect.</p>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; GET MUTE
&lt;- MUTE OFF
// set mute when no call is active - mute remains OFF
-&gt; SET MUTE ON
&lt;- MUTE OFF</pre>
<p><a name="COMMAND_SET_AVATAR"></a></p>
<h4><span class="caps">SET</span> <span class="caps">AVATAR</span></h4>
<p>This command changes the avatar picture for the user profile.</p>
<p><strong>Syntax</strong><br>
<code>SET AVATAR &lt;id&gt; &lt;filePath + fileName&gt;[:idx]</code></p>
<p><strong>Response</strong><br>
<code>AVATAR &lt;id&gt; &lt;filePath + fileName&gt;</code></p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>id</code> – avatar ID. This parameter is here for future 
compatibility purposes. Currently only one avatar is supported, so 
always set this parameter to ‘1’.</li>
	<li><code>filePath</code> – avatar file directory.</li>
	<li><code>fileName:idx</code> – avatar file may either be image or .skype file format. <span class="caps">IDX</span> refers to the content number in .skype file formats (0,..)</li>
</ul>
<p><strong>Version</strong></p>
<ul>
	<li>Skype for Windows 1.3</li>
	<li>.skype files are supported in Skype for Windows 1.4</li>
	<li>Protocol 5 supports changing avatars.</li>
</ul>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 114 Invalid avatar</code><br>
Avatar id is missing or invalid</li>
	<li><code>ERROR 111 File not found</code><br>
Avatar file specified does not exist</li>
	<li><code>ERROR 9901 internal error</code><br>
Wrong type of file (for example an audio file or a document) is set to avatar</li>
</ul>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; SET AVATAR 1 C:\Documents and Settings\Administrator\My Documents\My Pictures\kitten.jpg
&lt;- AVATAR 1 C:\Documents and Settings\Administrator\My Documents\My Pictures\kitten.jpg</pre>
<p><a name="COMMAND_GET_AVATAR"></a></p>
<h4><span class="caps">GET</span> <span class="caps">AVATAR</span></h4>
<p>This command saves user’s current avatar picture in a file.</p>
<p>Refer to</p>
<ul>
	<li><a href="#COMMAND_GET_USER_AVATAR"><span class="caps">GET</span> <span class="caps">USER</span> <span class="caps">AVATAR</span> command</a> for how to save avatars of other users.</li>
	<li><a href="#COMMAND_SET_AVATAR"><span class="caps">SET</span> <span class="caps">AVATAR</span> command</a> on how to set your own avatar to a picture from a file.</li>
</ul>
<p><strong>Syntax:</strong><br>
<code>-&gt; GET AVATAR 1 &lt;filename&gt;</code></p>
<p><code>&lt;- AVATAR 1 &lt;filename&gt;</code></p>
<p>The file path given in the <filename> parameter must exist. An existing file with the same name will only be overwritten if it’s empty (file size = 0).</filename></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; GET AVATAR 1 c:\stuff\test2.jpg
&lt;- AVATAR 1 c:\stuff\test2.jpg
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.1)</p>
<p><a name="COMMAND_GET_USER_AVATAR"></a></p>
<h4><span class="caps">GET</span> <span class="caps">USER</span> <span class="caps">AVATAR</span></h4>
<p>This command retrieves remote user’s avatar picture from the picture cache and saves it into a file. Refer to <a href="#COMMAND_SET_AVATAR"><span class="caps">SET</span> <span class="caps">AVATAR</span> command</a> on how to set your own avatar to a picture from a file.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; GET USER &lt;skypename&gt; AVATAR 1 &lt;filename&gt;</code></p>
<p><code>&lt;- USER &lt;skypename&gt; AVATAR 1 &lt;filename&gt;</code></p>
<p>The file path given in the <filename> parameter must exist. An existing file with the same name will only be overwritten if it’s empty (file size = 0).</filename></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; GET USER anappo2 AVATAR 1 c:\stuff\userpic.jpg
&lt;- USER anappo2 AVATAR 1 c:\stuff\userpic.jpg
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.1)</p>
<p><a name="COMMAND_RINGTONE"></a></p>
<h4><span class="caps">RINGTONE</span></h4>
<p>The <code>GET</code> command returns the current ringtone file for Skype.<br>
The <code>SET</code> command assigns a new ringtone for Skype.</p>
<p><strong>Syntax</strong></p>
<ul>
	<li><code>GET RINGTONE &lt;id&gt;</code></li>
	<li><code>SET RINGTONE &lt;id&gt; &lt;filePath + fileName&gt;[:idx]</code></li>
</ul>
<p><strong>Response</strong><br>
<code>RINGTONE &lt;id&gt; &lt;filePath + fileName&gt;</code></p>
<p><strong>Parameters</strong></p>
<ul>
	<li><code>id</code> – ringtone id. In the current release, the <id> is always ‘1’</id></li>
	<li><code>filePath</code> – ringtone file directory.</li>
	<li><code>fileName:idx</code> – ringtone file may either be .wav or .skype file format. <span class="caps">IDX</span> refers to the content number in .skype file formats (0,..)</li>
</ul>
<p><strong>Version</strong></p>
<ul>
	<li>Skype for Windows 1.3</li>
	<li>.skype files are supported since Skype for Windows 1.4</li>
	<li>Querying ringtone status is supported since Skype for Windows 1.4</li>
</ul>
<p><strong>Errors</strong></p>
<ul>
	<li><code>ERROR 115 Invalid ringtone</code><br>
Ringtone id is missing or invalid</li>
	<li><code>ERROR 111 File not found</code><br>
Ringtone file specified does not exist</li>
</ul>
<p><strong>Notes</strong></p>
<ul>
	<li>If the Skype default ringtone is used, the <code>GET</code> command returns its name with no filepath.</li>
	<li>.skype may be used instead of .wav files and can contain multiple contents enumerated by integer IDs (idx).</li>
</ul>
<p><strong>Example</strong></p>
<pre style="codeSample">-&gt; GET RINGTONE 1
&lt;- RINGTONE 1 call_in
-&gt; SET RINGTONE 1 C:/WINDOWS/Media/tada.wav
&lt;- RINGTONE 1 C:/WINDOWS/Media/tada.wav</pre>
<p><a name="COMMAND_RINGTONE_STATUS"></a></p>
<h4><span class="caps">GET</span> <span class="caps">RINGTONE</span> <span class="caps">STATUS</span></h4>
<p>This command queries if ringtones are enabled.</p>
<p><strong>Syntax</strong><br>
<code>-&gt; GET RINGTONE &lt;id&gt; STATUS</code></p>
<p><code>&lt;- RINGTONE &lt;id&gt; &lt;ON|OFF&gt;</code></p>
<p>Note that the <id> parameter is there for possible future use and must for now be always set to 1.</id></p>
<p><a name="COMMAND_SET_RINGTONE_STATUS"></a></p>
<h4><span class="caps">SET</span> <span class="caps">RINGTONE</span> <span class="caps">STATUS</span></h4>
<p>This command enables you to switch ringtone ON/<span class="caps">OFF</span>.</p>
<p><strong>Syntax:</strong><br>
*@→ <span class="caps">SET</span> <span class="caps">RINGTONE</span> <id> <span class="caps">STATUS</span> ON|OFF@</id></p>
<p>*@&lt;- <span class="caps">RINGTONE</span> <id> ON|OFF@</id></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; SET RINGTONE 1 STATUS OFF
&lt;- RINGTONE 1 OFF
-&gt; GET RINGTONE 1 STATUS
&lt;- RINGTONE 1 OFF
-&gt; SET RINGTONE 1 STATUS ON
&lt;- RINGTONE 1 ON
-&gt; GET RINGTONE 1 STATUS
&lt;- RINGTONE 1 ON
</pre>
<p>Note that the <id> parameter is there for possible future use and must for now be always set to 1.</id></p>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.1)</p>
<p><a name="COMMAND_GET_VIDEO_IN1"></a></p>
<h4><span class="caps">GET</span> VIDEO_IN</h4>
<p>This command queries or sets the device to be used in video calls. See <a href="#COMMAND_GET_VIDEO_IN"><span class="caps">GET</span> VIDEO_IN command</a> reference for more details.</p>
<p><a name="COMMAND_SET_PCSPEAKER"></a></p>
<h4><span class="caps">SET</span> <span class="caps">PCSPEAKER</span></h4>
<p>If no speakers are connected to a PC, it is possible to hear incoming Skype calls only when wearing a headset. Use the <code>SET PCSPEAKER</code> command to switch the PC speaker on or off.</p>
<p><strong>Syntax</strong></p>
<pre style="codeSample">-&gt; GET PCSPEAKER
-&gt; SET PCSPEAKER {ON|OFF} </pre>
<p><strong>Response</strong></p>
<pre style="codeSample">&lt;- PCSPEAKER {ON|OFF} </pre>
<p><a name="COMMAND_SET_AGC"></a></p>
<p><a name="COMMAND_SET_AEC"></a></p>
<h4><span class="caps">SET</span> <span class="caps">AGC</span> and <span class="caps">SET</span> <span class="caps">AEC</span></h4>
<p><strong>NB!</strong> As of version 3.6 these commands no longer actually function. The <span class="caps">API</span>
 commands are still valid, for backward compatibility reasons, but 
turning echo cancellation or microphone gain off programmatically is 
disabled in the library.</p>
<p>Skype uses automatic gain control (<span class="caps">AGC</span>) to adjust microphone level to the volume the user speaks at. Skype uses automatic echo cancellation (<span class="caps">AEC</span>) to eliminate the echo that occurs if a microphone “hears” the other user’s voice on the loudspeaker.</p>
<p><strong>Important:</strong> Disabling these functions can impair call
 quality and is not recommended in standard implementations. However, 
some audio devices have in-built <span class="caps">AGC</span>/<span class="caps">AEC</span> mechanisms and, in these circumstances, it can be necessary to deactivate <span class="caps">AGC</span> and <span class="caps">AEC</span> on Skype. If you disable <span class="caps">AGC</span>/<span class="caps">AEC</span> on Skype, ensure that the client defaults to enabled if the audio device is removed.</p>
<p>To query whether <span class="caps">AGC</span> and <span class="caps">AEC</span> are on:</p>
<p><strong>Syntax</strong></p>
<pre style="codeSample">-&gt; GET AGC
-&gt; GET AEC</pre>
<p><strong>Response</strong></p>
<pre style="codeSample">&lt;- AGC { ON | OFF }
&lt;- AEC { ON | OFF } </pre>
<p>To set <span class="caps">AGC</span> and <span class="caps">AEC</span> on and off:</p>
<p><strong>Syntax</strong></p>
<pre style="codeSample">-&gt; SET AGC ON | OFF
-&gt; SET AEC ON | OFF</pre>
<p><strong>Response</strong></p>
<pre style="codeSample">&lt;- AGC ON | OFF
&lt;- AEC ON | OFF</pre>
<p><strong>Error codes</strong></p>
<pre style="codeSample">ERROR 569 - GET AEC: target not allowed
ERROR 570 - SET AEC: invalid value
ERROR 571 - GET AGC: target not allowed
ERROR 572 - SET AGC: invalid value</pre>
<p><strong>Version</strong><br>
Protocol 5</p>
<p><a name="COMMAND_RESETIDLETIMER"></a></p>
<h4><span class="caps">RESETIDLETIMER</span></h4>
<p>This command resets the idle timer (the one that turns user’s online status to “Away”).</p>
<p>Note that there is currently no way of retrieving actual “Show my 
away when inactive for X minutes” setting from user profile. If you want
 to ensure the user status stays permanently online, it is sufficient to
 send <code>RESETIDLETIMER</code> every 59 seconds as it is impossible to set the auto-idle timer below 1 minute.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; RESETIDLETIMER</code></p>
<p><code>&lt;- RESETIDLETIMER</code></p>
<p><strong>Version:</strong><br>
<span class="caps">API</span> version 3.2 (protocol 7)</p>
<p><a name="COMMAND_GET_AUTOAWAY"></a></p>
<h4><span class="caps">GET</span> <span class="caps">AUTOAWAY</span></h4>
<p>Returns the current state of automatic online status switcher.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; GET AUTOAWAY</code></p>
<p><code>&lt;- AUTOAWAY ON</code></p>
<p><a name="COMMAND_SET_AUTOAWAY"></a></p>
<h4><span class="caps">SET</span> <span class="caps">AUTOAWAY</span></h4>
<p>Sets the state of automatic online status switcher.</p>
<p><strong>Syntax:</strong><br>
<code>-&gt; SET AUTOAWAY ON|OFF</code></p>
<p><code>&lt;- AUTOAWAY ON|OFF</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">-&gt; SET AUTOAWAY ON
&lt;- AUTOAWAY ON
-&gt; SET AUTOAWAY OFF
&lt;- AUTOAWAY OFF
-&gt; SET AUTOAWAY BANANA
&lt;- ERROR 53 SET AUTOAWAY invalid value
</pre>
<p><a name="NOTIFICATIONS"></a></p>
<h3>Notifications</h3>
<p>Notifications are sent by Skype if an object changes or if the value of a property is requested with a <code>GET</code> command. Also, if a property value is changed by a <code>SET</code>
 command, the change is confirmed with a notification. Notifications 
occur in the same manner, whether the related change is initiatied by 
the Skype UI or by an <span class="caps">API</span> client. There are two main types of notification:</p>
<ul>
	<li><a href="#STATUS_OBJECTS">Object notifications</a> occur when an 
object is created (for example due to an incoming call or chat), if an 
object changes, or if a property is queried.</li>
	<li><a href="#STATUS_STATUS">Status notifications</a> are broadcast by 
Skype after an initial connection is made or if a parameter changes. 
These notifications can be queried at any time with the <code>GET</code> command.</li>
</ul>
<p><a name="STATUS_OBJECTS"></a></p>
<h4>Object notifications</h4>
<p>This section contains the Skype object notifications.</p>
<p><a name="STATUS_CALL"></a></p>
<h5>Call notifications</h5>
<p>Call notifications are sent on incoming calls or when an active calls
 changes. Clients can monitor call events to detect incoming calls and 
act on them (for example, to answer automatically).</p>
<p><strong>Syntax</strong><br>
<code>CALL &lt;id&gt; property &lt;value&gt;</code></p>
<p><strong>Parameters</strong><br>
Refer to the <a href="#OBJECT_CALL"><span class="caps">CALL</span> object</a> for available properties and property values.</p>
<p><a name="STATUS_USER"></a></p>
<h5>User notifications</h5>
<p>User notifications are the most frequent notifications and include last-seen timestamps and user property information.</p>
<p><strong>Syntax</strong><br>
<code>USER &lt;id&gt; property &lt;value&gt;</code></p>
<p><strong>Parameters</strong><br>
Refer to the <a href="#OBJECT_USER"><span class="caps">USER</span> object</a> for available properties and property values.</p>
<p><strong>Note</strong><br>
User notifications are reported also for users who are not in the contactlist which the client can ignore.</p>
<p><a name="STATUS_CHAT"></a></p>
<h5>Chat notifications</h5>
<p>Chat notification is sent when a chat is created, chat properties or 
members change, or a new message is posted into chat. A new message also
 triggers a chatmessage notification.</p>
<p><strong>Syntax:</strong><br>
<code>CHAT &lt;id&gt; property &lt;value&gt;</code></p>
<p><strong>Parameters</strong><br>
Refer to the <a href="#OBJECT_CHAT"><span class="caps">CHAT</span> object</a> for available properties and property values.</p>
<p>In version 3.6 additional notification  messages were added on chat window open and close events.</p>
<p><strong>Syntax:</strong><br>
<code>CHAT &lt;id&gt; CLOSED|OPEN</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">&lt;- CHAT #anappo2/$anappo;87ba791d4025455c CLOSED
&lt;- CHAT #anappo2/$anappo;87ba791d4025455c OPENED
</pre>
<p><a name="STATUS_CHATMESSAGE"></a></p>
<h5>Chatmessage notifications</h5>
<p>Chatmessage notification is sent when a new message arrives. The client can monitor these messages to display received messages.</p>
<p><strong>Syntax</strong><br>
<code>CHATMESSAGE &lt;id&gt; property &lt;value&gt;</code><br>
<code>MESSAGE &lt;id&gt; property &lt;value&gt;</code></p>
<p><strong>Parameters</strong><br>
Refer to the <a href="#OBJECT_CHATMESSAGE"><span class="caps">CHATMESSAGE</span> object</a> for available properties and property values.</p>
<p><strong>Notes</strong><br>
The <code>MESSAGE</code> command is deprecated in Protocol 3</p>
<p><a name="STATUS_VOICEMAIL"></a></p>
<h5>Voicemail notifications</h5>
<p>Voicemail notification is sent when a new voicemail is received or recorded.</p>
<p><strong>Syntax</strong><br>
<code>VOICEMAIL &lt;id&gt; property &lt;value&gt;</code></p>
<p><strong>Parameters</strong><br>
Refer to the <a href="#OBJECT_VOICEMAIL"><span class="caps">VOICEMAIL</span> object</a> for available properties and property values.</p>
<p><a name="STATUS_APP"></a></p>
<h5>Application notifications</h5>
<p>Application notifications are sent when a new application requests to connect, or when data is sent or received.</p>
<p><strong>Syntax</strong><br>
<code>APPLICATION &lt;appname&gt; property &lt;value&gt;</code></p>
<p><strong>Parameters</strong><br>
Refer to the <a href="#OBJECT_APPLICATION"><span class="caps">APPLICATION</span> object</a> for available properties and property values.</p>
<p><a name="STATUS_STATUS"></a></p>
<h4>Status notifications</h4>
<p>This section contains the Skype status notifications.</p>
<p><a name="STATUS_CALLHISTORY"></a></p>
<h5>Callhistory change notification</h5>
<p>This notification occurs when call history changes and needs to be 
reloaded. This change occurs when the call history or a selection of it 
has been deleted.</p>
<p><strong>Syntax</strong><br>
<code>CALLHISTORYCHANGED</code></p>
<p><a name="STATUS_IMHISTORY"></a></p>
<h5>Instant message history change</h5>
<p>This notification occurs when instant message history changes and 
needs to be reloaded. It occurs only when all IM history is deleted.</p>
<p><strong>Syntax</strong><br>
<code>IMHISTORYCHANGED</code></p>
<p><a name="STATUS_CONTACTLIST"></a></p>
<h5>Contactlist change notification</h5>
<p>This notification occurs if a user is added to or deleted from contacts or has authorized the current user as a contact.</p>
<p><strong>Syntax</strong><br>
<code>USER &lt;username&gt; BUDDYSTATUS &lt;status&gt;</code></p>
<p><strong>Parameters</strong><br>
Refer to the <a href="#OBJECT_USER"><span class="caps">USER</span> object</a> for available status values.</p>
<p><strong>Example</strong></p>
<pre style="codeSample">// User has been added to contacts, pending authorisation.
&lt;- USER pamela BUDDYSTATUS 2
// User has authorized current user
&lt;- USER pamela BUDDYSTATUS 3
// User has been deleted from contacts.
&lt;- USER pamela BUDDYSTATUS 1</pre>
<p><a name="STATUS_GROUP_NROFUSERS"></a></p>
<h5>Contact group change notification</h5>
<p>This notification is sent when <span class="caps">GROUP</span> <span class="caps">USERS</span> changes – when a user comes online or goes offline.</p>
<p><strong>Syntax:</strong><br>
<code>&lt;- GROUP &lt;group_id&gt; NROFUSERS &lt;n&gt;</code></p>
<p><strong>Example:</strong></p>
<pre style="codeSample">&lt;- GROUP 56 NROFUSERS 19
&lt;- USER test ONLINESTATUS OFFLINE
</pre>
<p><strong>Version</strong><br>
Protocol 7 (<span class="caps">API</span> version 3.0)</p>
<p><a name="STATUS_USER1"></a></p>
<h5>User status notification</h5>
<p><strong>Syntax</strong><br>
<code>USERSTATUS status</code></p>
<p><strong>Parameters</strong><br>
<code>status</code> – value for user status. Possible values:</p>
<ul>
	<li><code>UNKNOWN</code> – no status information for current user.</li>
	<li><code>ONLINE</code> – current user is online.</li>
	<li><code>OFFLINE</code> – current user is offline.</li>
	<li><code>SKYPEME</code> – current user is in “Skype Me” mode (Protocol 2).</li>
	<li><code>AWAY</code> – current user is away.</li>
	<li><code>NA</code> – current user is not available.</li>
	<li><code>DND</code> – current user is in “Do not disturb” mode.</li>
	<li><code>INVISIBLE</code> – current user is invisible to others.</li>
	<li><code>LOGGEDOUT</code> – current user is logged out. Clients are detached.</li>
</ul>
<p><a name="STATUS_CONNECTION"></a></p>
<h5>Connection status</h5>
<p><strong>Syntax</strong><br>
<code>CONNSTATUS status</code></p>
<p><strong>Parameters</strong><br>
<code>status</code> – value for connection status. Possible values:</p>
<ul>
	<li><code>OFFLINE</code></li>
	<li><code>CONNECTING</code></li>
	<li><code>PAUSING</code></li>
	<li><code>ONLINE</code></li>
	<li><code>LOGGEDOUT</code> – current user is logged out.</li>
</ul>
<p><a name="STATUS_USERHANDLE"></a></p>
<h5>Current user handle</h5>
<p><strong>Syntax</strong><br>
<code>CURRENTUSERHANDLE &lt;username&gt;</code></p>
<p><strong>Example</strong><br>
<code>CURRENTUSERHANDLE banana</code></p>
<p><a name="STATUS_CONTACTFOCUS"></a></p>
<h5>Contact list focus nofication</h5>
<p>This notification occurs when contactlist focus changes:</p>
<p><strong>Syntax</strong></p>
<ul>
	<li><code>CONTACTS FOCUSED username</code> – when contact gains focus</li>
	<li><code>CONTACTS FOCUSED</code> – when loses focus</li>
</ul>
<p><a name="ERRORS"></a></p>
<h3>Error codes</h3>
<p>Skype sends an error response when it encounters an issue such as 
incorrect commands or internal inconsistencies. The error code is a 
number that uniquely identifies the error condition and the <code>DESC</code> is an optional brief description of the issue.</p>
<p>Currently the following error codes are defined:</p>
<table>
	<tbody><tr>
		<td><strong>Code</strong></td>
		<td><strong>Description</strong></td>
		<td><strong>Possible reasons</strong></td>
	</tr>
	<tr>
		<td>1</td>
		<td>General syntax error</td>
		<td>Command missing (e.g. " " sent as command)</td>
	</tr>
	<tr>
		<td>2</td>
		<td>Unknown command</td>
		<td>Command spelled incorrect (e.g. “<span class="caps">GRT</span>” send instead of “<span class="caps">GET</span>”)</td>
	</tr>
	<tr>
		<td>3</td>
		<td>Search: unknown <span class="caps">WHAT</span></td>
		<td>Search target is missing or misspelled</td>
	</tr>
	<tr>
		<td>4</td>
		<td>Empty target not allowed</td>
		<td>&amp;nspb;</td>
	</tr>
	<tr>
		<td>5</td>
		<td>Search <span class="caps">CALLS</span>: invalid target</td>
		<td>An unpermitted character (e.g. “!”, “#”, “$” etc.) was used in the target username.</td>
	</tr>
	<tr>
		<td>6</td>
		<td><span class="caps">SEARCH</span> <span class="caps">MISSEDCALLS</span>: target not allowed</td>
		<td>e.g. “<span class="caps">SEARCH</span> <span class="caps">MISSEDCALLS</span> echo123”</td>
	</tr>
	<tr>
		<td>7</td>
		<td><span class="caps">GET</span>: invalid <span class="caps">WHAT</span></td>
		<td>Object/property name missing or misspelled</td>
	</tr>
	<tr>
		<td>8</td>
		<td>Invalid user handle</td>
		<td><span class="caps">USERNAME</span> missing or includes a not permitted character (e.g. “<span class="caps">GET</span> <span class="caps">USER</span> ! <span class="caps">HANDLE</span>”)</td>
	</tr>
	<tr>
		<td>9</td>
		<td>Unknown user</td>
		<td></td>
	</tr>
	<tr>
		<td>10</td>
		<td>Invalid <span class="caps">PROP</span></td>
		<td>Property name and/or ID missing or misspelled</td>
	</tr>
	<tr>
		<td>11</td>
		<td>Invalid call id</td>
		<td>Call ID missing or misspelled (must be a numeric value)</td>
	</tr>
	<tr>
		<td>12</td>
		<td>Unknown call</td>
		<td>Nonexistant call ID used</td>
	</tr>
	<tr>
		<td>13</td>
		<td>Invalid <span class="caps">PROP</span></td>
		<td>Returned to command <span class="caps">GET</span> <span class="caps">CALL</span> id PARTNER_DISPLAYNAME. Property name missing or misspelled</td>
	</tr>
	<tr>
		<td>14</td>
		<td>Invalid message id</td>
		<td><span class="caps">GET</span> – Message ID missing or misspelled (must be a numeric value)</td>
	</tr>
	<tr>
		<td>15</td>
		<td>Unknown message</td>
		<td>Nonexistant message ID used in <span class="caps">GET</span> command</td>
	</tr>
	<tr>
		<td>16</td>
		<td>Invalid <span class="caps">PROP</span></td>
		<td>Returned to command <span class="caps">GET</span> <span class="caps">MESSAGE</span> id PARTNER_DISPLAYNAME. Property name missing or misspelled</td>
	</tr>
	<tr>
		<td>17</td>
		<td>(Not in use)</td>
		<td></td>
	</tr>
	<tr>
		<td>18</td>
		<td><span class="caps">SET</span>: invalid <span class="caps">WHAT</span></td>
		<td>Property name missing or misspelled</td>
	</tr>
	<tr>
		<td>19</td>
		<td>Invalid call id</td>
		<td>Call ID missing or misspelled (must be a numeric value)</td>
	</tr>
	<tr>
		<td>20</td>
		<td>Unknown call</td>
		<td>Nonexistant call ID used</td>
	</tr>
	<tr>
		<td>21</td>
		<td>Unknown/disallowed call prop</td>
		<td><span class="caps">SET</span> <span class="caps">CALL</span> value incorrect or misspelled (e.g. “<span class="caps">SET</span> <span class="caps">CALL</span> 15 <span class="caps">STATUS</span> <span class="caps">ONHOL</span>”)</td>
	</tr>
	<tr>
		<td>22</td>
		<td>Cannot hold this call at the moment</td>
		<td>Trying to hold a call that is not in progress.</td>
	</tr>
	<tr>
		<td>23</td>
		<td>Cannot resume this call at the moment</td>
		<td>Trying to resume/answer a call that is not in progress.</td>
	</tr>
	<tr>
		<td>24</td>
		<td>Cannot hangup inactive call</td>
		<td>Trying to hang up a call that is not in progress.</td>
	</tr>
	<tr>
		<td>25</td>
		<td>Unknown <span class="caps">WHAT</span></td>
		<td>Property name missing or misspelled (e.g. “<span class="caps">SET</span> <span class="caps">CALL</span> 15 <span class="caps">STATU</span> <span class="caps">ONHOLD</span>”)</td>
	</tr>
	<tr>
		<td>26</td>
		<td>Invalid user handle</td>
		<td>Target username missing or includes not permitted symbols (e.g. "MESSAGE ")</td>
	</tr>
	<tr>
		<td>27</td>
		<td>Invalid version number</td>
		<td>Invalid protocol number (e.g. “<span class="caps">PROTOCOL</span> -12,9”)</td>
	</tr>
	<tr>
		<td>28</td>
		<td>Unknown userstatus</td>
		<td>Unknown or misspelled value for user status (e.g. “<span class="caps">SET</span> <span class="caps">USERSTATUS</span> <span class="caps">RICH</span>”)</td>
	</tr>
	<tr>
		<td>29</td>
		<td><span class="caps">SEARCH</span> what: target not allowed</td>
		<td>Target is not permitted; e.g. “<span class="caps">SEARCH</span> <span class="caps">MISSEDMESSAGES</span> echo123”</td>
	</tr>
	<tr>
		<td>30</td>
		<td>Invalid message id</td>
		<td><span class="caps">SET</span> – Message ID missing or misspelled (must be a numeric value)</td>
	</tr>
	<tr>
		<td>31</td>
		<td>Unknown message id</td>
		<td>Nonexistant message ID used in <span class="caps">SET</span> command</td>
	</tr>
	<tr>
		<td>32</td>
		<td>Invalid <span class="caps">WHAT</span></td>
		<td>Property missing or misspelled</td>
	</tr>
	<tr>
		<td>33</td>
		<td>invalid parameter</td>
		<td>Unknown or misspelled value for mute (e.g. “<span class="caps">SET</span> <span class="caps">MUTE</span> O”)</td>
	</tr>
	<tr>
		<td>34</td>
		<td>invalid user handle</td>
		<td>Target username/number missing (e.g. "CALL ")</td>
	</tr>
	<tr>
		<td>35</td>
		<td>Not connected</td>
		<td></td>
	</tr>
	<tr>
		<td>36</td>
		<td>Not online</td>
		<td></td>
	</tr>
	<tr>
		<td>37</td>
		<td>Not connected</td>
		<td></td>
	</tr>
	<tr>
		<td>38</td>
		<td>Not online</td>
		<td></td>
	</tr>
	<tr>
		<td>39</td>
		<td>user blocked</td>
		<td>Destination user is blocked by caller. Also given, if trying to call to a blocked user</td>
	</tr>
	<tr>
		<td>40</td>
		<td>Unknown privilege</td>
		<td>Privilege is either misspelled or does not exist (e.g. “<span class="caps">GET</span> <span class="caps">PRIVILEGE</span> SkypeOut”).</td>
	</tr>
	<tr>
		<td>41</td>
		<td>Call not active</td>
		<td>Trying to send <span class="caps">DTMF</span>, when call is not active.</td>
	</tr>
	<tr>
		<td>42</td>
		<td>Invalid <span class="caps">DTMF</span> code</td>
		<td>Invalid <span class="caps">DTMF</span> code is sent. Valid symbols for <span class="caps">DTMF</span> codes are {0..9,#,*}</td>
	</tr>
	<tr>
		<td>43</td>
		<td>cannot send empty message</td>
		<td>Empty message is tried to sent, e.g. “<span class="caps">MESSAGE</span> echo123”.</td>
	</tr>
	<tr>
		<td>50</td>
		<td>cannot set device</td>
		<td>An error occurred when changing audio device</td>
	</tr>
	<tr>
		<td>51</td>
		<td>invalid parameter</td>
		<td>Parameter to <span class="caps">READY</span> command is not <span class="caps">YES</span> or NO</td>
	</tr>
	<tr>
		<td>52</td>
		<td>invalid parameter</td>
		<td>Parameter to <span class="caps">HOOK</span> command is not ON or <span class="caps">OFF</span>. NB! <span class="caps">HOOK</span> command is no longer supported or relevant.</td>
	</tr>
	<tr>
		<td>53</td>
		<td>invalid value</td>
		<td>Parameter to <span class="caps">SET</span> <span class="caps">AUTOAWAY</span> is not ON or <span class="caps">OFF</span></td>
	</tr>
	<tr>
		<td>66</td>
		<td>Not connected</td>
		<td>Skype is not connected i.e. user status is “<span class="caps">LOGGEDOUT</span>”</td>
	</tr>
	<tr>
		<td>67</td>
		<td>Target not allowed with <span class="caps">SEARCH</span> <span class="caps">FRIENDS</span></td>
		<td><span class="caps">SEARCH</span> <span class="caps">FRIENDS</span> had a parameter</td>
	</tr>
	<tr>
		<td>68</td>
		<td>Access denied</td>
		<td></td>
	</tr>
	<tr>
		<td>69</td>
		<td>Invalid open what</td>
		<td><span class="caps">OPEN</span> command had missing or misspelled <span class="caps">TARGET</span> e.g. “<span class="caps">OPEN</span> IN”</td>
	</tr>
	<tr>
		<td>70</td>
		<td>Invalid handle</td>
		<td><span class="caps">OPEN</span> IM parameter <span class="caps">USERNAME</span> is missing or contains not permitted symbols</td>
	</tr>
	<tr>
		<td>71</td>
		<td>Invalid conference participant NO</td>
		<td>Conference participant’s number is either too large or invalid.</td>
	</tr>
	<tr>
		<td>72</td>
		<td>Cannot create conference</td>
		<td></td>
	</tr>
	<tr>
		<td>73</td>
		<td>too many participants</td>
		<td>Conference is initiated to more than 4 people.</td>
	</tr>
	<tr>
		<td>74</td>
		<td>Invalid key</td>
		<td>Key name in BTN_PRESSED or BTN_RELEASED command is invalid</td>
	</tr>
	<tr>
		<td>91</td>
		<td>call error</td>
		<td>Cannot call an emergency number</td>
	</tr>
	<tr>
		<td>92</td>
		<td>call error</td>
		<td>The called number is not a valid <span class="caps">PSTN</span> number</td>
	</tr>
	<tr>
		<td>93</td>
		<td>call error</td>
		<td>Invalid Skype Name</td>
	</tr>
	<tr>
		<td>94</td>
		<td>call error</td>
		<td>Cannot call yourself</td>
	</tr>
	<tr>
		<td>95</td>
		<td>Internal error</td>
		<td>Destination user is blocked by caller right after call initialization</td>
	</tr>
	<tr>
		<td>96</td>
		<td>Internal error</td>
		<td>An outgoing call exists in <span class="caps">ROUTING</span>/<span class="caps">RINGING</span>/<span class="caps">EARLYMEDIA</span> state</td>
	</tr>
	<tr>
		<td>97</td>
		<td>Internal error</td>
		<td>Internal error</td>
	</tr>
	<tr>
		<td>98</td>
		<td>Internal error</td>
		<td>Internal error</td>
	</tr>
	<tr>
		<td>99</td>
		<td>Internal error</td>
		<td>Internal error</td>
	</tr>
	<tr>
		<td>100</td>
		<td>Internal error</td>
		<td>Internal error</td>
	</tr>
	<tr>
		<td>101</td>
		<td>Internal error</td>
		<td>A call to the destination user is already ongoing</td>
	</tr>
	<tr>
		<td>103</td>
		<td>Cannot hold</td>
		<td>Internal error</td>
	</tr>
	<tr>
		<td>104</td>
		<td>Cannot resume</td>
		<td>Internal error</td>
	</tr>
	<tr>
		<td>105</td>
		<td>Invalid chat name</td>
		<td>Chat name missing or misspelled</td>
	</tr>
	<tr>
		<td>106</td>
		<td>Invalid <span class="caps">PROP</span></td>
		<td>Property name missing or misspelled for <span class="caps">CHAT</span> or <span class="caps">CHATMESSAGE</span></td>
	</tr>
	<tr>
		<td>107</td>
		<td>Target not allowed with <span class="caps">CHATS</span></td>
		<td>No parameters allowed to <span class="caps">SEARCH</span> <span class="caps">CHATS</span></td>
	</tr>
	<tr>
		<td>108</td>
		<td>User not contact</td>
		<td><span class="caps">TRANSFER</span> can only be initiated to contacts</td>
	</tr>
	<tr>
		<td>109</td>
		<td>directory doesn’t exist</td>
		<td>Directory given as a parameter to <span class="caps">TRANSFER</span> command does not exist</td>
	</tr>
	<tr>
		<td>110</td>
		<td>No voicemail capability</td>
		<td>User given as a parameter to <span class="caps">VOICEMAIL</span> command doesn’t have voicemail capability</td>
	</tr>
	<tr>
		<td>111</td>
		<td>File not found</td>
		<td>File given as argument to <span class="caps">SET</span> <span class="caps">AVATAR</span> or <span class="caps">SET</span> <span class="caps">RINGTONE</span> command doesn’t exist</td>
	</tr>
	<tr>
		<td>112</td>
		<td>Too many targets</td>
		<td>Number of target users for <span class="caps">OPEN</span> <span class="caps">FILETRANSFER</span> command exceeds simultaneous filetransfer limit</td>
	</tr>
	<tr>
		<td>113</td>
		<td>Close: invalid <span class="caps">WHAT</span></td>
		<td>Invalid argument to <span class="caps">CLOSE</span> command</td>
	</tr>
	<tr>
		<td>114</td>
		<td>Invalid avatar</td>
		<td><span class="caps">GET</span> or <span class="caps">SET</span> <span class="caps">AVATAR</span> avatar index invalid</td>
	</tr>
	<tr>
		<td>115</td>
		<td>Invalid ringtone</td>
		<td><span class="caps">GET</span> or <span class="caps">SET</span> <span class="caps">RINGTONE</span> ringtone index invalid</td>
	</tr>
	<tr>
		<td>500</td>
		<td><span class="caps">CHAT</span>: Invalid chat name given</td>
		<td></td>
	</tr>
	<tr>
		<td>501</td>
		<td><span class="caps">CHAT</span>: No chat found for given chat</td>
		<td></td>
	</tr>
	<tr>
		<td>502</td>
		<td><span class="caps">CHAT</span>: No action name given</td>
		<td></td>
	</tr>
	<tr>
		<td>503</td>
		<td><span class="caps">CHAT</span>: Invalid or unknown action</td>
		<td></td>
	</tr>
	<tr>
		<td>504</td>
		<td><span class="caps">CHAT</span>: action failed</td>
		<td></td>
	</tr>
	<tr>
		<td>505</td>
		<td><span class="caps">CHAT</span>: <span class="caps">LEAVE</span> does not take arguments</td>
		<td></td>
	</tr>
	<tr>
		<td>506</td>
		<td><span class="caps">CHAT</span>: <span class="caps">ADDMEMBERS</span>: invalid/missing user handle(s) as arguments</td>
		<td></td>
	</tr>
	<tr>
		<td>507</td>
		<td><span class="caps">CHAT</span>: <span class="caps">CREATE</span>: invalid/missing user handle(s) as argument</td>
		<td></td>
	</tr>
	<tr>
		<td>508</td>
		<td><span class="caps">CHAT</span>: <span class="caps">CREATE</span>: opening a dialog to the given user failed</td>
		<td></td>
	</tr>
	<tr>
		<td>509</td>
		<td>No chat name given</td>
		<td></td>
	</tr>
	<tr>
		<td>510</td>
		<td>Invalid/uknown chat name given</td>
		<td></td>
	</tr>
	<tr>
		<td>511</td>
		<td>Sending a message to chat failes</td>
		<td></td>
	</tr>
	<tr>
		<td>512</td>
		<td>Invalid voicemail id</td>
		<td></td>
	</tr>
	<tr>
		<td>513</td>
		<td>Invalid voicemail object</td>
		<td></td>
	</tr>
	<tr>
		<td>514</td>
		<td>No voicemail property given</td>
		<td></td>
	</tr>
	<tr>
		<td>515</td>
		<td>Assigning speeddial property failed</td>
		<td></td>
	</tr>
	<tr>
		<td>516</td>
		<td>Invalid value given to <span class="caps">ISAUTHORIZED</span>/<span class="caps">ISBLOCKED</span></td>
		<td></td>
	</tr>
	<tr>
		<td>517</td>
		<td>Changing <span class="caps">ISAUTHORIZED</span>/<span class="caps">ISBLOCKED</span> failed</td>
		<td></td>
	</tr>
	<tr>
		<td>518</td>
		<td>Invalid status given for <span class="caps">BUDDYSTATUS</span></td>
		<td></td>
	</tr>
	<tr>
		<td>519</td>
		<td>Updating <span class="caps">BUDDYSTATUS</span> failed</td>
		<td></td>
	</tr>
	<tr>
		<td>520</td>
		<td><span class="caps">CLEAR</span> needs a target</td>
		<td></td>
	</tr>
	<tr>
		<td>521</td>
		<td>Invalid/unknown <span class="caps">CLEAR</span> target</td>
		<td></td>
	</tr>
	<tr>
		<td>522</td>
		<td><span class="caps">CLEAR</span> <span class="caps">CHATHISTORY</span> takes no arguments</td>
		<td></td>
	</tr>
	<tr>
		<td>523</td>
		<td><span class="caps">CLEAR</span> <span class="caps">VOICEMAILHISTORY</span> takes no arguments</td>
		<td></td>
	</tr>
	<tr>
		<td>524</td>
		<td><span class="caps">CLEAR</span> <span class="caps">CALLHISTORY</span>: missing target argument</td>
		<td></td>
	</tr>
	<tr>
		<td>525</td>
		<td><span class="caps">CLEAR</span> <span class="caps">CALLHISTORY</span>: invalid handle argument</td>
		<td></td>
	</tr>
	<tr>
		<td>526</td>
		<td><span class="caps">ALTER</span>: no object type given</td>
		<td></td>
	</tr>
	<tr>
		<td>527</td>
		<td><span class="caps">ALTER</span>: unknown object type given</td>
		<td></td>
	</tr>
	<tr>
		<td>528</td>
		<td><span class="caps">VOICEMAIL</span>: No proper voicemail ID given</td>
		<td></td>
	</tr>
	<tr>
		<td>529</td>
		<td><span class="caps">VOICEMAIL</span>: Invalid voicemail ID given</td>
		<td></td>
	</tr>
	<tr>
		<td>530</td>
		<td><span class="caps">VOICEMAIL</span>: No action given</td>
		<td></td>
	</tr>
	<tr>
		<td>531</td>
		<td><span class="caps">VOICEMAIL</span>: Action failed</td>
		<td></td>
	</tr>
	<tr>
		<td>532</td>
		<td><span class="caps">VOICEMAIL</span>: Unknown action</td>
		<td></td>
	</tr>
	<tr>
		<td>534</td>
		<td><span class="caps">SEARCH</span> <span class="caps">GREETING</span>: invalid handle</td>
		<td></td>
	</tr>
	<tr>
		<td>535</td>
		<td><span class="caps">SEARCH</span> <span class="caps">GREETING</span>: unable to get greeting</td>
		<td></td>
	</tr>
	<tr>
		<td>536</td>
		<td><span class="caps">CREATE</span>: no object type given</td>
		<td></td>
	</tr>
	<tr>
		<td>537</td>
		<td><span class="caps">CREATE</span> : Unknown object type given.</td>
		<td></td>
	</tr>
	<tr>
		<td>538</td>
		<td><span class="caps">DELETE</span> : no object type given.</td>
		<td></td>
	</tr>
	<tr>
		<td>539</td>
		<td><span class="caps">DELETE</span> : unknown object type given.</td>
		<td></td>
	</tr>
	<tr>
		<td>540</td>
		<td><span class="caps">CREATE</span> <span class="caps">APPLICATION</span> : missing of invalid name.</td>
		<td></td>
	</tr>
	<tr>
		<td>541</td>
		<td><span class="caps">APPLICATION</span> : Operation Failed.</td>
		<td></td>
	</tr>
	<tr>
		<td>542</td>
		<td><span class="caps">DELETE</span> <span class="caps">APPLICATION</span> : missing or invalid application name.</td>
		<td></td>
	</tr>
	<tr>
		<td>543</td>
		<td><span class="caps">GET</span> <span class="caps">APPLICATION</span> : missing or invalid application name.</td>
		<td></td>
	</tr>
	<tr>
		<td>544</td>
		<td><span class="caps">GET</span> <span class="caps">APPLICATION</span> : missing or invalid property name.</td>
		<td></td>
	</tr>
	<tr>
		<td>545</td>
		<td><span class="caps">ALTER</span> <span class="caps">APPLICATION</span> : missing or invalid action.</td>
		<td></td>
	</tr>
	<tr>
		<td>546</td>
		<td><span class="caps">ALTER</span> <span class="caps">APPLICATION</span> : Missing or invalid action</td>
		<td></td>
	</tr>
	<tr>
		<td>547</td>
		<td><span class="caps">ALTER</span> <span class="caps">APPLICATION</span> <span class="caps">CONNECT</span>: Invalid user handle</td>
		<td></td>
	</tr>
	<tr>
		<td>548</td>
		<td><span class="caps">ALTER</span> <span class="caps">APPLICATION</span> <span class="caps">DISCONNECT</span>: Invalid stream identifier</td>
		<td></td>
	</tr>
	<tr>
		<td>549</td>
		<td><span class="caps">ALTER</span> <span class="caps">APPLICATION</span> <span class="caps">WRITE</span> : Missing or invalid stream identifier</td>
		<td></td>
	</tr>
	<tr>
		<td>550</td>
		<td><span class="caps">ALTER</span> <span class="caps">APPLICATION</span> <span class="caps">READ</span> : Missing or invalid stream identifier</td>
		<td></td>
	</tr>
	<tr>
		<td>551</td>
		<td><span class="caps">ALTER</span> <span class="caps">APPLICATION</span> <span class="caps">DATAGRAM</span> : Missing or invalid stream identifier</td>
		<td></td>
	</tr>
	<tr>
		<td>552</td>
		<td><span class="caps">SET</span> <span class="caps">PROFILE</span> : invalid property profile given</td>
		<td></td>
	</tr>
	<tr>
		<td>553</td>
		<td><span class="caps">SET</span> <span class="caps">PROFILE</span> CALL_SEND_TO_VM : no voicemail privledge, can’t forward to voicemail.</td>
		<td></td>
	</tr>
	<tr>
		<td>555</td>
		<td><span class="caps">CALL</span>: No proper call ID given</td>
		<td></td>
	</tr>
	<tr>
		<td>556</td>
		<td><span class="caps">CALL</span>: Invalid call ID given"</td>
		<td></td>
	</tr>
	<tr>
		<td>557</td>
		<td><span class="caps">CALL</span>: No action given</td>
		<td></td>
	</tr>
	<tr>
		<td>558</td>
		<td><span class="caps">CALL</span>: Missing or invalid arguments</td>
		<td></td>
	</tr>
	<tr>
		<td>559</td>
		<td><span class="caps">CALL</span>: Action failed</td>
		<td></td>
	</tr>
	<tr>
		<td>560</td>
		<td><span class="caps">CALL</span>: Unknown action</td>
		<td></td>
	</tr>
	<tr>
		<td>561</td>
		<td><span class="caps">SEARCH</span> <span class="caps">GROUPS</span>: invalid target"</td>
		<td></td>
	</tr>
	<tr>
		<td>562</td>
		<td><span class="caps">SEARCH</span> <span class="caps">GROUPS</span>: Invalid group id</td>
		<td></td>
	</tr>
	<tr>
		<td>563</td>
		<td><span class="caps">SEARCH</span> <span class="caps">GROUPS</span>: Invalid group object</td>
		<td></td>
	</tr>
	<tr>
		<td>564</td>
		<td><span class="caps">SEARCH</span> <span class="caps">GROUPS</span>: Invalid group property given</td>
		<td></td>
	</tr>
	<tr>
		<td>569</td>
		<td><span class="caps">GET</span> <span class="caps">AEC</span>: target not allowed"</td>
		<td></td>
	</tr>
	<tr>
		<td>570</td>
		<td><span class="caps">SET</span> <span class="caps">AEC</span>: invalid value"</td>
		<td></td>
	</tr>
	<tr>
		<td>571</td>
		<td><span class="caps">GET</span> <span class="caps">AGC</span>: target not allowed"</td>
		<td></td>
	</tr>
	<tr>
		<td>572</td>
		<td><span class="caps">SET</span> <span class="caps">AGC</span>: invalid value"</td>
		<td></td>
	</tr>
	<tr>
		<td>9901</td>
		<td>Internal error</td>
		<td></td>
	</tr>
</tbody></table>
<p><a name="URI"></a></p>
<h2>Skype <span class="caps">URI</span> handler</h2>
<p>Although not part of the Skype Desktop <span class="caps">API</span>, Skype 1.4 and later include a set of useful commands which can be initiated using the skype <span class="caps">URI</span> handler.</p>
<p><strong>General syntax</strong></p>
<pre style="codeSample">SKYPE_URI    = "skype:" [targets] ["?" query ] ["#" fragment ]
targets      = 1* (target / ";" )
target       = identity / PSTN
identity     = skypename / alias
skypename    = 1*(ALPHA / DIGIT / "." / "," )
skypenames   =  1*( skypename / ";")
alias        =  ... ; see ["TechGroup/DataFormats"]
; unicode chars are in UTF-8 and % encoded; see RFC3987 uchar mapping
PSTN         = "+" (DIGIT / ALPHA ) *(DIGIT / ALPHA / "-" )   ; supports +800-FLOWERS
query        = action [ *( "?" term "=" conditon ) ]
term         = 1*ALPHA
condition    = 1*unserved   ; to be clarified
fragment     = 1*unserved   ; to be clarified</pre>
<p><strong>Skype for Windows 1.4 version handles the following</strong></p>
<pre style="codeSample">skype:                                       ; focus / open skype UI
skype:[targets]                              ; take default double-click action on contact
skype:[targets]?call                         ; call to target(s): can be skypename, alias or PSTN
skype:[skypenames]?chat                      ; start chat/multichat with skypename(s)
skype:[skypename]?voicemail                  ; leave voicemail to skypename
skype:[skypename]?add                        ; add skypename to contactlist; show authorization dialog
skype:[skypename]?add&amp;displayname=customname ; add contact dialog with pre-set displayname
skype:[skypenames]?sendfile                  ; open sendfile dialog to skypenames
skype:[skypename]?userinfo                   ; show info (profile) for [username]
skype:[skypename]?chat&amp;topic=[topic]         ; opens chat with pre-set topic;
skype:?chat&amp;amp;id=[id][#time]               ; open existing multichat with [id];
; time: YYYY-MM-DDThh:mm:ssTZ / YYYY-MM-DDZhh:mm:ss</pre>
<p><strong>Examples</strong></p>
<ul>
	<li>[skype:echo123 skype:echo123]</li>
	<li>[skype:echo123?call skype:echo123?call]</li>
	<li>[skype:echo123?chat skype:echo123?chat]</li>
	<li>[skype:echo123?chat&amp;topic=Test skype:echo123 chat with pre-set topic]</li>
	<li>[skype:echo123?add&amp;displayname=Skype%20Test%Call skype:echo123 add contact as Skype Test Call]</li>
</ul>
<p>Notice that there is no “//” in skype: <span class="caps">URI</span> – <code>skype://echo123 does</code> <strong>not</strong> work.</p>
<p><a name="Release"></a></p>
<h2>Release Notes</h2>
<p><a name="RN_4.0"></a></p>
<h3>Skype 4.0 <span class="caps">GOLD</span> Release Notes</h3>
<p>Date: 2009-01-22</p>
<p>While the Windows 4.0 client release does not bring any new features to the Desktop <span class="caps">API</span>, it does present a major UI overhaul. As a result, some parts of the Desktop <span class="caps">API</span>
 that had dependencies in the UI are no longer functional – the 
corresponding UI parts having been removed or not yet implemented. We 
have tried to keep the list of nonfunctional Desktop <span class="caps">API</span> commands down to minimum. Also note that the commands do not fail with error messages – they just have no effect in the UI.</p>
<p>Here is the list:</p>
<p><strong>Skype Alert Events</strong></p>
<p>The entire custom events system is currently unavailable.</p>
<ul>
	<li><code>CREATE EVENT</code> – unavailable.</li>
	<li><code>DELETE EVENT</code> – unavailable.</li>
</ul>
<p><strong>Skype Custom Menus</strong></p>
<p>In 3.x the create menu command had four different contexts, where the custom menu Items could be created in: <span class="caps">CALL</span>, <span class="caps">MYSELF</span>, <span class="caps">TOOLS</span>, <span class="caps">CONTACT</span>. Currently only <span class="caps">TOOLS</span> context remains functional. <br>
*</p>
<ul>
	<li><code>CREATE MENU_ITEM &lt;ID&gt; CONTEXT CALL CAPTION &lt;text&gt;</code> – unavailable.</li>
	<li><code>CREATE MENU_ITEM &lt;ID&gt; CONTEXT MYSELF CAPTION &lt;text&gt;</code> – unavailable.</li>
	<li><code>CREATE MENU_ITEM &lt;ID&gt; CONTEXT CONTACT CAPTION &lt;text&gt;</code> – unavailable.</li>
</ul>
<p><strong>Send Contacts</strong></p>
<ul>
	<li><code>OPEN SENDCONTACTS</code> – unavailable.</li>
</ul>
<p><a name="RN_3.6"></a></p>
<h3>Skype 3.6. Release Notes</h3>
<p>Date: 2007-10-03</p>
<p><strong>New notification messages:</strong></p>
<ul>
	<li><code>CHAT &lt;id&gt; CLOSED|OPEN</code> – notifications added on chat window open and close events. See <a href="#STATUS_CHAT">Chat notifications section</a> for more information.</li>
</ul>
<p><strong>New commands:</strong></p>
<ul>
	<li><a href="#COMMAND_GET_WINDOWSTATE"><span class="caps">GET</span> <span class="caps">WINDOWSTATE</span></a> – returns current state of the Skype main window.</li>
	<li><a href="#COMMAND_SET_WINDOWSTATE"><span class="caps">SET</span> <span class="caps">WINDOWSTATE</span></a> – sets state of the Skype main window.</li>
</ul>
<p><strong>Varia:</strong></p>
<p>As of ths version various commands no longer accept “¤”, “€” or “£” symbols in their parameters. Instead, <code>ERROR 8 Invalid user handle</code> error message is generated in response. Following commands are affected:</p>
<ul>
	<li><code>CALLVOICEMAIL &lt;handle&gt;</code></li>
	<li><code>GET USER  &lt;handle&gt; HANDLE</code></li>
	<li><code>SEARCH CALLS &lt;handle&gt;</code></li>
	<li><code>SEARCH CHATMESSAGES &lt;handle&gt;</code></li>
	<li><code>SEARCH MESSAGES &lt;handle&gt;</code></li>
</ul>
<p><a name="RN_3.5.0.202"></a></p>
<h3>Skype 3.5.0.202 Release Notes</h3>
<p>Date: 2007-08-07</p>
<p><strong>New <span class="caps">VOICEMAIL</span> object properties:</strong></p>
<ul>
	<li><a href="#OBJECT_VOICEMAIL"><span class="caps">INPUT</span></a></li>
	<li><a href="#OBJECT_VOICEMAIL"><span class="caps">OUTPUT</span></a></li>
	<li><a href="#OBJECT_VOICEMAIL">CAPTURE_MIC</a></li>
</ul>
<p><strong><span class="caps">VOICEMAIL</span> audio stream access commands:</strong></p>
<ul>
	<li><a href="#COMMAND_ALTER_VOICEMAIL_SET_INPUT"><span class="caps">ALTER</span> <span class="caps">VOICEMAIL</span> SET_INPUT</a></li>
	<li><a href="#COMMAND_ALTER_VOICEMAIL_SET_OUTPUT"><span class="caps">ALTER</span> <span class="caps">VOICEMAIL</span> SET_OUTPUT</a></li>
	<li><a href="#COMMAND_ALTER_VOICEMAIL_SET_CAPTURE_MIC"><span class="caps">ALTER</span> <span class="caps">VOICEMAIL</span> SET_CAPTURE_MIC</a></li>
</ul>
<p><a name="RN_3.5"></a></p>
<h3>Skype 3.5 Release Notes</h3>
<p>Date: 2007-07-02</p>
<p>New protocol version: 8</p>
<ul>
	<li>New <a href="#OBJECT_CALL"><span class="caps">CALL</span> <span class="caps">STATUS</span></a> enumerator – <code>WAITING_REDIAL_COMMAND</code>.</li>
</ul>
<ul>
	<li>New <a href="#OBJECT_CALL"><span class="caps">CALL</span> <span class="caps">STATUS</span></a> enumerator – <code>REDIAL_PENDING</code>.</li>
</ul>
<ul>
	<li>New <a href="#OBJECT_SMS"><span class="caps">SMS</span> <span class="caps">FAILUREREASON</span></a> enumerator – <code>NO_SENDERID_CAPABILITY</code>.</li>
</ul>
<ul>
	<li>Sending chat messages and <code>CHAT CREATE</code> commands may now fail with a new error code: 615, “<span class="caps">CHAT</span>: chat with given contact is disabled”.</li>
</ul>
<ul>
	<li>When the UI language is set via custom language file, <code>GET  UI_LANGUAGE</code> will return “xx” (used to return “en” in versions prior to 3.5).</li>
</ul>
<p><a name="RN_3.2"></a></p>
<h3>Skype 3.2 Release Notes</h3>
<p>Date: 2007-04-30</p>
<p><strong>New commands:</strong></p>
<ul>
	<li><a href="#COMMAND_OPEN_LIVETAB"><span class="caps">OPEN</span> <span class="caps">LIVETAB</span></a></li>
	<li><a href="#COMMAND_RESETIDLETIMER"><span class="caps">RESETIDLETIMER</span></a></li>
</ul>
<p><strong>New <span class="caps">USER</span> object property:</strong></p>
<ul>
	<li><a href="#OBJECT_USER">IS_VOICEMAIL_CAPABLE</a></li>
</ul>
<p><a name="RN_3.1"></a></p>
<h3>Skype 3.1 Release Notes</h3>
<p>Date: 2007-04-05</p>
<p><strong>New commands:</strong></p>
<ul>
	<li><a href="#COMMAND_GET_AVATAR"><span class="caps">GET</span> <span class="caps">AVATAR</span></a></li>
	<li><a href="#COMMAND_SET_AVATAR"><span class="caps">SET</span> <span class="caps">AVATAR</span></a></li>
	<li><a href="#COMMAND_GET_USER_AVATAR"><span class="caps">GET</span> <span class="caps">USER</span> <span class="caps">AVATAR</span></a></li>
	<li><a href="#COMMAND_GET_PREDICTIVE_DIALER_COUNTRY"><span class="caps">GET</span> PREDICTIVE_DIALER_COUNTRY</a></li>
	<li><a href="#COMMAND_GET_CONTACTS_FOCUSED"><span class="caps">GET</span> <span class="caps">CONTACTS</span> <span class="caps">FOCUSED</span></a></li>
	<li><a href="#COMMAND_RINGTONE_STATUS"><span class="caps">GET</span> <span class="caps">RINGTONE</span> <span class="caps">STATUS</span></a></li>
</ul>
<p>New <a href="#OBJECT_CALL"><span class="caps">CALL</span></a> property – TARGET_IDENTITY.</p>
<p>New <a href="#OBJECT_CHAT"><span class="caps">CHAT</span></a> property – <span class="caps">TOPICXML</span>.</p>
<p>Error reporting changed for <a href="#COMMAND_SET_VIDEO_IN"><span class="caps">SET</span> VIDEO_IN</a> command.</p>
<p><a name="RN_3.0"></a></p>
<h3>Skype 3.0 Release Notes</h3>
<p>New protocol version: 7</p>
<p><strong>Support for custom menus</strong></p>
<p>Refer to <a href="#CUSTOM_MENU_ITEMS">Custom Menu Items</a> section for more information.</p>
<p><strong>Support for custom events</strong></p>
<p>Refer to <a href="#ALERT_EVENTS">Skype Alert Events</a> for more information.</p>
<p><strong>Call transfer <span class="caps">API</span></strong></p>
<p>New commands and object properties to support call transfers:</p>
<ul>
	<li><a href="#COMMAND_GET_CALL_CAN_TRANSFER"><span class="caps">GET</span> <span class="caps">CALL</span> CAN_TRANSFER</a></li>
	<li><a href="#COMMAND_ALTER_CALL_TRANSFER"><span class="caps">ALTER</span> <span class="caps">CALL</span> <span class="caps">TRANSFER</span></a></li>
</ul>
<p>New <a href="#OBJECT_CALL"><span class="caps">CALL</span></a> statuses:</p>
<ul>
	<li><code>TRANSFERRING</code></li>
	<li><code>TRANSFERRED</code></li>
</ul>
<p>New call transfer related <a href="#OBJECT_CALL"><span class="caps">CALL</span></a> properties:</p>
<ul>
	<li><code>TRANSFER_STATUS</code></li>
	<li><code>TRANSFER_ACTIVE</code></li>
	<li><code>TRANSFERRED_BY</code></li>
	<li><code>TRANSFERRED_TO</code></li>
</ul>
<p><strong>File transfer object</strong></p>
<p>Refer to <a href="#OBJECT_FILETRANSFER"><span class="caps">FILETRANSFER</span> object</a> section for more information.</p>
<p><strong>Notification changes</strong></p>
<ul>
	<li><code>USER LASTONLINETIMESTAMP</code> – events about its change are no longer sent to clients, the property can still be queried.</li>
	<li><code>GROUP NROFUSERS_ONLINE</code> – events about its change are no longer sent to clients, the property can still be queried.</li>
	<li><code>GROUP USERS</code> – events about its change are no longer sent to clients – instead <code>GROUP NROFUSERS</code> event is generated; if you get an event on <code>NROFUSERS</code> you can assume the <code>GROUP USERS</code> has changed.</li>
	<li><code>GROUP NROFUSERS</code> – is now only sent when <code>GROUP USERS</code> property changes.</li>
</ul>
<p><strong>Richtext mood messages</strong></p>
<p>New property <code>RICH_MOOD_TEXT</code> was added to <a href="#OBJECT_PROFILE"><span class="caps">PROFILE</span></a> and <a href="#OBJECT_USER"><span class="caps">USER</span></a> objects.</p>
<p>New moodmessage related commands are:</p>
<ul>
	<li><a href="#COMMAND_SET_PROFILE_RICH_MOOD_TEXT"><span class="caps">SET</span> <span class="caps">PROFILE</span> RICH_MOOD_TEXT</a></li>
	<li><a href="#COMMAND_GET_USER_RICH_MOOD_TEXT"><span class="caps">GET</span> <span class="caps">USER</span> RICH_MOOD_TEXT</a></li>
</ul>
<p><strong>Wallpapers</strong></p>
<p>New <code>GET WALLPAPER</code> and <code>SET WALLPAPER</code> commands. Refer to [#COMMAND_UI_WALLPAPERS <span class="caps">GET</span>/<span class="caps">SET</span> <span class="caps">WALLPAPERS</span>] section.</p>
<p><strong>Public chats</strong></p>
<p>New <a href="#OBJECT_CHATMEMBER"><span class="caps">CHATMEMBER</span></a> object.</p>
<p>New <a href="#OBJECT_CHAT"><span class="caps">CHAT</span></a> object properties:</p>
<ul>
	<li><code>MEMBEROBJECTS</code></li>
	<li><code>PASSWORDHINT</code></li>
	<li><code>GUIDELINES</code></li>
	<li><code>OPTIONS</code></li>
	<li><code>DESCRIPTION</code></li>
	<li><code>DIALOG_PARTNER</code></li>
	<li><code>ACTIVITY_TIMESTAMP</code></li>
	<li><code>TYPE</code></li>
	<li><code>MYSTATUS</code></li>
	<li><code>MYROLE</code></li>
	<li><code>BLOB</code></li>
	<li><code>APPLICANTS</code></li>
</ul>
<p>New <a href="#OBJECT_CHATMESSAGE"><span class="caps">CHATMESSAGE</span></a> properties:</p>
<ul>
	<li><code>EDITED_BY</code></li>
	<li><code>EDITED_TIMESTAMP</code></li>
	<li><code>IS_EDITABLE</code></li>
	<li><code>OPTIONS</code></li>
	<li><code>ROLE</code></li>
</ul>
<p>Modified <a href="#OBJECT_CHATMESSAGE"><span class="caps">CHATMESSAGE</span></a> property <code>TYPE</code> enumerations for <span class="caps">PROTOCOL</span> 7:</p>
<ul>
	<li><code>POSTEDCONTACTS</code></li>
	<li><code>GAP_IN_CHAT</code></li>
	<li><code>SETROLE</code></li>
	<li><code>KICKED</code></li>
	<li><code>SETOPTIONS</code></li>
	<li><code>KICKBANNED</code></li>
	<li><code>JOINEDASAPPLICANT</code></li>
	<li><code>SETPICTURE</code></li>
	<li><code>SETGUIDELINES</code></li>
</ul>
<p>The <code>BODY</code> property of a <code>CHATMESSAGE</code> object is now read-write. Refer to <a href="#COMMAND_SET_CHATMESSAGE_BODY"><span class="caps">SET</span> <span class="caps">CHATMESSAGE</span> <span class="caps">BODY</span></a> command for more information.</p>
<p>New <code>CHATMEMBER</code> related commands are:</p>
<ul>
	<li><a href="#COMMAND_ALTER_CHATMEMBER_SETROLETO"><span class="caps">ALTER</span> <span class="caps">CHATMEMBER</span> <span class="caps">SETROLETO</span></a></li>
	<li><a href="#COMMAND_ALTER_CHATMEMBER_CANSETROLETO"><span class="caps">ALTER</span> <span class="caps">CHATMEMBER</span> <span class="caps">CANSETROLETO</span></a></li>
</ul>
<p>New <span class="caps">CHAT</span> commands:</p>
<ul>
	<li><a href="#COMMAND_ALTER_CHAT_JOIN"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">JOIN</span></a></li>
	<li><a href="#COMMAND_ALTER_CHAT_KICK"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">KICK</span></a></li>
	<li><a href="#COMMAND_ALTER_CHAT_KICKBAN"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">KICKBAN</span></a></li>
	<li><a href="#COMMAND_ALTER_CHAT_DISBAND"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">DISBAND</span></a></li>
	<li><a href="#COMMAND_ALTER_CHAT_ENTERPASSWORD"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">ENTERPASSWORD</span></a></li>
	<li><a href="#COMMAND_ALTER_CLEARRECENTMESSAGES"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">CLEARRECENTMESSAGES</span></a></li>
	<li><a href="#COMMAND_ALTER_CHAT_ACCEPTADD"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">ACCEPTADD</span></a></li>
	<li><a href="#COMMAND_ALTER_CHAT_SETOPTIONS"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETOPTIONS</span></a></li>
	<li><a href="#COMMAND_ALTER_CHAT_SETGUIDELINES"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETGUIDELINES</span></a></li>
	<li><a href="#COMMAND_ALTER_CHAT_SETALERTSTRING"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETALERTSTRING</span></a></li>
	<li><a href="#COMMAND_ALTER_CHAT_SETPASSWORD"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETPASSWORD</span></a></li>
	<li><a href="#COMMAND_CHAT_FINDUSINGBLOB"><span class="caps">CHAT</span> <span class="caps">FINDUSINGBLOB</span></a></li>
	<li><a href="#COMMAND_CHAT_CREATEUSINGBLOB"><span class="caps">CHAT</span> <span class="caps">CREATEUSINGBLOB</span></a></li>
	<li><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">SETDESCRIPTION</span></li>
</ul>
<p><a href="#COMMAND_CHAT_CREATE"><span class="caps">CHAT</span> <span class="caps">CREATE</span></a> no longer requires usernames, if you provide no usernames a general multichat is created.</p>
<p>Change in text value parsing: all texts which include whitespace must be quoted.</p>
<p><a name="RN_2.6"></a></p>
<h3>Skype 2.6 Release notes</h3>
<p><strong>Voice <span class="caps">API</span></strong></p>
<p>New <a href="#OBJECT_CALL"><span class="caps">CALL</span> object</a> properties:</p>
<ul>
	<li><code>INPUT</code></li>
	<li><code>OUTPUT</code></li>
</ul>
<p>New Voice <span class="caps">API</span> related commands:</p>
<ul>
	<li><code>GET CALL &lt;INPUT|OUTPUT&gt;</code></li>
	<li><code>GET CALL CAPTURE_MIC</code></li>
	<li><code>ALTER CALL SET_&lt;INPUT|OUTPUT&gt;</code></li>
	<li><code>ALTER CALL SET_CAPTURE_MIC</code></li>
</ul>
<p>Refer to <a href="#COMMAND_VOICE_STREAMS">Voice Streams</a> section for more information.</p>
<p><strong><span class="caps">SMS</span> <span class="caps">API</span></strong></p>
<p>New object: <a href="#OBJECT_SMS"><span class="caps">SMS</span></a></p>
<p>New <span class="caps">SMS</span> related commands:</p>
<ul>
	<li><a href="#MANAGING_SMS_MESSAGES_CHUNKS"><span class="caps">GET</span> <span class="caps">SMS</span> <span class="caps">CHUNK</span></a></li>
	<li><a href="#MANAGING_SMS_MESSAGES_CHUNKS"><span class="caps">GET</span> <span class="caps">SMS</span> <span class="caps">CHUNKING</span></a></li>
	<li><a href="#COMMAND_SET_SMS_SEEN"><span class="caps">SET</span> <span class="caps">SMS</span> <span class="caps">SEEN</span></a></li>
	<li><a href="#COMMAND_SET_SMS_BODY"><span class="caps">SET</span> <span class="caps">SMS</span> <span class="caps">BODY</span></a></li>
	<li><a href="#COMMAND_SET_SMS_REPLY_TO_NUMBER"><span class="caps">SET</span> <span class="caps">SMS</span> REPLY_TO_NUMBER</a></li>
	<li><a href="#COMMAND_SET_SMS_TARGET_NUMBERS"><span class="caps">SET</span> <span class="caps">SMS</span> TARGET_NUMBERS</a></li>
	<li><a href="#COMMAND_CREATE_SMS"><span class="caps">CREATE</span> <span class="caps">SMSS</span></a></li>
	<li><a href="#COMMAND_ALTER_SMS_SEND"><span class="caps">ALTER</span> <span class="caps">SMS</span> <span class="caps">SEND</span></a></li>
	<li><a href="#MANAGING_SMS_MESSAGES_DELETING"><span class="caps">DELETE</span> <span class="caps">SMSS</span></a></li>
	<li><a href="#COMMAND_SEARCH_SMS"><span class="caps">SEARCH</span> <span class="caps">SMSS</span></a></li>
	<li><a href="#COMMAND_SEARCH_MISSEDSMSS"><span class="caps">SEARCH</span> <span class="caps">MISSEDSMSS</span></a></li>
	<li><a href="#SMS_NUMBER_VALIDATION"><span class="caps">GET</span> <span class="caps">PROFILE</span> SMS_VALIDATED_NUMBERS</a></li>
</ul>
<p><strong>Shared contact groups</strong></p>
<p>New <a href="#OBJECT_GROUP"><span class="caps">GROUP</span> object</a> types, (protocol 6):</p>
<ul>
	<li><code>SHARED_GROUP</code></li>
	<li><code>PROPOSED_SHARED_GROUP</code></li>
</ul>
<p>New commands related to shared groups:</p>
<ul>
	<li><code>ALTER GROUP SHARE</code></li>
	<li><code>ALTER GROUP ACCEPT</code></li>
	<li><code>ALTER GROUP DECLINE</code></li>
</ul>
<p>Refer to <a href="#COMMAND_ALTER_GROUP_SHARE"><span class="caps">ALTER</span> <span class="caps">GROUP</span> <span class="caps">SHARE</span></a> command for more information.</p>
<p><strong>Call cost information</strong></p>
<p>New <a href="#OBJECT_CALL"><span class="caps">CALL</span> object</a> properties</p>
<ul>
	<li><code>RATE</code></li>
	<li><code>RATE_CURRENCY</code></li>
	<li><code>RATE_PRECISION</code></li>
</ul>
<p>Refer to <a href="#CALL_COST_INFO">Call cost information</a> section for more information.</p>
<p><strong>Chat Bookmarks</strong></p>
<p>New <a href="#OBJECT_CHAT"><span class="caps">CHAT</span> object</a> property: <code>BOOKMARKED</code></p>
<p>New commands related to shared groups:</p>
<ul>
	<li><code>ALTER CHAT BOOKMARKED</code></li>
	<li><code>ALTER CHAT UNBOOKMARK</code></li>
</ul>
<p>Refer to <a href="#COMMAND_ALTER_CHAT_BOOKMARKED"><span class="caps">ALTER</span> <span class="caps">CHAT</span> <span class="caps">BOOKMARKED</span></a> section for more information.</p>
<p><strong>Various new object properties:</strong></p>
<ul>
	<li>New <a href="#OBJECT_USER"><span class="caps">USER</span> object</a> property: <code>NROF_AUTHED_BUDDIES</code></li>
	<li>New <a href="#OBJECT_CALL"><span class="caps">CALL</span> object</a> property: <code>FORWARDED_BY</code></li>
	<li>New <a href="#OBJECT_CALL"><span class="caps">CALL</span> object</a> property: <code>VAA_INPUT_STATUS</code></li>
</ul>
<p><strong>Various new commands:</strong></p>
<ul>
	<li><a href="#COMMAND_SILENT_MODE"><span class="caps">SET</span> SILENT_MODE</a></li>
	<li><a href="#COMMAND_SEARCH_MISSEDVOICEMAILS"><span class="caps">SEARCH</span> <span class="caps">MISSEDVOICEMAILS</span></a></li>
	<li><code>GET PROFILE IPCOUNTRY</code> – refer to <a href="#OBJECT_PROFILE"><span class="caps">PROFILE</span> object</a> for more information.</li>
</ul>
<p><code>GET_CONFERENCE_PARTICIPANT_COUNT</code> now reports the number of conference call participants more correctly.</p>
<p><code>VOICEMAIL</code> command enters the deprecation process and is replaced by new command: <a href="#COMMAND_CALLVOICEMAIL"><span class="caps">CALLVOICEMAIL</span></a></p>
<p><code>PONG</code> reply to <code>PING</code> is now asynchronous.</p>
<p><a name="RN_1.4"></a></p>
<h3>Skype 1.4 Release Notes</h3>
<p>Date: 2005-09-16<br>
Changes and fixes:</p>
<ul>
	<li>Support for application to application messaging</li>
	<li>Set profile properties</li>
	<li>Support for call forwarding</li>
	<li>Extended support to open client windows</li>
	<li>New user object properties (mood text, alias)</li>
	<li>Extended support for ringtones</li>
	<li>Support for Skype <span class="caps">URI</span> handler commands</li>
	<li>Support for contact focused notifications</li>
</ul>
<p><a name="RN_1.3.0.42"></a></p>
<h3>Skype 1.3.0.42 release notes</h3>
<p>Date: 2005-06-11<br>
Changes and fixes:</p>
<ul>
	<li>added: Protocol 5</li>
	<li>Support for voicemails: <code>VOICEMAIL, OPEN VOICEMAIL, ALTER VOICEMAIL, SEARCH VOICEMAILS</code></li>
	<li>Support for chat handling: <code>CHAT CREATE, OPEN CHAT, ALTER CHAT, SEARCH *CHATS</code></li>
	<li>Support for authorizations: <code>SEARCH USERSWAITINGMYAUTHORIZATION, SET USER, ISAUTHORIZED, ISBLOCKED, BUDDYSTATUS</code></li>
	<li>Support for deleting history: <code>CLEAR CHATHISTORY, VOICEMAILHISTORY, CALLHISTORY</code></li>
	<li>Set ringing device: <code>SET/GET RINGER</code></li>
	<li>Extended <code>DTMF</code> support: <code>SET CALL DTMF</code></li>
	<li>Initiate filetransfer: <code>OPEN FILETRANSFER</code></li>
	<li>Assign speeddial: <code>USER SPEEDDIAL</code></li>
	<li>Change ringtones: <code>GET/SET RINGTONE</code></li>
	<li>Change avatar: <code>SET AVATAR</code></li>
	<li>Minimize Skype window: <code>MINIMIZE</code></li>
	<li>bugfix: conference call bugs resolved</li>
</ul>
<p><a name="RN_1.2.0.11"></a></p>
<h3>Skype 1.2.0.11 release notes</h3>
<p>Date: 2005-03-04<br>
Changes and fixes:</p>
<ul>
	<li>added: Protocol 4</li>
	<li>Support for conferencing: start a conference, add people to 
conference and being able to get list of conference call participants 
and notifications about these</li>
	<li>Possible to check SkypeOut balance</li>
	<li>Possible to call speeddial numbers</li>
	<li>Notifications about changing audiodevices</li>
	<li>Notification about deleting IM history</li>
	<li>Changed language and country to return <span class="caps">ISO</span> list instead of countrynames – new behaviour: from protocol 4 language and country values are prefixed by <span class="caps">ISO</span> codes, for example <code>'GET USER echo123 COUNTRY' =&gt; 'USER echo123 COUNTRY ee Estonia'</code></li>
	<li>Notification about shutting down Skype</li>
	<li>Support for SkypeIn</li>
	<li>Registry key to disable one second timeout for debugging</li>
	<li>Possibility to add userhandle to <code>OPEN ADDAFRIEND</code></li>
	<li>Support for command-id ( <code>#1 SET xxx</code> )</li>
	<li><code>CALL FAILUREREASON 1</code> – documentation error, changed to say “Misc error”</li>
	<li>change: if <code>CHATMESSAGE</code> property is missing, command <code>'SET CHATMESSAGE id'</code> gives the same error for both existing and nonexisting id</li>
	<li>change: <code>PSTN_STATUS</code> gives error string returned from gateway</li>
	<li>change: <code>HASCALLEQUIPMENT</code> always returns <code>TRUE</code></li>
	<li>change: Up/down via phone api autoexpand contactlist groups</li>
	<li>bugfix: <code>"AUDIO IN"</code> and <code>"AUDIO OUT"</code> commands do nor read double byte driver names correctly</li>
	<li>bugfix: <code>BTN_PRESSED E</code> fails with error 71 invalid key</li>
	<li>bugfix: Muting microphone in UI not reflected in <span class="caps">API</span></li>
	<li>bugfix: Conference to more than 4 participants causes “Range check” errors</li>
	<li>bugfix: <code>IMHISTORYCHANGED</code> doesn’t work</li>
	<li>bugfix: <code>SET MUTE ON</code> returns always <code>MUTE OFF</code></li>
	<li>bugfix: Cannot call SkypeOut contacts using speeddial</li>
	<li>bugfix: No response to empty <code>CALL</code> (should return <span class="caps">ERROR</span> 34 invalid user handles</li>
	<li>bugfix: Skype access control does not deny access to a device</li>
	<li>bugfix: No notification if the user changes audio device</li>
</ul>
<p><a name="RN_1.1.0.61"></a></p>
<h3>Skype 1.1.0.61 release notes</h3>
<p>Date: 2005-01-12<br>
Changes and fixes:</p>
<ul>
	<li>added: Protocol 3</li>
	<li>change: <span class="caps">API</span> – now allows one ongoing 
search per client only. Attempting to issue new search before receiving 
results of a previous one results in error 72.</li>
	<li>change: <code>CHAT</code> and <code>CHATMESSAGE</code> properties</li>
	<li>bugfix: <span class="caps">API</span> showed previous user’s calls and messages</li>
	<li>bugfix: Fixed confusing syntax if protocol 3 is used</li>
	<li>bugfix: <code>SEARCH MESSAGES</code> does not return <code>CHATMESSAGES</code> value anymore if protocol 2 is used</li>
	<li>bugfix: <span class="caps">API</span> displayed only first word of message or fullname</li>
	<li>bugfix: In access control list only one program’s permission was remembered</li>
	<li>bugfix: Multichat message IDs were not returned</li>
	<li>bugfix: Problems with connecting for older applications</li>
	<li>bugfix: Fixed <span class="caps">API</span> exceptions if Skype is used on two Windows accounts simultaneously</li>
	<li>bugfix: On Windows98/ME some dll files were shown to use Skype instead of the respective application</li>
	<li>bugfix: Sometimes <span class="caps">API</span> didn’t return <code>'BUDDYSTATUS 1'</code> messages</li>
</ul>
<p><a name="RN_1.0.0.94"></a></p>
<h3>Skype 1.0.0.94 release notes</h3>
<p>Date: 2004-10-21<br>
Changes and fixes:</p>
<p>Release of Skype Desktop (Public) <span class="caps">API</span>.</p>
  <!--ACCESSORIES CONTENT-->
    </div>
<!--SIDEBAR-->
    <div id="sidebar">
      		
	<div class="promo promoDevBlog first">
<h3>Accessories (Desktop API)</h3>
<ul>
<li><a href="https://developer.skype.com/accessories">Overview</a></li>
<li><a href="https://developer.skype.com/certify-market/legal/desktop-api/terms-of-use">Terms of Use</a></li>
<li><a href="https://developer.skype.com/public-api-reference">API Reference</a></li>
<li><a href="https://developer.skype.com/certification">Certification</a></li>
<li><a href="https://developer.skype.com/skypekit/forum">Forums</a></li>
</ul>
</div>
<div class="promo promoDevBlog">
<h3>Tools &amp; Downloads</h3>

<ul>
<li><a href="https://developer.skype.com/accessories/tracer">Tracer</a></li>
<li><a href="https://developer.skype.com/accessories/skype4com">Skype4COM</a></li>
<li><a href="https://developer.skype.com/skypekit/development-guide/go-to-market/skype-assets">Logo &amp; UI assets</a> (login required)</li>
</ul>
</div>

<div class="promo promoDevBlog">
<h3>Marketing</h3>
<p>(requires login)</p>

<ul>
<li><a href="https://developer.skype.com/skypekit/development-guide/marketing/bgMsgTermIdx">Branding guidelines</a></li>
<li><a href="https://developer.skype.com/skypekit/development-guide/market/shop-publishing-guidelines">Skype Shop</a></li>
<li><a href="https://developer.skype.com/skypekit/development-guide/market/app-directory-publishing-guidelines">Skype App Directory</a></li>
</ul>
</div>
<div class="promo promoDevBlog">
<h3>Case studies</h3>

<ul>
<li><a href="https://developer.skype.com/get-started/case-studies/desktop-api/netralia">Vodburner by Netralia</a></li>
</ul>

</div>
			
    </div>
  </div>
<!--BOTTOM NAVIGATION-->
  

<div id="bottomNavigation"><h2><a href="https://developer.skype.com/">Skype Developer</a></h2></div>
<div id="bottomSubNavigation">
  <dl>
    <dt><a href="https://developer.skype.com/public/skypekit/">SkypeKit</a></dt>
    <dd><a href="https://developer.skype.com/signup">Join program</a></dd>
    <dd><a href="https://developer.skype.com/skypekit/reference/cpp/index.html">C++ Reference</a></dd>
    <dd><a href="https://developer.skype.com/skypekit/reference/java/index.html">Java Reference</a></dd>
    <dd><a href="https://developer.skype.com/skypekit/reference/python/index.html">Python Reference</a></dd>
  </dl>
  <dl>
    <dt><a href="https://developer.skype.com/accessories">Accessories</a></dt>
    <dd><a href="https://developer.skype.com/accessories">Desktop API</a></dd> 
    <dd><a href="https://developer.skype.com/camera/skype-encoding-camera-specification">Encoding cameras</a></dd> 
  </dl>
  <dl>
    <dt><a href="https://developer.skype.com/silk">Codecs</a></dt>
    <dd><a href="https://developer.skype.com/silk">SILK</a></dd>
  </dl>
  <dl>
    <dt><a href="https://developer.skype.com/certification">Certification</a></dt>
    <dd><a href="https://developer.skype.com/certification/accessories">Hardware certification</a></dd>
    <dd><a href="https://developer.skype.com/certification/certified-list">Certified products</a></dd>
    <dd><a href="https://developer.skype.com/certification/odm-program">Approved components</a></dd>
  </dl>
  <dl>
    <dt><a href="https://developer.skype.com/support/">Support</a></dt>
    <dd><a href="https://developer.skype.com/support/">Get help</a></dd>
  </dl>
</div>  
<div id="footer">
    <form id="userPreferencesForm" method="post" action="">
    <ul class="links">
      <li><a href="http://www.skype.com/go/about">About us</a></li>
      <li><a href="http://www.skype.com/go/partners.affiliates">Affiliates</a></li>
      <li><a href="http://www.skype.com/go/jobs">Jobs</a></li>
      <li><a href="http://www.skype.com/go/allrates">Rates</a></li>
      <li><a href="http://www.skype.com/go/security">Security</a></li>
      <li><a href="http://www.3scale.net/">Website hosted by 3Scale</a></li>
    </ul>
    <ul class="links hygeineLinks">
      <li><a href="http://www.skype.com/go/legal.privacy">Privacy policy</a></li>
      <li><a href="http://www.skype.com/go/legal">Legal</a></li>
      <li>© 2012 Skype and/or Microsoft</li>
    </ul>
  </form>
</div>

<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script><script src="documentation_long_files/ga.js" type="text/javascript"></script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-1425156-1");
pageTracker._trackPageview();
} catch(err) {}</script>



<script type="text/javascript">
$(window).load(function () {
  if(window.prettyPrint) {
    prettyPrint();
  }
});
</script>



</div></body></html>